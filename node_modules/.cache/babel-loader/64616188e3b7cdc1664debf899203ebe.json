{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactIntl = require('react-intl');\n\nvar _reactOnclickoutside = require('react-onclickoutside');\n\nvar _reactOnclickoutside2 = _interopRequireDefault(_reactOnclickoutside);\n\nvar _reactDayPicker = require('react-day-picker');\n\nvar _reactTransitionGroup = require('react-transition-group');\n\nvar _classNames = require('../date-picker/classNames');\n\nvar _classNames2 = _interopRequireDefault(_classNames);\n\nvar _datePicker = require('../date-picker');\n\nvar _datePicker2 = _interopRequireDefault(_datePicker);\n\nvar _presets = require('../date-picker/presets');\n\nvar _presets2 = _interopRequireDefault(_presets);\n\nvar _data = require('../date-picker/presets/data');\n\nvar _data2 = _interopRequireDefault(_data);\n\nvar _input = require('../input');\n\nvar _input2 = _interopRequireDefault(_input);\n\nvar _messages = require('./messages');\n\nvar _messages2 = _interopRequireDefault(_messages);\n\nvar _messages3 = require('../date-picker/messages');\n\nvar _messages4 = _interopRequireDefault(_messages3);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar DatePickerInputRange = function (_PureComponent) {\n  _inherits(DatePickerInputRange, _PureComponent);\n\n  function DatePickerInputRange() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, DatePickerInputRange);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DatePickerInputRange.__proto__ || Object.getPrototypeOf(DatePickerInputRange)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      visible: false,\n      hoveredDay: null\n    }, _this.toggleVisible = function () {\n      return _this.setState({\n        visible: !_this.state.visible\n      });\n    }, _this.setHoveredDay = function (day) {\n      return _this.setState({\n        hoveredDay: day\n      });\n    }, _this.handleClickOutside = function () {\n      return _this.setState({\n        visible: false\n      });\n    }, _this.handleChange = function (_ref2) {\n      var from = _ref2.from,\n          to = _ref2.to;\n\n      if (from && to) {\n        _this.toggleVisible();\n      }\n\n      return _this.props.input.onChange({\n        from: from,\n        to: to\n      });\n    }, _this.handleDayClick = function (date) {\n      var input = _this.props.input;\n      var status = {\n        isEmpty: !input.value.from && !input.value.to,\n        isCompleted: input.value.from && input.value.to,\n        isStarted: input.value.from && !input.value.to\n      };\n\n      _this.setHoveredDay(null);\n\n      if (status.isEmpty || status.isCompleted) {\n        return _this.handleChange({\n          from: date,\n          to: null\n        });\n      }\n\n      if (status.isStarted && (_reactDayPicker.DateUtils.isSameDay(date, input.value.from) || _reactDayPicker.DateUtils.isDayAfter(date, input.value.from))) {\n        return _this.handleChange({\n          from: input.value.from,\n          to: date\n        });\n      }\n\n      return _this.handleChange({\n        from: date,\n        to: null\n      });\n    }, _this.handleDayMouseEnter = function (date) {\n      var input = _this.props.input;\n\n      if (input.value.from && !input.value.to && _reactDayPicker.DateUtils.isDayAfter(date, input.value.from)) {\n        return _this.setHoveredDay(date);\n      }\n\n      return _this.setHoveredDay(null);\n    }, _this.humanizeOutputValue = function (value) {\n      var filledLength = Object.values(value).filter(function (a) {\n        return a;\n      }).length;\n\n      if (!filledLength) {\n        return '';\n      }\n\n      return [value.from, value.to].map(function (a) {\n        if (a instanceof Date) {\n          return _this.props.intl.formatDate(a);\n        }\n\n        return _this.props.intl.formatMessage(_messages2.default.selectData);\n      }).join(' â€” ');\n    }, _this.actions = [{\n      label: _this.props.intl.formatMessage(_messages4.default.clear),\n      onClick: function onClick() {\n        _this.handleChange({\n          from: null,\n          to: null\n        });\n\n        _this.toggleVisible();\n      }\n    }], _temp), _possibleConstructorReturn(_this, _ret);\n  } // eslint-disable-line\n\n  /**\n   * Handle change\n   * @param {Date} date\n   * @return {void}\n   */\n\n  /**\n   * Handle click on date\n   * @param {Date} date\n   * @return {void}\n   */\n\n  /**\n   * Highlight background when hovering on a date\n   * @param {Date} date\n   * @return {void}\n   */\n\n  /**\n   * Return humanized value\n   * @param {Value} value\n   * @return {string}\n   */\n\n\n  _createClass(DatePickerInputRange, [{\n    key: 'render',\n    value: function render() {\n      var _ref3;\n\n      var _props = this.props,\n          intl = _props.intl,\n          input = _props.input,\n          meta = _props.meta,\n          size = _props.size,\n          placeholder = _props.placeholder,\n          disabled = _props.disabled,\n          customInput = _props.customInput,\n          presetsData = _props.presetsData,\n          visiblePresets = _props.visiblePresets,\n          visibleClearButton = _props.visibleClearButton,\n          datePickerRestProps = _objectWithoutProperties(_props, ['intl', 'input', 'meta', 'size', 'placeholder', 'disabled', 'customInput', 'presetsData', 'visiblePresets', 'visibleClearButton']);\n\n      var requiredInputProps = {\n        input: {\n          name: input.name,\n          value: this.humanizeOutputValue(input.value),\n          onChange: function onChange() {\n            return void 0;\n          }\n        },\n        meta: meta,\n        size: size,\n        placeholder: placeholder || intl.formatMessage(_messages2.default.placeholder),\n        disabled: disabled,\n        focused: this.state.visible,\n        onClick: this.toggleVisible\n      };\n      return _react2.default.createElement('div', {\n        style: {\n          position: 'relative',\n          display: 'inline-block'\n        }\n      }, customInput ? (0, _react.cloneElement)(customInput(_extends({}, requiredInputProps, {\n        raw: input.value,\n        intl: intl\n      }))) : _react2.default.createElement(_input2.default, _extends({}, requiredInputProps, {\n        icon: 'calendar',\n        offset: 'left-separated',\n        inline: true,\n        readOnly: true\n      })), _react2.default.createElement(_reactTransitionGroup.TransitionGroup, null, this.state.visible && _react2.default.createElement(_reactTransitionGroup.CSSTransition, {\n        classNames: 'slide-transition',\n        timeout: 100\n      }, _react2.default.createElement(_datePicker2.default, _extends({}, datePickerRestProps, {\n        initialMonth: input.value.from ? new Date(input.value.from) : new Date(),\n        selectedDays: [input.value.from, {\n          from: input.value.from,\n          to: input.value.to || this.state.hoveredDay\n        }],\n        modifiers: (_ref3 = {}, _defineProperty(_ref3, _classNames2.default.start, input.value.from), _defineProperty(_ref3, _classNames2.default.startCompleted, input.value.to || this.state.hoveredDay ? input.value.from : null), _defineProperty(_ref3, _classNames2.default.end, input.value.to), _defineProperty(_ref3, _classNames2.default.endHovered, this.state.hoveredDay), _ref3),\n        onDayClick: this.handleDayClick,\n        onDayMouseEnter: this.handleDayMouseEnter,\n        footer: visiblePresets && _react2.default.createElement(_presets2.default, {\n          value: input.value,\n          onChange: this.handleChange,\n          data: presetsData || (0, _data2.default)(intl)\n        }),\n        actions: visibleClearButton ? this.actions : []\n      })))));\n    }\n  }]);\n\n  return DatePickerInputRange;\n}(_react.PureComponent);\n\nDatePickerInputRange.propTypes = Object.assign({}, _input.bpfrpt_proptype_Props === _propTypes2.default.any ? {} : _input.bpfrpt_proptype_Props, _datePicker.bpfrpt_proptype_DatePickerType === _propTypes2.default.any ? {} : _datePicker.bpfrpt_proptype_DatePickerType, {\n  intl: function intl() {\n    return (typeof IntlShape === 'function' ? _propTypes2.default.instanceOf(IntlShape).isRequired : _propTypes2.default.any.isRequired).apply(this, arguments);\n  },\n  customInput: _propTypes2.default.func,\n  presetsData: function presetsData() {\n    return (typeof _presets.bpfrpt_proptype_PresetsData === 'function' ? _presets.bpfrpt_proptype_PresetsData : _propTypes2.default.shape(_presets.bpfrpt_proptype_PresetsData)).apply(this, arguments);\n  },\n  visiblePresets: _propTypes2.default.bool.isRequired,\n  visibleClearButton: _propTypes2.default.bool.isRequired\n});\nDatePickerInputRange.defaultProps = {\n  size: 'sm',\n  numberOfMonths: 2,\n  visiblePresets: false,\n  visibleClearButton: false\n};\nexports.default = (0, _reactIntl.injectIntl)((0, _reactOnclickoutside2.default)(DatePickerInputRange));","map":null,"metadata":{},"sourceType":"script"}