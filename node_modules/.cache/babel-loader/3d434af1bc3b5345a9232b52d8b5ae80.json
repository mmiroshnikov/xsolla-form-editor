{"ast":null,"code":"import _defineProperty from \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/src/components/Layout.js\";\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n    margin: 0 1rem;\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    align-items: center;\\n    align-content: center;\\n    justify-content: center;\\n    margin: 0.5rem;\\n    padding: 0.5rem;\\n    color: #000;\\n    border: 1px solid #ddd;\\n    background: #fff;\\n    border-radius: 3px;\\n    font-size: 1rem;\\n    cursor: pointer;\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    align-items: center;\\n    align-content: center;\\n    justify-content: center;\\n    padding: 0.5rem;\\n    margin: 0 0.5rem 0.5rem;\\n    border: 1px solid transparent;\\n    line-height: 1.5;\\n    color: #aaa;\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n    margin: 0.5rem 0.5rem 1.5rem;\\n    background: #ccc;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    width: 200px;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    border: 1px\\n        \", \";\\n    background: #fff;\\n    padding: 0.5rem 0.5rem 0;\\n    border-radius: 3px;\\n    flex: 0 0 150px;\\n    font-family: sans-serif;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    align-items: center;\\n    align-content: center;\\n    user-select: none;\\n    margin: -0.5rem 0.5rem -0.5rem -0.5rem;\\n    padding: 0.5rem;\\n    line-height: 1.5;\\n    border-radius: 3px 0 0 3px;\\n    background: #fff;\\n    border-right: 1px solid #ddd;\\n    color: #000;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    + div {\\n        display: none !important;\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    user-select: none;\\n    padding: 0.5rem;\\n    margin: 0 0 0.5rem 0;\\n    align-items: flex-start;\\n    align-content: flex-start;\\n    line-height: 1.5;\\n    border-radius: 3px;\\n    background: #fff;\\n    border: 1px \", \";\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    margin-right: 200px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport uuid from 'uuid/v4';\nimport styled from 'styled-components';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'; // import console = require('console');\n// a little function to help us with reordering the result\n\nvar reorder = function reorder(list, startIndex, endIndex) {\n  var result = Array.from(list);\n\n  var _result$splice = result.splice(startIndex, 1),\n      _result$splice2 = _slicedToArray(_result$splice, 1),\n      removed = _result$splice2[0];\n\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n/**\n * Moves an item from one list to another list.\n */\n\n\nvar copy = function copy(source, destination, droppableSource, droppableDestination) {\n  console.log('==> dest', destination);\n  var sourceClone = Array.from(source);\n  var destClone = Array.from(destination);\n  var item = sourceClone[droppableSource.index];\n  destClone.splice(droppableDestination.index, 0, _objectSpread({}, item, {\n    id: uuid()\n  }));\n  return destClone;\n};\n\nvar move = function move(source, destination, droppableSource, droppableDestination) {\n  var sourceClone = Array.from(source);\n  var destClone = Array.from(destination);\n\n  var _sourceClone$splice = sourceClone.splice(droppableSource.index, 1),\n      _sourceClone$splice2 = _slicedToArray(_sourceClone$splice, 1),\n      removed = _sourceClone$splice2[0];\n\n  destClone.splice(droppableDestination.index, 0, removed);\n  var result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nvar Content = styled.div(_templateObject());\nvar Item = styled.div(_templateObject2(), function (props) {\n  return props.isDragging ? 'dashed #4099ff' : 'solid #ddd';\n});\nvar Clone = styled(Item)(_templateObject3());\nvar Handle = styled.div(_templateObject4());\nvar List = styled.div(_templateObject5(), function (props) {\n  return props.isDraggingOver ? 'dashed #000' : 'solid #ddd';\n});\nvar Kiosk = styled(List)(_templateObject6());\nvar Container = styled(List)(_templateObject7());\nvar Notice = styled.div(_templateObject8());\nvar Button = styled.button(_templateObject9());\nvar ButtonText = styled.div(_templateObject10());\nvar ITEMS = [{\n  id: uuid(),\n  content: 'Headline'\n}, {\n  id: uuid(),\n  content: 'Copy'\n}, {\n  id: uuid(),\n  content: 'Image'\n}, {\n  id: uuid(),\n  content: 'Slideshow'\n}, {\n  id: uuid(),\n  content: 'Quote'\n}];\nexport function Layout() {\n  var _this = this;\n\n  var _useState = useState(_defineProperty({}, uuid(), [])),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var onDragEnd = function onDragEnd(result) {\n    var source = result.source,\n        destination = result.destination;\n    console.log('==> result', result); // dropped outside the list\n\n    if (!destination) {\n      return;\n    }\n\n    switch (source.droppableId) {\n      case destination.droppableId:\n        setState(_defineProperty({}, destination.droppableId, reorder(state[source.droppableId], source.index, destination.index)));\n        break;\n\n      case 'ITEMS':\n        setState(_defineProperty({}, destination.droppableId, copy(ITEMS, state[destination.droppableId], source, destination)));\n        break;\n\n      default:\n        setState(move(state[source.droppableId], state[destination.droppableId], source, destination));\n        break;\n    }\n  };\n\n  var addList = function addList(e) {\n    setState(_defineProperty({}, uuid(), []));\n  }; // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n\n\n  return /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: \"ITEMS\",\n    isDropDisabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, function (provided, snapshot) {\n    return /*#__PURE__*/React.createElement(Kiosk, {\n      innerRef: provided.innerRef,\n      isDraggingOver: snapshot.isDraggingOver,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }, ITEMS.map(function (item, index) {\n      return /*#__PURE__*/React.createElement(Draggable, {\n        key: item.id,\n        draggableId: item.id,\n        index: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 33\n        }\n      }, function (provided, snapshot) {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Item, Object.assign({\n          innerRef: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps, {\n          isDragging: snapshot.isDragging,\n          style: provided.draggableProps.style,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 45\n          }\n        }), item.content), snapshot.isDragging && /*#__PURE__*/React.createElement(Clone, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 49\n          }\n        }, item.content));\n      });\n    }));\n  }), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: addList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(ButtonText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 25\n    }\n  }, \"Add List\")), Object.keys(state).map(function (list, i) {\n    console.log('==> list', list);\n    return /*#__PURE__*/React.createElement(Droppable, {\n      key: list,\n      droppableId: list,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 29\n      }\n    }, function (provided, snapshot) {\n      return /*#__PURE__*/React.createElement(Container, {\n        innerRef: provided.innerRef,\n        isDraggingOver: snapshot.isDraggingOver,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 37\n        }\n      }, state[list].length ? state[list].map(function (item, index) {\n        return /*#__PURE__*/React.createElement(Draggable, {\n          key: item.id,\n          draggableId: item.id,\n          index: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 55\n          }\n        }, function (provided, snapshot) {\n          return /*#__PURE__*/React.createElement(Item, Object.assign({\n            innerRef: provided.innerRef\n          }, provided.draggableProps, {\n            isDragging: snapshot.isDragging,\n            style: provided.draggableProps.style,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 63\n            }\n          }), /*#__PURE__*/React.createElement(Handle, Object.assign({}, provided.dragHandleProps, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 67\n            }\n          }), /*#__PURE__*/React.createElement(\"svg\", {\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 71\n            }\n          }, /*#__PURE__*/React.createElement(\"path\", {\n            fill: \"currentColor\",\n            d: \"M3,15H21V13H3V15M3,19H21V17H3V19M3,11H21V9H3V11M3,5V7H21V5H3Z\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 75\n            }\n          }))), item.content);\n        });\n      }) : !provided.placeholder && /*#__PURE__*/React.createElement(Notice, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 51\n        }\n      }, \"Drop items here\"), provided.placeholder);\n    });\n  })));\n} // Put the things into the DOM!\n// ReactDOM.render(<App />, document.getElementById('root'));","map":{"version":3,"sources":["/Users/maiik/Xsolla_HTML2/xsolla-form-editor/src/components/Layout.js"],"names":["React","Component","useState","ReactDOM","uuid","styled","DragDropContext","Droppable","Draggable","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","copy","source","destination","droppableSource","droppableDestination","console","log","sourceClone","destClone","item","index","id","move","droppableId","Content","div","Item","props","isDragging","Clone","Handle","List","isDraggingOver","Kiosk","Container","Notice","Button","button","ButtonText","ITEMS","content","Layout","state","setState","onDragEnd","addList","e","provided","snapshot","innerRef","map","draggableProps","dragHandleProps","style","Object","keys","i","length","placeholder"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport uuid from 'uuid/v4';\nimport styled from 'styled-components';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n// import console = require('console');\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n/**\n * Moves an item from one list to another list.\n */\nconst copy = (source, destination, droppableSource, droppableDestination) => {\n    console.log('==> dest', destination);\n\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const item = sourceClone[droppableSource.index];\n\n    destClone.splice(droppableDestination.index, 0, { ...item, id: uuid() });\n    return destClone;\n};\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nconst Content = styled.div`\n    margin-right: 200px;\n`;\n\nconst Item = styled.div`\n    display: flex;\n    user-select: none;\n    padding: 0.5rem;\n    margin: 0 0 0.5rem 0;\n    align-items: flex-start;\n    align-content: flex-start;\n    line-height: 1.5;\n    border-radius: 3px;\n    background: #fff;\n    border: 1px ${props => (props.isDragging ? 'dashed #4099ff' : 'solid #ddd')};\n`;\n\nconst Clone = styled(Item)`\n    + div {\n        display: none !important;\n    }\n`;\n\nconst Handle = styled.div`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    user-select: none;\n    margin: -0.5rem 0.5rem -0.5rem -0.5rem;\n    padding: 0.5rem;\n    line-height: 1.5;\n    border-radius: 3px 0 0 3px;\n    background: #fff;\n    border-right: 1px solid #ddd;\n    color: #000;\n`;\n\nconst List = styled.div`\n    border: 1px\n        ${props => (props.isDraggingOver ? 'dashed #000' : 'solid #ddd')};\n    background: #fff;\n    padding: 0.5rem 0.5rem 0;\n    border-radius: 3px;\n    flex: 0 0 150px;\n    font-family: sans-serif;\n`;\n\nconst Kiosk = styled(List)`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 200px;\n`;\n\nconst Container = styled(List)`\n    margin: 0.5rem 0.5rem 1.5rem;\n    background: #ccc;\n`;\n\nconst Notice = styled.div`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    justify-content: center;\n    padding: 0.5rem;\n    margin: 0 0.5rem 0.5rem;\n    border: 1px solid transparent;\n    line-height: 1.5;\n    color: #aaa;\n`;\n\nconst Button = styled.button`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    justify-content: center;\n    margin: 0.5rem;\n    padding: 0.5rem;\n    color: #000;\n    border: 1px solid #ddd;\n    background: #fff;\n    border-radius: 3px;\n    font-size: 1rem;\n    cursor: pointer;\n`;\n\nconst ButtonText = styled.div`\n    margin: 0 1rem;\n`;\n\nconst ITEMS = [\n    {\n        id: uuid(),\n        content: 'Headline'\n    },\n    {\n        id: uuid(),\n        content: 'Copy'\n    },\n    {\n        id: uuid(),\n        content: 'Image'\n    },\n    {\n        id: uuid(),\n        content: 'Slideshow'\n    },\n    {\n        id: uuid(),\n        content: 'Quote'\n    }\n];\n\nexport function Layout() {\n\n    const [state, setState] = useState({[uuid()]: []})\n\n    const onDragEnd = result => {\n        const { source, destination } = result;\n\n        console.log('==> result', result);\n\n        // dropped outside the list\n        if (!destination) {\n            return;\n        }\n\n        switch (source.droppableId) {\n            case destination.droppableId:\n                setState({\n                    [destination.droppableId]: reorder(\n                        state[source.droppableId],\n                        source.index,\n                        destination.index\n                    )\n                });\n                break;\n            case 'ITEMS':\n                setState({\n                    [destination.droppableId]: copy(\n                        ITEMS,\n                        state[destination.droppableId],\n                        source,\n                        destination\n                    )\n                });\n                break;\n            default:\n                setState(\n                    move(\n                        state[source.droppableId],\n                        state[destination.droppableId],\n                        source,\n                        destination\n                    )\n                );\n                break;\n        }\n    };\n\n    const addList = e => {\n        setState({ [uuid()]: [] });\n    };\n\n    // Normally you would want to split things out into separate components.\n    // But in this example everything is just done in one place for simplicity\n\n        return (\n            <DragDropContext onDragEnd={onDragEnd}>\n                <Droppable droppableId=\"ITEMS\" isDropDisabled={true}>\n                    {(provided, snapshot) => (\n                        <Kiosk\n                            innerRef={provided.innerRef}\n                            isDraggingOver={snapshot.isDraggingOver}>\n                            {ITEMS.map((item, index) => (\n                                <Draggable\n                                    key={item.id}\n                                    draggableId={item.id}\n                                    index={index}>\n                                    {(provided, snapshot) => (\n                                        <React.Fragment>\n                                            <Item\n                                                innerRef={provided.innerRef}\n                                                {...provided.draggableProps}\n                                                {...provided.dragHandleProps}\n                                                isDragging={snapshot.isDragging}\n                                                style={\n                                                    provided.draggableProps\n                                                        .style\n                                                }>\n                                                {item.content}\n                                            </Item>\n                                            {snapshot.isDragging && (\n                                                <Clone>{item.content}</Clone>\n                                            )}\n                                        </React.Fragment>\n                                    )}\n                                </Draggable>\n                            ))}\n                        </Kiosk>\n                    )}\n                </Droppable>\n                <Content>\n                    <Button onClick={addList}>\n                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                            <path\n                                fill=\"currentColor\"\n                                d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\"\n                            />\n                        </svg>\n                        <ButtonText>Add List</ButtonText>\n                    </Button>\n                    {Object.keys(state).map((list, i) => {\n                        console.log('==> list', list);\n                        return (\n                            <Droppable key={list} droppableId={list}>\n                                {(provided, snapshot) => (\n                                    <Container\n                                        innerRef={provided.innerRef}\n                                        isDraggingOver={\n                                            snapshot.isDraggingOver\n                                        }>\n                                        {state[list].length\n                                            ? state[list].map(\n                                                  (item, index) => (\n                                                      <Draggable\n                                                          key={item.id}\n                                                          draggableId={item.id}\n                                                          index={index}>\n                                                          {(\n                                                              provided,\n                                                              snapshot\n                                                          ) => (\n                                                              <Item\n                                                                  innerRef={\n                                                                      provided.innerRef\n                                                                  }\n                                                                  {...provided.draggableProps}\n                                                                  isDragging={\n                                                                      snapshot.isDragging\n                                                                  }\n                                                                  style={\n                                                                      provided\n                                                                          .draggableProps\n                                                                          .style\n                                                                  }>\n                                                                  <Handle\n                                                                      {...provided.dragHandleProps}>\n                                                                      <svg\n                                                                          width=\"24\"\n                                                                          height=\"24\"\n                                                                          viewBox=\"0 0 24 24\">\n                                                                          <path\n                                                                              fill=\"currentColor\"\n                                                                              d=\"M3,15H21V13H3V15M3,19H21V17H3V19M3,11H21V9H3V11M3,5V7H21V5H3Z\"\n                                                                          />\n                                                                      </svg>\n                                                                  </Handle>\n                                                                  {item.content}\n                                                              </Item>\n                                                          )}\n                                                      </Draggable>\n                                                  )\n                                              )\n                                            : !provided.placeholder && (\n                                                  <Notice>\n                                                      Drop items here\n                                                  </Notice>\n                                              )}\n                                        {provided.placeholder}\n                                    </Container>\n                                )}\n                            </Droppable>\n                        );\n                    })}\n                </Content>\n            </DragDropContext>\n        );\n\n}\n\n// Put the things into the DOM!\n// ReactDOM.render(<App />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}