{"ast":null,"code":"import _defineProperty from \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/src/components/Layout.js\";\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 0 1rem;\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  align-content: center;\\n  justify-content: center;\\n  margin: 0.5rem;\\n  padding: 0.5rem;\\n  color: #000;\\n  border: 1px solid #ddd;\\n  background: #fff;\\n  border-radius: 3px;\\n  font-size: 1rem;\\n  cursor: pointer;\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  align-content: center;\\n  justify-content: center;\\n  padding: 0.5rem;\\n  margin: 0 0.5rem 0.5rem;\\n  border: 1px solid transparent;\\n  line-height: 1.5;\\n  color: #aaa;\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 0.5rem 0.5rem 1.5rem;\\n  background: #ccc;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  width: 200px;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  border: 1px\\n    \", \";\\n  background: #fff;\\n  padding: 0.5rem 0.5rem 0;\\n  border-radius: 3px;\\n  flex: 0 0 150px;\\n  font-family: sans-serif;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  align-content: center;\\n  user-select: none;\\n  margin: -0.5rem 0.5rem -0.5rem -0.5rem;\\n  padding: 0.5rem;\\n  line-height: 1.5;\\n  border-radius: 3px 0 0 3px;\\n  background: #fff;\\n  border-right: 1px solid #ddd;\\n  color: #000;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  + div {\\n    display: none !important;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  user-select: none;\\n  padding: 0.5rem;\\n  margin: 0 0 0.5rem 0;\\n  align-items: flex-start;\\n  align-content: flex-start;\\n  line-height: 1.5;\\n  border-radius: 3px;\\n  background: #fff;\\n  border: 1px\\n    \", \";\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-right: 200px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport uuid from 'uuid/v4';\nimport styled from 'styled-components';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'; // import console = require('console');\n// a little function to help us with reordering the result\n\nvar reorder = function reorder(list, startIndex, endIndex) {\n  var result = Array.from(list);\n\n  var _result$splice = result.splice(startIndex, 1),\n      _result$splice2 = _slicedToArray(_result$splice, 1),\n      removed = _result$splice2[0];\n\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n/**\n * Moves an item from one list to another list.\n */\n\n\nvar copy = function copy(source, destination, droppableSource, droppableDestination) {\n  console.log('==> dest', destination);\n  var sourceClone = Array.from(source);\n  var destClone = Array.from(destination);\n  var item = sourceClone[droppableSource.index];\n  destClone.splice(droppableDestination.index, 0, _objectSpread({}, item, {\n    id: uuid()\n  }));\n  return destClone;\n};\n\nvar move = function move(source, destination, droppableSource, droppableDestination) {\n  var sourceClone = Array.from(source);\n  var destClone = Array.from(destination);\n\n  var _sourceClone$splice = sourceClone.splice(droppableSource.index, 1),\n      _sourceClone$splice2 = _slicedToArray(_sourceClone$splice, 1),\n      removed = _sourceClone$splice2[0];\n\n  destClone.splice(droppableDestination.index, 0, removed);\n  var result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nvar Content = styled.div(_templateObject());\nvar Item = styled.div(_templateObject2(), function (props) {\n  return props.isDragging ? 'dashed #4099ff' : 'solid #ddd';\n});\nvar Clone = styled(Item)(_templateObject3());\nvar Handle = styled.div(_templateObject4());\nvar List = styled.div(_templateObject5(), function (props) {\n  return props.isDraggingOver ? 'dashed #000' : 'solid #ddd';\n});\nvar Kiosk = styled(List)(_templateObject6());\nvar Container = styled(List)(_templateObject7());\nvar Notice = styled.div(_templateObject8());\nvar Button = styled.button(_templateObject9());\nvar ButtonText = styled.div(_templateObject10());\nvar ITEMS = [{\n  id: uuid(),\n  content: 'Headline'\n}, {\n  id: uuid(),\n  content: 'Copy'\n}, {\n  id: uuid(),\n  content: 'Image'\n}, {\n  id: uuid(),\n  content: 'Slideshow'\n}, {\n  id: uuid(),\n  content: 'Quote'\n}];\nexport function Layout() {\n  var _this = this;\n\n  var _useState = useState(_defineProperty({}, uuid(), [])),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var onDragEnd = function onDragEnd(result) {\n    var source = result.source,\n        destination = result.destination;\n    console.log('==> result', result); // dropped outside the list\n\n    if (!destination) {\n      return;\n    }\n\n    switch (source.droppableId) {\n      case destination.droppableId:\n        setState(_defineProperty({}, destination.droppableId, reorder(state[source.droppableId], source.index, destination.index)));\n        break;\n\n      case 'ITEMS':\n        setState(_defineProperty({}, destination.droppableId, copy(ITEMS, state[destination.droppableId], source, destination)));\n        break;\n\n      default:\n        setState(move(state[source.droppableId], state[destination.droppableId], source, destination));\n        break;\n    }\n  };\n\n  var addList = function addList(e) {\n    setState(_defineProperty({}, uuid(), []));\n  };\n\n  return /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: \"ITEMS\",\n    isDropDisabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, function (provided, snapshot) {\n    return /*#__PURE__*/React.createElement(Kiosk, {\n      innerRef: provided.innerRef,\n      isDraggingOver: snapshot.isDraggingOver,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    }, ITEMS.map(function (item, index) {\n      return /*#__PURE__*/React.createElement(Draggable, {\n        key: item.id,\n        draggableId: item.id,\n        index: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }\n      }, function (provided, snapshot) {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Item, Object.assign({\n          innerRef: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps, {\n          isDragging: snapshot.isDragging,\n          style: provided.draggableProps.style,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 21\n          }\n        }), item.content), snapshot.isDragging && /*#__PURE__*/React.createElement(Clone, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 23\n          }\n        }, item.content));\n      });\n    }));\n  }), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: addList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ButtonText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, \"Add List\")), Object.keys(state).map(function (list, i) {\n    console.log('==> list', list);\n    return /*#__PURE__*/React.createElement(Droppable, {\n      key: list,\n      droppableId: list,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }\n    }, function (provided, snapshot) {\n      return /*#__PURE__*/React.createElement(Container, {\n        innerRef: provided.innerRef,\n        isDraggingOver: snapshot.isDraggingOver,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }\n      }, state[list].length ? state[list].map(function (item, index) {\n        return /*#__PURE__*/React.createElement(Draggable, {\n          key: item.id,\n          draggableId: item.id,\n          index: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }\n        }, function (provided, snapshot) {\n          return /*#__PURE__*/React.createElement(Item, Object.assign({\n            innerRef: provided.innerRef\n          }, provided.draggableProps, {\n            isDragging: snapshot.isDragging,\n            style: provided.draggableProps.style,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }\n          }), /*#__PURE__*/React.createElement(Handle, Object.assign({}, provided.dragHandleProps, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 31\n            }\n          }), /*#__PURE__*/React.createElement(\"svg\", {\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"path\", {\n            fill: \"currentColor\",\n            d: \"M3,15H21V13H3V15M3,19H21V17H3V19M3,11H21V9H3V11M3,5V7H21V5H3Z\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 35\n            }\n          }))), item.content);\n        });\n      }) : !provided.placeholder && /*#__PURE__*/React.createElement(Notice, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }\n      }, \"Drop items here\"), provided.placeholder);\n    });\n  })));\n} // Put the things into the DOM!\n// ReactDOM.render(<App />, document.getElementById('root'));","map":{"version":3,"sources":["/Users/maiik/Xsolla_HTML2/xsolla-form-editor/src/components/Layout.js"],"names":["React","Component","useState","ReactDOM","uuid","styled","DragDropContext","Droppable","Draggable","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","copy","source","destination","droppableSource","droppableDestination","console","log","sourceClone","destClone","item","index","id","move","droppableId","Content","div","Item","props","isDragging","Clone","Handle","List","isDraggingOver","Kiosk","Container","Notice","Button","button","ButtonText","ITEMS","content","Layout","state","setState","onDragEnd","addList","e","provided","snapshot","innerRef","map","draggableProps","dragHandleProps","style","Object","keys","i","length","placeholder"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SACEC,eADF,EAEEC,SAFF,EAGEC,SAHF,QAIO,qBAJP,C,CAKA;AAEA;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAOC,UAAP,EAAmBC,QAAnB,EAAgC;AAC9C,MAAMC,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAWL,IAAX,CAAf;;AAD8C,uBAE5BG,MAAM,CAACG,MAAP,CAAcL,UAAd,EAA0B,CAA1B,CAF4B;AAAA;AAAA,MAEvCM,OAFuC;;AAG9CJ,EAAAA,MAAM,CAACG,MAAP,CAAcJ,QAAd,EAAwB,CAAxB,EAA2BK,OAA3B;AAEA,SAAOJ,MAAP;AACD,CAND;AAOA;;;;;AAGA,IAAMK,IAAI,GAAG,SAAPA,IAAO,CACXC,MADW,EAEXC,WAFW,EAGXC,eAHW,EAIXC,oBAJW,EAKR;AACHC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,WAAxB;AAEA,MAAMK,WAAW,GAAGX,KAAK,CAACC,IAAN,CAAWI,MAAX,CAApB;AACA,MAAMO,SAAS,GAAGZ,KAAK,CAACC,IAAN,CAAWK,WAAX,CAAlB;AACA,MAAMO,IAAI,GAAGF,WAAW,CAACJ,eAAe,CAACO,KAAjB,CAAxB;AAEAF,EAAAA,SAAS,CAACV,MAAV,CAAiBM,oBAAoB,CAACM,KAAtC,EAA6C,CAA7C,oBACKD,IADL;AAEEE,IAAAA,EAAE,EAAEzB,IAAI;AAFV;AAIA,SAAOsB,SAAP;AACD,CAjBD;;AAmBA,IAAMI,IAAI,GAAG,SAAPA,IAAO,CACXX,MADW,EAEXC,WAFW,EAGXC,eAHW,EAIXC,oBAJW,EAKR;AACH,MAAMG,WAAW,GAAGX,KAAK,CAACC,IAAN,CAAWI,MAAX,CAApB;AACA,MAAMO,SAAS,GAAGZ,KAAK,CAACC,IAAN,CAAWK,WAAX,CAAlB;;AAFG,4BAGeK,WAAW,CAACT,MAAZ,CAAmBK,eAAe,CAACO,KAAnC,EAA0C,CAA1C,CAHf;AAAA;AAAA,MAGIX,OAHJ;;AAKHS,EAAAA,SAAS,CAACV,MAAV,CAAiBM,oBAAoB,CAACM,KAAtC,EAA6C,CAA7C,EAAgDX,OAAhD;AAEA,MAAMJ,MAAM,GAAG,EAAf;AACAA,EAAAA,MAAM,CAACQ,eAAe,CAACU,WAAjB,CAAN,GAAsCN,WAAtC;AACAZ,EAAAA,MAAM,CAACS,oBAAoB,CAACS,WAAtB,CAAN,GAA2CL,SAA3C;AAEA,SAAOb,MAAP;AACD,CAjBD;;AAmBA,IAAMmB,OAAO,GAAG3B,MAAM,CAAC4B,GAAV,mBAAb;AAIA,IAAMC,IAAI,GAAG7B,MAAM,CAAC4B,GAAV,qBAWJ,UAAAE,KAAK;AAAA,SAAKA,KAAK,CAACC,UAAN,GAAmB,gBAAnB,GAAsC,YAA3C;AAAA,CAXD,CAAV;AAcA,IAAMC,KAAK,GAAGhC,MAAM,CAAC6B,IAAD,CAAT,oBAAX;AAMA,IAAMI,MAAM,GAAGjC,MAAM,CAAC4B,GAAV,oBAAZ;AAcA,IAAMM,IAAI,GAAGlC,MAAM,CAAC4B,GAAV,qBAEJ,UAAAE,KAAK;AAAA,SAAKA,KAAK,CAACK,cAAN,GAAuB,aAAvB,GAAuC,YAA5C;AAAA,CAFD,CAAV;AAUA,IAAMC,KAAK,GAAGpC,MAAM,CAACkC,IAAD,CAAT,oBAAX;AAQA,IAAMG,SAAS,GAAGrC,MAAM,CAACkC,IAAD,CAAT,oBAAf;AAKA,IAAMI,MAAM,GAAGtC,MAAM,CAAC4B,GAAV,oBAAZ;AAYA,IAAMW,MAAM,GAAGvC,MAAM,CAACwC,MAAV,oBAAZ;AAeA,IAAMC,UAAU,GAAGzC,MAAM,CAAC4B,GAAV,qBAAhB;AAIA,IAAMc,KAAK,GAAG,CACZ;AACElB,EAAAA,EAAE,EAAEzB,IAAI,EADV;AAEE4C,EAAAA,OAAO,EAAE;AAFX,CADY,EAKZ;AACEnB,EAAAA,EAAE,EAAEzB,IAAI,EADV;AAEE4C,EAAAA,OAAO,EAAE;AAFX,CALY,EASZ;AACEnB,EAAAA,EAAE,EAAEzB,IAAI,EADV;AAEE4C,EAAAA,OAAO,EAAE;AAFX,CATY,EAaZ;AACEnB,EAAAA,EAAE,EAAEzB,IAAI,EADV;AAEE4C,EAAAA,OAAO,EAAE;AAFX,CAbY,EAiBZ;AACEnB,EAAAA,EAAE,EAAEzB,IAAI,EADV;AAEE4C,EAAAA,OAAO,EAAE;AAFX,CAjBY,CAAd;AAuBA,OAAO,SAASC,MAAT,GAAkB;AAAA;;AAAA,kBAEG/C,QAAQ,qBAAIE,IAAI,EAAR,EAAa,EAAb,EAFX;AAAA;AAAA,MAEhB8C,KAFgB;AAAA,MAETC,QAFS;;AAIvB,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAvC,MAAM,EAAI;AAAA,QAClBM,MADkB,GACMN,MADN,CAClBM,MADkB;AAAA,QACVC,WADU,GACMP,MADN,CACVO,WADU;AAG1BG,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BX,MAA1B,EAH0B,CAK1B;;AACA,QAAI,CAACO,WAAL,EAAkB;AAChB;AACD;;AAED,YAAQD,MAAM,CAACY,WAAf;AACE,WAAKX,WAAW,CAACW,WAAjB;AACEoB,QAAAA,QAAQ,qBACL/B,WAAW,CAACW,WADP,EACqBtB,OAAO,CAChCyC,KAAK,CAAC/B,MAAM,CAACY,WAAR,CAD2B,EAEhCZ,MAAM,CAACS,KAFyB,EAGhCR,WAAW,CAACQ,KAHoB,CAD5B,EAAR;AAOA;;AACF,WAAK,OAAL;AACEuB,QAAAA,QAAQ,qBACL/B,WAAW,CAACW,WADP,EACqBb,IAAI,CAC7B6B,KAD6B,EAE7BG,KAAK,CAAC9B,WAAW,CAACW,WAAb,CAFwB,EAG7BZ,MAH6B,EAI7BC,WAJ6B,CADzB,EAAR;AAQA;;AACF;AACE+B,QAAAA,QAAQ,CACNrB,IAAI,CACFoB,KAAK,CAAC/B,MAAM,CAACY,WAAR,CADH,EAEFmB,KAAK,CAAC9B,WAAW,CAACW,WAAb,CAFH,EAGFZ,MAHE,EAIFC,WAJE,CADE,CAAR;AAQA;AA7BJ;AA+BD,GAzCD;;AA2CA,MAAMiC,OAAO,GAAG,SAAVA,OAAU,CAAAC,CAAC,EAAI;AACnBH,IAAAA,QAAQ,qBAAI/C,IAAI,EAAR,EAAa,EAAb,EAAR;AACD,GAFD;;AAIA,sBACE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAEgD,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,OAAvB;AAA+B,IAAA,cAAc,EAAE,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAACG,QAAD,EAAWC,QAAX;AAAA,wBACC,oBAAC,KAAD;AACE,MAAA,QAAQ,EAAED,QAAQ,CAACE,QADrB;AAEE,MAAA,cAAc,EAAED,QAAQ,CAAChB,cAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGO,KAAK,CAACW,GAAN,CAAU,UAAC/B,IAAD,EAAOC,KAAP;AAAA,0BACT,oBAAC,SAAD;AACE,QAAA,GAAG,EAAED,IAAI,CAACE,EADZ;AAEE,QAAA,WAAW,EAAEF,IAAI,CAACE,EAFpB;AAGE,QAAA,KAAK,EAAED,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,UAAC2B,QAAD,EAAWC,QAAX;AAAA,4BACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,IAAD;AACE,UAAA,QAAQ,EAAED,QAAQ,CAACE;AADrB,WAEMF,QAAQ,CAACI,cAFf,EAGMJ,QAAQ,CAACK,eAHf;AAIE,UAAA,UAAU,EAAEJ,QAAQ,CAACpB,UAJvB;AAKE,UAAA,KAAK,EAAEmB,QAAQ,CAACI,cAAT,CAAwBE,KALjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAOGlC,IAAI,CAACqB,OAPR,CADF,EAUGQ,QAAQ,CAACpB,UAAT,iBACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAQT,IAAI,CAACqB,OAAb,CAXJ,CADD;AAAA,OALH,CADS;AAAA,KAAV,CAJH,CADD;AAAA,GADH,CADF,eAmCE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEK,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,IAAX;AAAgB,IAAA,MAAM,EAAC,IAAvB;AAA4B,IAAA,OAAO,EAAC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,CAAC,EAAC,2CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAOE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF,EAUGS,MAAM,CAACC,IAAP,CAAYb,KAAZ,EAAmBQ,GAAnB,CAAuB,UAAChD,IAAD,EAAOsD,CAAP,EAAa;AACnCzC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBd,IAAxB;AACA,wBACE,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,IAAhB;AAAsB,MAAA,WAAW,EAAEA,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,UAAC6C,QAAD,EAAWC,QAAX;AAAA,0BACC,oBAAC,SAAD;AACE,QAAA,QAAQ,EAAED,QAAQ,CAACE,QADrB;AAEE,QAAA,cAAc,EAAED,QAAQ,CAAChB,cAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGU,KAAK,CAACxC,IAAD,CAAL,CAAYuD,MAAZ,GACGf,KAAK,CAACxC,IAAD,CAAL,CAAYgD,GAAZ,CAAgB,UAAC/B,IAAD,EAAOC,KAAP;AAAA,4BACd,oBAAC,SAAD;AACE,UAAA,GAAG,EAAED,IAAI,CAACE,EADZ;AAEE,UAAA,WAAW,EAAEF,IAAI,CAACE,EAFpB;AAGE,UAAA,KAAK,EAAED,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKG,UAAC2B,QAAD,EAAWC,QAAX;AAAA,8BACC,oBAAC,IAAD;AACE,YAAA,QAAQ,EAAED,QAAQ,CAACE;AADrB,aAEMF,QAAQ,CAACI,cAFf;AAGE,YAAA,UAAU,EAAEH,QAAQ,CAACpB,UAHvB;AAIE,YAAA,KAAK,EAAEmB,QAAQ,CAACI,cAAT,CAAwBE,KAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAME,oBAAC,MAAD,oBAAYN,QAAQ,CAACK,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACE;AACE,YAAA,KAAK,EAAC,IADR;AAEE,YAAA,MAAM,EAAC,IAFT;AAGE,YAAA,OAAO,EAAC,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAKE;AACE,YAAA,IAAI,EAAC,cADP;AAEE,YAAA,CAAC,EAAC,+DAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,CADF,CANF,EAkBGjC,IAAI,CAACqB,OAlBR,CADD;AAAA,SALH,CADc;AAAA,OAAhB,CADH,GA+BG,CAACO,QAAQ,CAACW,WAAV,iBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BApCR,EAsCGX,QAAQ,CAACW,WAtCZ,CADD;AAAA,KADH,CADF;AA8CD,GAhDA,CAVH,CAnCF,CADF;AAkGD,C,CAED;AACA","sourcesContent":["import React, { Component, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport uuid from 'uuid/v4'\nimport styled from 'styled-components'\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable\n} from 'react-beautiful-dnd'\n// import console = require('console');\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list)\n  const [removed] = result.splice(startIndex, 1)\n  result.splice(endIndex, 0, removed)\n\n  return result\n}\n/**\n * Moves an item from one list to another list.\n */\nconst copy = (\n  source,\n  destination,\n  droppableSource,\n  droppableDestination\n) => {\n  console.log('==> dest', destination)\n\n  const sourceClone = Array.from(source)\n  const destClone = Array.from(destination)\n  const item = sourceClone[droppableSource.index]\n\n  destClone.splice(droppableDestination.index, 0, {\n    ...item,\n    id: uuid()\n  })\n  return destClone\n}\n\nconst move = (\n  source,\n  destination,\n  droppableSource,\n  droppableDestination\n) => {\n  const sourceClone = Array.from(source)\n  const destClone = Array.from(destination)\n  const [removed] = sourceClone.splice(droppableSource.index, 1)\n\n  destClone.splice(droppableDestination.index, 0, removed)\n\n  const result = {}\n  result[droppableSource.droppableId] = sourceClone\n  result[droppableDestination.droppableId] = destClone\n\n  return result\n}\n\nconst Content = styled.div`\n  margin-right: 200px;\n`\n\nconst Item = styled.div`\n  display: flex;\n  user-select: none;\n  padding: 0.5rem;\n  margin: 0 0 0.5rem 0;\n  align-items: flex-start;\n  align-content: flex-start;\n  line-height: 1.5;\n  border-radius: 3px;\n  background: #fff;\n  border: 1px\n    ${props => (props.isDragging ? 'dashed #4099ff' : 'solid #ddd')};\n`\n\nconst Clone = styled(Item)`\n  + div {\n    display: none !important;\n  }\n`\n\nconst Handle = styled.div`\n  display: flex;\n  align-items: center;\n  align-content: center;\n  user-select: none;\n  margin: -0.5rem 0.5rem -0.5rem -0.5rem;\n  padding: 0.5rem;\n  line-height: 1.5;\n  border-radius: 3px 0 0 3px;\n  background: #fff;\n  border-right: 1px solid #ddd;\n  color: #000;\n`\n\nconst List = styled.div`\n  border: 1px\n    ${props => (props.isDraggingOver ? 'dashed #000' : 'solid #ddd')};\n  background: #fff;\n  padding: 0.5rem 0.5rem 0;\n  border-radius: 3px;\n  flex: 0 0 150px;\n  font-family: sans-serif;\n`\n\nconst Kiosk = styled(List)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  width: 200px;\n`\n\nconst Container = styled(List)`\n  margin: 0.5rem 0.5rem 1.5rem;\n  background: #ccc;\n`\n\nconst Notice = styled.div`\n  display: flex;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n  padding: 0.5rem;\n  margin: 0 0.5rem 0.5rem;\n  border: 1px solid transparent;\n  line-height: 1.5;\n  color: #aaa;\n`\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n  margin: 0.5rem;\n  padding: 0.5rem;\n  color: #000;\n  border: 1px solid #ddd;\n  background: #fff;\n  border-radius: 3px;\n  font-size: 1rem;\n  cursor: pointer;\n`\n\nconst ButtonText = styled.div`\n  margin: 0 1rem;\n`\n\nconst ITEMS = [\n  {\n    id: uuid(),\n    content: 'Headline'\n  },\n  {\n    id: uuid(),\n    content: 'Copy'\n  },\n  {\n    id: uuid(),\n    content: 'Image'\n  },\n  {\n    id: uuid(),\n    content: 'Slideshow'\n  },\n  {\n    id: uuid(),\n    content: 'Quote'\n  }\n]\n\nexport function Layout() {\n\n  const [state, setState] = useState({ [uuid()]: [] })\n\n  const onDragEnd = result => {\n    const { source, destination } = result\n\n    console.log('==> result', result)\n\n    // dropped outside the list\n    if (!destination) {\n      return\n    }\n\n    switch (source.droppableId) {\n      case destination.droppableId:\n        setState({\n          [destination.droppableId]: reorder(\n            state[source.droppableId],\n            source.index,\n            destination.index\n          )\n        })\n        break\n      case 'ITEMS':\n        setState({\n          [destination.droppableId]: copy(\n            ITEMS,\n            state[destination.droppableId],\n            source,\n            destination\n          )\n        })\n        break\n      default:\n        setState(\n          move(\n            state[source.droppableId],\n            state[destination.droppableId],\n            source,\n            destination\n          )\n        )\n        break\n    }\n  }\n\n  const addList = e => {\n    setState({ [uuid()]: [] })\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"ITEMS\" isDropDisabled={true}>\n        {(provided, snapshot) => (\n          <Kiosk\n            innerRef={provided.innerRef}\n            isDraggingOver={snapshot.isDraggingOver}\n          >\n            {ITEMS.map((item, index) => (\n              <Draggable\n                key={item.id}\n                draggableId={item.id}\n                index={index}\n              >\n                {(provided, snapshot) => (\n                  <React.Fragment>\n                    <Item\n                      innerRef={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      isDragging={snapshot.isDragging}\n                      style={provided.draggableProps.style}\n                    >\n                      {item.content}\n                    </Item>\n                    {snapshot.isDragging && (\n                      <Clone>{item.content}</Clone>\n                    )}\n                  </React.Fragment>\n                )}\n              </Draggable>\n            ))}\n          </Kiosk>\n        )}\n      </Droppable>\n\n      <Content>\n        <Button onClick={addList}>\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n            <path\n              fill=\"currentColor\"\n              d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\"\n            />\n          </svg>\n          <ButtonText>Add List</ButtonText>\n        </Button>\n        {Object.keys(state).map((list, i) => {\n          console.log('==> list', list)\n          return (\n            <Droppable key={list} droppableId={list}>\n              {(provided, snapshot) => (\n                <Container\n                  innerRef={provided.innerRef}\n                  isDraggingOver={snapshot.isDraggingOver}\n                >\n                  {state[list].length\n                    ? state[list].map((item, index) => (\n                        <Draggable\n                          key={item.id}\n                          draggableId={item.id}\n                          index={index}\n                        >\n                          {(provided, snapshot) => (\n                            <Item\n                              innerRef={provided.innerRef}\n                              {...provided.draggableProps}\n                              isDragging={snapshot.isDragging}\n                              style={provided.draggableProps.style}\n                            >\n                              <Handle {...provided.dragHandleProps}>\n                                <svg\n                                  width=\"24\"\n                                  height=\"24\"\n                                  viewBox=\"0 0 24 24\"\n                                >\n                                  <path\n                                    fill=\"currentColor\"\n                                    d=\"M3,15H21V13H3V15M3,19H21V17H3V19M3,11H21V9H3V11M3,5V7H21V5H3Z\"\n                                  />\n                                </svg>\n                              </Handle>\n                              {item.content}\n                            </Item>\n                          )}\n                        </Draggable>\n                      ))\n                    : !provided.placeholder && (\n                        <Notice>Drop items here</Notice>\n                      )}\n                  {provided.placeholder}\n                </Container>\n              )}\n            </Droppable>\n          )\n        })}\n      </Content>\n    </DragDropContext>\n  )\n}\n\n// Put the things into the DOM!\n// ReactDOM.render(<App />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}