{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_Props = exports.bpfrpt_proptype_Meta = exports.bpfrpt_proptype_InputLook = exports.bpfrpt_proptype_InputType = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _bind = require('classnames/bind');\n\nvar _bind2 = _interopRequireDefault(_bind);\n\nvar _icon = require('../icon');\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nvar _notification = require('../notification');\n\nvar _notification2 = _interopRequireDefault(_notification);\n\nvar _style = require('./style.css');\n\nvar _style2 = _interopRequireDefault(_style);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar bpfrpt_proptype_InputType = {\n  name: _propTypes2.default.string,\n  value: function value(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error('Prop `' + propName + '` has type \\'any\\' or \\'mixed\\', but was not provided to `' + componentName + '`. Pass undefined or any other value.');\n    }\n  },\n  checked: _propTypes2.default.bool,\n  onBlur: _propTypes2.default.func,\n  onChange: _propTypes2.default.func.isRequired,\n  onDragStart: _propTypes2.default.func,\n  onDrop: _propTypes2.default.func,\n  onFocus: _propTypes2.default.func,\n  onClick: _propTypes2.default.func\n};\nvar bpfrpt_proptype_InputLook = {\n  offset: _propTypes2.default.oneOf(['left', 'left-separated', 'right', 'both']),\n  focused: _propTypes2.default.bool,\n  disabled: _propTypes2.default.bool,\n  readOnly: _propTypes2.default.bool,\n  icon: _propTypes2.default.string,\n  customIcon: _propTypes2.default.string,\n  validationAppearance: _propTypes2.default.oneOf(['default', 'highlight'])\n};\nvar bpfrpt_proptype_Meta = {\n  touched: _propTypes2.default.bool,\n  error: _propTypes2.default.node,\n  warning: _propTypes2.default.string,\n  dirty: _propTypes2.default.bool,\n  submitFailed: _propTypes2.default.bool\n};\nvar bpfrpt_proptype_Props = {\n  offset: _propTypes2.default.oneOf(['left', 'left-separated', 'right', 'both']),\n  focused: _propTypes2.default.bool,\n  disabled: _propTypes2.default.bool,\n  readOnly: _propTypes2.default.bool,\n  icon: _propTypes2.default.string,\n  customIcon: _propTypes2.default.string,\n  validationAppearance: _propTypes2.default.oneOf(['default', 'highlight']),\n  as: function as() {\n    return (typeof $FlowFixMe === 'function' ? _propTypes2.default.instanceOf($FlowFixMe) : _propTypes2.default.any).apply(this, arguments);\n  },\n  // Should allow string | React.ComponentType<{}>\n  input: _propTypes2.default.shape({\n    name: _propTypes2.default.string,\n    value: function value(props, propName, componentName) {\n      if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n        throw new Error('Prop `' + propName + '` has type \\'any\\' or \\'mixed\\', but was not provided to `' + componentName + '`. Pass undefined or any other value.');\n      }\n    },\n    checked: _propTypes2.default.bool,\n    onBlur: _propTypes2.default.func,\n    onChange: _propTypes2.default.func.isRequired,\n    onDragStart: _propTypes2.default.func,\n    onDrop: _propTypes2.default.func,\n    onFocus: _propTypes2.default.func,\n    onClick: _propTypes2.default.func\n  }).isRequired,\n  meta: _propTypes2.default.shape({\n    touched: _propTypes2.default.bool,\n    error: _propTypes2.default.node,\n    warning: _propTypes2.default.string,\n    dirty: _propTypes2.default.bool,\n    submitFailed: _propTypes2.default.bool\n  }),\n  type: _propTypes2.default.oneOf(['text', 'email', 'password', 'number', 'file']),\n  size: _propTypes2.default.oneOf(['sm', 'md']),\n  appearance: _propTypes2.default.oneOf(['primary', 'flatten']),\n  dock: _propTypes2.default.oneOf(['left', 'right']),\n  placeholder: _propTypes2.default.string,\n  inline: _propTypes2.default.bool,\n  disabledLimitationMinWidth: _propTypes2.default.bool,\n  extra: _propTypes2.default.node,\n  onClick: _propTypes2.default.func,\n  containerRef: _propTypes2.default.func,\n  style: _propTypes2.default.any,\n  className: _propTypes2.default.string,\n  dataIdError: _propTypes2.default.string,\n  notificationClassName: _propTypes2.default.string\n};\n\nvar cx = _bind2.default.bind(_style2.default);\n\nvar Input = function Input(_ref) {\n  var _ref$as = _ref.as,\n      as = _ref$as === undefined ? 'input' : _ref$as,\n      input = _ref.input,\n      _ref$meta = _ref.meta,\n      meta = _ref$meta === undefined ? {\n    touched: false,\n    error: null,\n    warning: null\n  } : _ref$meta,\n      _ref$type = _ref.type,\n      type = _ref$type === undefined ? 'text' : _ref$type,\n      _ref$size = _ref.size,\n      size = _ref$size === undefined ? 'md' : _ref$size,\n      _ref$appearance = _ref.appearance,\n      appearance = _ref$appearance === undefined ? 'primary' : _ref$appearance,\n      offset = _ref.offset,\n      dock = _ref.dock,\n      placeholder = _ref.placeholder,\n      _ref$inline = _ref.inline,\n      inline = _ref$inline === undefined ? false : _ref$inline,\n      _ref$focused = _ref.focused,\n      focused = _ref$focused === undefined ? false : _ref$focused,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === undefined ? false : _ref$disabled,\n      _ref$disabledLimitati = _ref.disabledLimitationMinWidth,\n      disabledLimitationMinWidth = _ref$disabledLimitati === undefined ? false : _ref$disabledLimitati,\n      _ref$readOnly = _ref.readOnly,\n      readOnly = _ref$readOnly === undefined ? false : _ref$readOnly,\n      icon = _ref.icon,\n      customIcon = _ref.customIcon,\n      extra = _ref.extra,\n      onClick = _ref.onClick,\n      style = _ref.style,\n      containerRef = _ref.containerRef,\n      className = _ref.className,\n      _ref$validationAppear = _ref.validationAppearance,\n      validationAppearance = _ref$validationAppear === undefined ? 'default' : _ref$validationAppear,\n      dataIdError = _ref.dataIdError,\n      notificationClassName = _ref.notificationClassName,\n      rest = _objectWithoutProperties(_ref, ['as', 'input', 'meta', 'type', 'size', 'appearance', 'offset', 'dock', 'placeholder', 'inline', 'focused', 'disabled', 'disabledLimitationMinWidth', 'readOnly', 'icon', 'customIcon', 'extra', 'onClick', 'style', 'containerRef', 'className', 'validationAppearance', 'dataIdError', 'notificationClassName']);\n\n  var showValidationMessage = validationAppearance === 'default';\n  var isError = meta.touched && meta.error;\n  var isWarning = meta.touched && !meta.error && meta.warning;\n  var inputName = input.name || '';\n  var errorDataId = dataIdError || 'error-' + inputName;\n  var warningDataId = 'warning-' + inputName;\n  return React.createElement('div', {\n    style: _extends({\n      display: inline ? 'inline-block' : 'block'\n    }, style)\n  }, React.createElement('div', {\n    ref: containerRef,\n    style: {\n      position: 'relative',\n      width: '100%',\n      display: inline ? 'inline-block' : 'block'\n    }\n  }, React.createElement(readOnly ? 'button' : as, _extends({}, rest, input, {\n    placeholder: placeholder,\n    disabled: disabled,\n    onClick: onClick,\n    className: cx('xsui-input', 'xsui-input--size-' + size, appearance && 'xsui-input--appearance-' + appearance, offset && 'xsui-input--offset-' + offset, focused && 'xsui-input--focused', disabledLimitationMinWidth && 'xsui-input--disabled-min-width', readOnly && !input.value && 'xsui-input--empty', readOnly && 'xsui-input--read-only', isError && 'xsui-input--error', isWarning && 'xsui-input--warning', dock && 'xsui-input--dock-' + dock, className),\n    value: input.value === null || input.value === void 0 ? '' : String(input.value),\n    type: readOnly ? 'button' : type,\n    children: readOnly ? input.value || placeholder : null,\n    'data-id': inputName,\n    'data-value': input.value\n  })), icon && React.createElement('div', {\n    className: cx('xsui-input__icon')\n  }, React.createElement(_icon2.default, {\n    name: icon\n  })), customIcon && React.createElement('div', {\n    className: cx('xsui-input__icon')\n  }, React.createElement('img', {\n    src: customIcon\n  })), extra && React.createElement('div', {\n    className: cx('xsui-input__extra')\n  }, extra)), showValidationMessage && React.createElement('div', {\n    className: cx(notificationClassName)\n  }, isError && React.createElement(_notification2.default, {\n    appearance: 'string',\n    status: 'error'\n  }, React.createElement('span', {\n    'data-id': errorDataId\n  }, meta.error)), isWarning && React.createElement(_notification2.default, {\n    appearance: 'string',\n    status: 'warning'\n  }, React.createElement('span', {\n    'data-id': warningDataId\n  }, meta.warning))));\n};\n\nInput.propTypes = bpfrpt_proptype_Props;\nexports.default = Input;\nexports.bpfrpt_proptype_InputType = bpfrpt_proptype_InputType;\nexports.bpfrpt_proptype_InputLook = bpfrpt_proptype_InputLook;\nexports.bpfrpt_proptype_Meta = bpfrpt_proptype_Meta;\nexports.bpfrpt_proptype_Props = bpfrpt_proptype_Props;","map":null,"metadata":{},"sourceType":"script"}