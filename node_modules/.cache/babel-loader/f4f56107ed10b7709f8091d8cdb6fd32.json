{"ast":null,"code":"import _objectSpread from \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/src/components/Palette.js\";\nimport React, { Fragment, useEffect, useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport { ITEMS } from '../data/elements';\nexport function Palette(props) {\n  var _this = this;\n\n  var _props = _objectSpread({}, props),\n      provided = _props.provided;\n\n  return /*#__PURE__*/React.createElement(Kiosk, {\n    innerRef: provided.innerRef,\n    isDraggingOver: snapshot.isDraggingOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 1\n    }\n  }, ITEMS.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.id,\n      index: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 33\n      }\n    }, function (provided, snapshot) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Element, Object.assign({\n        innerRef: provided.innerRef\n      }, provided.draggableProps, provided.dragHandleProps, {\n        isDragging: snapshot.isDragging,\n        style: provided.draggableProps.style,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 45\n        }\n      }), item.content), snapshot.isDragging && /*#__PURE__*/React.createElement(Element, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 49\n        }\n      }, item.content));\n    });\n  }));\n}","map":{"version":3,"sources":["/Users/maiik/Xsolla_HTML2/xsolla-form-editor/src/components/Palette.js"],"names":["React","Fragment","useEffect","useState","useContext","Link","styled","css","ITEMS","Palette","props","provided","innerRef","snapshot","isDraggingOver","map","item","index","id","draggableProps","dragHandleProps","isDragging","style","content"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,EAA+CC,UAA/C,QAAiE,OAAjE;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAIA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAAA,iCAGrBA,KAHqB;AAAA,MAE3BC,QAF2B,UAE3BA,QAF2B;;AAI7B,sBACF,oBAAC,KAAD;AAC4B,IAAA,QAAQ,EAAEA,QAAQ,CAACC,QAD/C;AAE4B,IAAA,cAAc,EAAEC,QAAQ,CAACC,cAFrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAG6BN,KAAK,CAACO,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,wBACP,oBAAC,SAAD;AACI,MAAA,GAAG,EAAED,IAAI,CAACE,EADd;AAEI,MAAA,WAAW,EAAEF,IAAI,CAACE,EAFtB;AAGI,MAAA,KAAK,EAAED,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIK,UAACN,QAAD,EAAWE,QAAX;AAAA,0BACG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AACI,QAAA,QAAQ,EAAEF,QAAQ,CAACC;AADvB,SAEQD,QAAQ,CAACQ,cAFjB,EAGQR,QAAQ,CAACS,eAHjB;AAII,QAAA,UAAU,EAAEP,QAAQ,CAACQ,UAJzB;AAKI,QAAA,KAAK,EACDV,QAAQ,CAACQ,cAAT,CACKG,KAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UASKN,IAAI,CAACO,OATV,CADJ,EAYKV,QAAQ,CAACQ,UAAT,iBACG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAUL,IAAI,CAACO,OAAf,CAbR,CADH;AAAA,KAJL,CADO;AAAA,GAAV,CAH7B,CADE;AA+BD","sourcesContent":["import React, { Fragment, useEffect, useState, useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled, {css} from 'styled-components';\nimport { ITEMS } from '../data/elements';\n\n\n\nexport function Palette(props) {\n  const {\n    provided\n  } = {...props}\n  return (\n<Kiosk\n                            innerRef={provided.innerRef}\n                            isDraggingOver={snapshot.isDraggingOver}>\n                            {ITEMS.map((item, index) => (\n                                <Draggable\n                                    key={item.id}\n                                    draggableId={item.id}\n                                    index={index}>\n                                    {(provided, snapshot) => (\n                                        <React.Fragment>\n                                            <Element\n                                                innerRef={provided.innerRef}\n                                                {...provided.draggableProps}\n                                                {...provided.dragHandleProps}\n                                                isDragging={snapshot.isDragging}\n                                                style={\n                                                    provided.draggableProps\n                                                        .style\n                                                }>\n                                                {item.content}\n                                            </Element>\n                                            {snapshot.isDragging && (\n                                                <Element>{item.content}</Element>\n                                            )}\n                                        </React.Fragment>\n                                    )}\n                                </Draggable>\n                            ))}\n                        </Kiosk>\n  )\n}"]},"metadata":{},"sourceType":"module"}