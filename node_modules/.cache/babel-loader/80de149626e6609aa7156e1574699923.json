{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _fsm = require('@xstate/fsm');\n\nvar _constants = require('./constants');\n\nvar _types = require('./types');\n\nvar createFileUploaderMachine = function createFileUploaderMachine(context) {\n  var defaultContext = _extends({}, _constants.INITIAL_CONTEXT, context);\n\n  return (0, _fsm.createMachine)({\n    id: 'file-uploader',\n    initial: 'default',\n    context: _extends({}, _constants.INITIAL_CONTEXT, context),\n    states: {\n      default: {\n        on: {\n          UPLOAD: {\n            target: 'uploading',\n            actions: ['updateContext']\n          },\n          DISABLE: {\n            target: 'disabled',\n            actions: ['updateContext']\n          },\n          REJECT: {\n            target: 'error',\n            actions: ['updateContext']\n          }\n        }\n      },\n      uploading: {\n        on: {\n          RESOLVE: {\n            target: 'success',\n            actions: ['updateContext']\n          },\n          REJECT: {\n            target: 'error',\n            actions: ['updateContext']\n          }\n        }\n      },\n      success: {\n        on: {\n          RESET: {\n            target: 'default',\n            actions: ['reset']\n          }\n        }\n      },\n      error: {\n        on: {\n          UPLOAD: {\n            target: 'uploading',\n            actions: ['updateContext']\n          }\n        }\n      },\n      disabled: {\n        on: {\n          ACTIVATE: 'default',\n          UPDATE: {\n            target: 'disabled',\n            actions: ['updateContext']\n          }\n        }\n      }\n    }\n  }, {\n    actions: {\n      reset: (0, _fsm.assign)(function (ctx, env) {\n        return _extends({}, defaultContext, env);\n      }),\n      updateContext: (0, _fsm.assign)(function (ctx, env) {\n        return _extends({}, env);\n      })\n    }\n  });\n};\n\nexports.default = createFileUploaderMachine;","map":null,"metadata":{},"sourceType":"script"}