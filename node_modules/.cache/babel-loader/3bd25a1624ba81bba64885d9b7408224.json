{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLoaderColor = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _bind = require('classnames/bind');\n\nvar _bind2 = _interopRequireDefault(_bind);\n\nvar _icon = require('../icon');\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nvar _loader = require('../loader');\n\nvar _loader2 = _interopRequireDefault(_loader);\n\nvar _once = require('../_shared/once');\n\nvar _style = require('./style.css');\n\nvar _style2 = _interopRequireDefault(_style);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar cx = _bind2.default.bind(_style2.default);\n\nvar warnAppearanceIcon = (0, _once.once)(function () {\n  /*eslint-disable no-console, max-len */\n  console.warn('Warning:', '<Button appearance=\"icon\" />  is deprecated. Use <Icon /> https://uikit.xsolla.com/components/icon');\n  /*eslint-enable */\n});\n\nvar getLoaderColor = exports.getLoaderColor = function getLoaderColor(appearance) {\n  if (appearance === 'primary' || appearance === 'secondary' || appearance === 'alert') {\n    return 'white';\n  }\n\n  if (appearance === 'flatten') {\n    return 'blue';\n  }\n\n  return 'gray';\n};\n\nvar Button = function Button(_ref) {\n  var _ref$appearance = _ref.appearance,\n      appearance = _ref$appearance === undefined ? 'primary' : _ref$appearance,\n      _ref$type = _ref.type,\n      type = _ref$type === undefined ? 'button' : _ref$type,\n      _ref$size = _ref.size,\n      size = _ref$size === undefined ? 'md' : _ref$size,\n      offset = _ref.offset,\n      icon = _ref.icon,\n      children = _ref.children,\n      _ref$focused = _ref.focused,\n      focused = _ref$focused === undefined ? false : _ref$focused,\n      _ref$fetching = _ref.fetching,\n      fetching = _ref$fetching === undefined ? false : _ref$fetching,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === undefined ? false : _ref$disabled,\n      _ref$reversed = _ref.reversed,\n      reversed = _ref$reversed === undefined ? false : _ref$reversed,\n      _ref$initialIconColor = _ref.initialIconColor,\n      initialIconColor = _ref$initialIconColor === undefined ? 'blue' : _ref$initialIconColor,\n      rest = _objectWithoutProperties(_ref, ['appearance', 'type', 'size', 'offset', 'icon', 'children', 'focused', 'fetching', 'disabled', 'reversed', 'initialIconColor']);\n\n  if (appearance === 'icon') {\n    warnAppearanceIcon();\n  }\n\n  return _react2.default.createElement('button', _extends({}, rest, {\n    className: cx('xsui-button', 'xsui-button--appearance-' + appearance, 'xsui-button--size-' + size, offset && 'xsui-button--offset-' + offset, icon && 'xsui-button__icon', focused && 'xsui-button--focused', 'xsui-button--color-' + initialIconColor),\n    type: type,\n    disabled: disabled\n  }), _react2.default.createElement('div', {\n    className: cx('xsui-button__wrapper')\n  }, fetching && _react2.default.createElement('div', {\n    className: cx('xsui-button__wrapper--fetching')\n  }, _react2.default.createElement(_loader2.default, {\n    color: getLoaderColor(appearance),\n    size: 'sm',\n    fullscreen: true\n  })), _react2.default.createElement('div', {\n    className: cx('xsui-button__content', fetching && 'xsui-button--fetching', reversed && 'xsui-button--reversed')\n  }, icon && _react2.default.createElement(_icon2.default, {\n    name: icon\n  }), children)));\n};\n\nButton.propTypes = {\n  children: function children() {\n    return (typeof React$Node === 'function' ? _propTypes2.default.instanceOf(React$Node).isRequired : _propTypes2.default.any.isRequired).apply(this, arguments);\n  },\n  appearance: _propTypes2.default.oneOf(['primary', 'secondary', 'outline', 'outline-primary', 'outline-secondary', 'flatten', 'square', 'icon', 'alert']),\n  type: _propTypes2.default.oneOf(['button', 'submit']),\n  size: _propTypes2.default.oneOf(['sm', 'md', 'lg']),\n  offset: _propTypes2.default.oneOf(['left', 'right', 'both', 'arrow-fetching-both']),\n  icon: _propTypes2.default.string,\n  initialIconColor: _propTypes2.default.oneOf(['blue', 'gray']),\n  focused: _propTypes2.default.bool,\n  fetching: _propTypes2.default.bool,\n  disabled: _propTypes2.default.bool,\n  reversed: _propTypes2.default.bool,\n  onClick: _propTypes2.default.func\n};\nexports.default = Button;","map":null,"metadata":{},"sourceType":"script"}