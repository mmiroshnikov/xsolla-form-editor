{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _bind = require('classnames/bind');\n\nvar _bind2 = _interopRequireDefault(_bind);\n\nvar _style = require('./style.css');\n\nvar _style2 = _interopRequireDefault(_style);\n\nvar _types = require('../types');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar cx = _bind2.default.bind(_style2.default);\n\nvar Cell = function (_PureComponent) {\n  _inherits(Cell, _PureComponent);\n\n  function Cell() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Cell);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Cell.__proto__ || Object.getPrototypeOf(Cell)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      cellOffsetLeft: null\n    }, _this.cellRef = (0, _react.createRef)(), _this.setCellOffset = function () {\n      var column = _this.props.column;\n      var cellOffsetLeft = _this.state.cellOffsetLeft;\n      var cell = _this.cellRef.current;\n\n      if (!cell) {\n        return;\n      }\n\n      if (column.sticky && cellOffsetLeft !== cell.offsetLeft) {\n        _this.setState({\n          cellOffsetLeft: cell.offsetLeft\n        });\n      }\n    }, _this.getFieldValue = function () {\n      var _this$props = _this.props,\n          row = _this$props.row,\n          fieldGetter = _this$props.column.fieldGetter;\n\n      if (typeof fieldGetter === 'function') {\n        return fieldGetter(row);\n      }\n\n      return row[fieldGetter];\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Cell, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.setCellOffset();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          column = _props.column,\n          row = _props.row,\n          rowIndex = _props.rowIndex,\n          columnIndex = _props.columnIndex,\n          _props$compact = _props.compact,\n          compact = _props$compact === undefined ? false : _props$compact;\n      var cellOffsetLeft = this.state.cellOffsetLeft;\n\n      if (column.show === false) {\n        return null;\n      }\n\n      var classes = cx('xsui-table-cell', compact && 'xsui-table-cell--compact', column.sticky && 'xsui-table-cell--sticky', rowIndex % 2 === 0 && 'xsui-table-cell--colored');\n      var styles = {\n        width: column.width,\n        minWidth: column.minWidth || column.width,\n        maxWidth: column.maxWidth || column.width,\n        left: column.sticky && cellOffsetLeft\n      };\n\n      if (column.renderCell) {\n        // $FlowFixMe - column.renderCell is undefined\n        return column.renderCell({\n          column: column,\n          row: row,\n          rowIndex: rowIndex,\n          columnIndex: columnIndex,\n          compact: compact,\n          sticky: column.sticky,\n          value: this.getFieldValue(),\n          className: classes,\n          style: styles\n        });\n      }\n\n      return _react2.default.createElement('td', {\n        ref: this.cellRef,\n        style: styles,\n        className: classes\n      }, _react2.default.createElement('p', {\n        className: cx('xsui-table-cell__text'),\n        'data-id': 'table-cell__text'\n      }, this.getFieldValue()));\n    }\n  }]);\n\n  return Cell;\n}(_react.PureComponent);\n\nCell.propTypes = {\n  column: function column() {\n    return (typeof _types.bpfrpt_proptype_Column === 'function' ? _types.bpfrpt_proptype_Column.isRequired ? _types.bpfrpt_proptype_Column.isRequired : _types.bpfrpt_proptype_Column : _propTypes2.default.shape(_types.bpfrpt_proptype_Column).isRequired).apply(this, arguments);\n  },\n  row: _propTypes2.default.object.isRequired,\n  rowIndex: _propTypes2.default.number.isRequired,\n  columnIndex: _propTypes2.default.number.isRequired,\n  compact: _propTypes2.default.bool\n};\nexports.default = Cell;","map":null,"metadata":{},"sourceType":"script"}