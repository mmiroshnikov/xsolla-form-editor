{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactIntl = require('react-intl');\n\nvar _bind = require('classnames/bind');\n\nvar _bind2 = _interopRequireDefault(_bind);\n\nvar _icon = require('../icon');\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nvar _checkbox = require('../checkbox');\n\nvar _checkbox2 = _interopRequireDefault(_checkbox);\n\nvar _messages = require('./messages');\n\nvar _messages2 = _interopRequireDefault(_messages);\n\nvar _style = require('./style.css');\n\nvar _style2 = _interopRequireDefault(_style);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar cx = _bind2.default.bind(_style2.default);\n\nvar RenderList = function (_PureComponent) {\n  _inherits(RenderList, _PureComponent);\n\n  function RenderList() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, RenderList);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RenderList.__proto__ || Object.getPrototypeOf(RenderList)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      visible: false\n    }, _this.toggleVisible = function () {\n      return _this.setState({\n        visible: !_this.state.visible\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(RenderList, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var recursiveEach = function recursiveEach(options) {\n        return options.map(function (option) {\n          option.options && recursiveEach(option.options);\n          option.checked && _this2.setState({\n            visible: true\n          });\n        });\n      };\n\n      this.props.item.options && recursiveEach(this.props.item.options);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          item = _props.item,\n          depLevel = _props.depLevel,\n          allowMultiSelect = _props.allowMultiSelect,\n          allowSelectNestedFolder = _props.allowSelectNestedFolder,\n          handleChange = _props.handleChange,\n          disabled = _props.disabled;\n      var isNested = item.options && item.options.length > 0;\n      return _react2.default.createElement('li', null, _react2.default.createElement('div', {\n        className: cx('xsui-tree-select__item'),\n        style: {\n          paddingLeft: 12 * (depLevel + 1) + 12 * depLevel\n        }\n      }, isNested && _react2.default.createElement(ArrowTrigger, {\n        open: this.state.visible,\n        label: item.label,\n        onClick: this.toggleVisible,\n        dataId: item.id + '.arrow'\n      }), !isNested || allowSelectNestedFolder ? _react2.default.createElement('div', {\n        className: cx('xsui-tree-select__item__entry')\n      }, _react2.default.createElement(_checkbox2.default, {\n        appearance: allowMultiSelect ? 'primary' : 'flatten',\n        input: {\n          name: item.id + '.checkbox',\n          value: item.checked,\n          onChange: handleChange.bind(this, item, false)\n        },\n        disabled: item.disabled || disabled,\n        label: item.label\n      }), _react2.default.createElement('div', {\n        className: cx('xsui-tree-select__item__entry__extra')\n      }, item.extraLabel)) : _react2.default.createElement('div', {\n        className: cx('xsui-tree-select__item__entry')\n      }, _react2.default.createElement('div', null, item.label), _react2.default.createElement('div', {\n        className: cx('xsui-tree-select__item__entry__extra')\n      }, item.extraLabel))), this.state.visible && isNested && _react2.default.createElement('ul', null, item.options.map(function (option, index) {\n        return _react2.default.createElement(RenderList, {\n          key: index,\n          item: option,\n          depLevel: depLevel + 1,\n          allowMultiSelect: allowMultiSelect,\n          allowSelectNestedFolder: allowSelectNestedFolder,\n          handleChange: handleChange,\n          disabled: disabled\n        });\n      })));\n    }\n  }]);\n\n  return RenderList;\n}(_react.PureComponent);\n\nRenderList.propTypes = {\n  item: _propTypes2.default.object.isRequired,\n  depLevel: _propTypes2.default.number.isRequired,\n  allowMultiSelect: _propTypes2.default.bool,\n  allowSelectNestedFolder: _propTypes2.default.bool,\n  handleChange: _propTypes2.default.func.isRequired,\n  disabled: _propTypes2.default.bool.isRequired\n};\n\nvar ArrowTrigger = function ArrowTrigger(_ref2) {\n  var open = _ref2.open,\n      dataId = _ref2.dataId,\n      rest = _objectWithoutProperties(_ref2, ['open', 'dataId']);\n\n  return _react2.default.createElement('div', {\n    className: cx('xsui-tree-select__arrow-trigger', open && 'xsui-tree-select__arrow-trigger--open')\n  }, _react2.default.createElement('div', _extends({\n    className: cx('xsui-tree-select__arrow-trigger__icon'),\n    'data-id': dataId,\n    'data-value': open\n  }, rest), _react2.default.createElement(_icon2.default, {\n    name: 'expand'\n  })));\n};\n\nArrowTrigger.propTypes = {\n  open: _propTypes2.default.bool.isRequired,\n  label: function label(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error('Prop `' + propName + '` has type \\'any\\' or \\'mixed\\', but was not provided to `' + componentName + '`. Pass undefined or any other value.');\n    }\n  },\n  dataId: _propTypes2.default.string.isRequired\n};\n\nvar Entries = function Entries(_ref3) {\n  var intl = _ref3.intl,\n      value = _ref3.value,\n      options = _ref3.options,\n      _ref3$appearance = _ref3.appearance,\n      appearance = _ref3$appearance === undefined ? 'primary' : _ref3$appearance,\n      _ref3$showStripes = _ref3.showStripes,\n      showStripes = _ref3$showStripes === undefined ? true : _ref3$showStripes,\n      allowMultiSelect = _ref3.allowMultiSelect,\n      allowSelectNestedFolder = _ref3.allowSelectNestedFolder,\n      customStatusLabel = _ref3.customStatusLabel,\n      handleChange = _ref3.handleChange,\n      handleSelectAll = _ref3.handleSelectAll,\n      handleUnselectAll = _ref3.handleUnselectAll,\n      placeholder = _ref3.placeholder,\n      _ref3$disabled = _ref3.disabled,\n      disabled = _ref3$disabled === undefined ? false : _ref3$disabled,\n      entryMaxHeight = _ref3.entryMaxHeight;\n  return _react2.default.createElement('div', {\n    className: cx('xsui-tree-select__entries')\n  }, _react2.default.createElement('div', {\n    className: cx('xsui-tree-select__entries__head')\n  }, _react2.default.createElement('div', {\n    className: cx('xsui-tree-select__entries__head__count')\n  }, intl.formatMessage(customStatusLabel || _messages2.default.selectedItems, {\n    count: value.length,\n    total: options.length\n  })), allowMultiSelect && _react2.default.createElement('div', {\n    className: cx('xsui-tree-select__entries__head__action', disabled && 'xsui-tree-select__entries__head__action--disabled')\n  }, value.length === 0 ? _react2.default.createElement('span', {\n    onClick: handleSelectAll.bind(undefined)\n  }, intl.formatMessage(_messages2.default.selectAll)) : _react2.default.createElement('span', {\n    onClick: handleUnselectAll.bind(undefined)\n  }, intl.formatMessage(_messages2.default.unselectAll)))), _react2.default.createElement('div', {\n    className: cx('xsui-tree-select__entries__content', 'xsui-tree-select__entries__content--appearance-' + appearance, showStripes && 'xsui-tree-select__entries__content--with-stripes'),\n    style: {\n      maxHeight: entryMaxHeight\n    }\n  }, !options.length && placeholder ? _react2.default.createElement('div', {\n    className: cx('xsui-tree-select__entries__content__placeholder')\n  }, placeholder) : _react2.default.createElement('ul', null, options.map(function (option, index) {\n    return _react2.default.createElement(RenderList, {\n      key: index,\n      item: option,\n      depLevel: 0,\n      allowMultiSelect: allowMultiSelect,\n      allowSelectNestedFolder: allowSelectNestedFolder,\n      handleChange: handleChange,\n      disabled: disabled\n    });\n  }))));\n};\n\nEntries.propTypes = {\n  intl: function intl() {\n    return (typeof _reactIntl.intlShape === 'function' ? _propTypes2.default.instanceOf(_reactIntl.intlShape).isRequired : _propTypes2.default.any.isRequired).apply(this, arguments);\n  },\n  appearance: _propTypes2.default.oneOf(['primary', 'secondary']),\n  showStripes: _propTypes2.default.bool,\n  customStatusLabel: _propTypes2.default.object,\n  value: _propTypes2.default.arrayOf(function (props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error('Prop `' + propName + '` has type \\'any\\' or \\'mixed\\', but was not provided to `' + componentName + '`. Pass undefined or any other value.');\n    }\n  }).isRequired,\n  options: _propTypes2.default.arrayOf(function (props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error('Prop `' + propName + '` has type \\'any\\' or \\'mixed\\', but was not provided to `' + componentName + '`. Pass undefined or any other value.');\n    }\n  }).isRequired,\n  allowMultiSelect: _propTypes2.default.bool,\n  allowSelectNestedFolder: _propTypes2.default.bool,\n  handleChange: _propTypes2.default.func.isRequired,\n  handleSelectAll: _propTypes2.default.func.isRequired,\n  handleUnselectAll: _propTypes2.default.func.isRequired,\n  placeholder: _propTypes2.default.string,\n  disabled: _propTypes2.default.bool,\n  entryMaxHeight: _propTypes2.default.number\n};\nexports.default = (0, _reactIntl.injectIntl)(Entries);","map":null,"metadata":{},"sourceType":"script"}