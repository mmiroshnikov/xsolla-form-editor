{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _reactIntl = require('react-intl');\n\nvar _bind = require('classnames/bind');\n\nvar _bind2 = _interopRequireDefault(_bind);\n\nvar _messages = require('../messages');\n\nvar _tooltip = require('../tooltip');\n\nvar _tooltip2 = _interopRequireDefault(_tooltip);\n\nvar _messages2 = require('./messages');\n\nvar _messages3 = _interopRequireDefault(_messages2);\n\nvar _style = require('./style.css');\n\nvar _style2 = _interopRequireDefault(_style);\n\nvar _input = require('../input');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar cx = _bind2.default.bind(_style2.default);\n\nvar Switch = function Switch(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === undefined ? 'right' : _ref$align,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === undefined ? false : _ref$disabled,\n      _ref$fetching = _ref.fetching,\n      fetching = _ref$fetching === undefined ? false : _ref$fetching,\n      _ref$input = _ref.input,\n      input = _ref$input === undefined ? {} : _ref$input,\n      intl = _ref.intl,\n      label = _ref.label,\n      _ref$meta = _ref.meta,\n      meta = _ref$meta === undefined ? {\n    touched: false,\n    error: null\n  } : _ref$meta,\n      name = _ref.name,\n      sublabel = _ref.sublabel,\n      tooltip = _ref.tooltip,\n      _ref$tooltipInteracti = _ref.tooltipInteractive,\n      tooltipInteractive = _ref$tooltipInteracti === undefined ? false : _ref$tooltipInteracti,\n      rest = _objectWithoutProperties(_ref, ['align', 'disabled', 'fetching', 'input', 'intl', 'label', 'meta', 'name', 'sublabel', 'tooltip', 'tooltipInteractive']);\n\n  return React.createElement('div', {\n    className: cx('xsui-switch-container')\n  }, React.createElement('div', {\n    className: cx('xsui-switch', 'xsui-switch--align-' + align, disabled && 'xsui-switch--disabled')\n  }, React.createElement('label', {\n    'data-id': input.name || name,\n    'data-value': input.value\n  }, React.createElement('input', _extends({}, input, rest, {\n    className: cx(fetching && 'xsui-switch--fetching'),\n    name: input.name || name,\n    type: 'checkbox',\n    checked: !!input.value,\n    disabled: disabled || fetching\n  })), React.createElement('div', {\n    className: cx('xsui-switch__status', disabled && 'xsui-switch__status--disabled')\n  }, React.createElement('div', {\n    className: cx('xsui-switch__status__off')\n  }, intl.formatMessage(_messages3.default.off)), React.createElement('div', {\n    className: cx('xsui-switch__status__on')\n  }, intl.formatMessage(_messages3.default.on)))), React.createElement('div', {\n    className: cx('xsui-switch__description', 'xsui-switch__description--align-' + align)\n  }, label && React.createElement('div', {\n    className: cx('xsui-switch__label')\n  }, label, tooltip && React.createElement(_tooltip2.default, {\n    label: tooltip,\n    interactive: tooltipInteractive,\n    offset: 'left'\n  })), sublabel !== undefined ? React.createElement('div', {\n    className: cx('xsui-switch__sublabel')\n  }, sublabel) : null)), meta.touched && meta.error && React.createElement(_messages.ValidationMessage, null, meta.error));\n};\n\nSwitch.propTypes = {\n  align: _propTypes2.default.oneOf(['left', 'right']),\n  disabled: _propTypes2.default.bool,\n  fetching: _propTypes2.default.bool,\n  input: _propTypes2.default.object,\n  label: _propTypes2.default.node,\n  meta: function meta() {\n    return (typeof _input.bpfrpt_proptype_Meta === 'function' ? _input.bpfrpt_proptype_Meta : _propTypes2.default.shape(_input.bpfrpt_proptype_Meta)).apply(this, arguments);\n  },\n  name: _propTypes2.default.string,\n  sublabel: _propTypes2.default.node,\n  tooltip: _propTypes2.default.node,\n  tooltipInteractive: _propTypes2.default.bool\n};\nexports.default = (0, _reactIntl.injectIntl)(Switch);","map":null,"metadata":{},"sourceType":"script"}