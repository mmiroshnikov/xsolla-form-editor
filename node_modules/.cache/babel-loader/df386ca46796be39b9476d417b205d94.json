{"ast":null,"code":"/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar t;\n!function (t) {\n  t[t.NotStarted = 0] = \"NotStarted\", t[t.Running = 1] = \"Running\", t[t.Stopped = 2] = \"Stopped\";\n}(t || (t = {}));\nvar n = {\n  type: \"xstate.init\"\n};\n\nfunction e(t) {\n  return void 0 === t ? [] : [].concat(t);\n}\n\nfunction r(t) {\n  return {\n    type: \"xstate.assign\",\n    assignment: t\n  };\n}\n\nfunction i(t, n) {\n  return \"string\" == typeof (t = \"string\" == typeof t && n && n[t] ? n[t] : t) ? {\n    type: t\n  } : \"function\" == typeof t ? {\n    type: t.name,\n    exec: t\n  } : t;\n}\n\nfunction o(t) {\n  return function (n) {\n    return t === n;\n  };\n}\n\nfunction a(t) {\n  return \"string\" == typeof t ? {\n    type: t\n  } : t;\n}\n\nfunction u(t, n) {\n  return {\n    value: t,\n    context: n,\n    actions: [],\n    changed: !1,\n    matches: o(t)\n  };\n}\n\nfunction c(t, n) {\n  void 0 === n && (n = {});\n  var r = {\n    config: t,\n    _options: n,\n    initialState: {\n      value: t.initial,\n      actions: e(t.states[t.initial].entry).map(function (t) {\n        return i(t, n.actions);\n      }),\n      context: t.context,\n      matches: o(t.initial)\n    },\n    transition: function transition(n, c) {\n      var s,\n          f,\n          l = \"string\" == typeof n ? {\n        value: n,\n        context: t.context\n      } : n,\n          v = l.value,\n          p = l.context,\n          g = a(c),\n          y = t.states[v];\n\n      if (y.on) {\n        var d = e(y.on[g.type]),\n            x = function x(n) {\n          if (void 0 === n) return {\n            value: u(v, p)\n          };\n          var e = \"string\" == typeof n ? {\n            target: n\n          } : n,\n              a = e.target,\n              c = void 0 === a ? v : a,\n              s = e.actions,\n              f = void 0 === s ? [] : s,\n              l = e.cond,\n              d = p;\n\n          if ((void 0 === l ? function () {\n            return !0;\n          } : l)(p, g)) {\n            var x = t.states[c],\n                m = !1,\n                h = [].concat(y.exit, f, x.entry).filter(function (t) {\n              return t;\n            }).map(function (t) {\n              return i(t, r._options.actions);\n            }).filter(function (t) {\n              if (\"xstate.assign\" === t.type) {\n                m = !0;\n                var n = Object.assign({}, d);\n                return \"function\" == typeof t.assignment ? n = t.assignment(d, g) : Object.keys(t.assignment).forEach(function (e) {\n                  n[e] = \"function\" == typeof t.assignment[e] ? t.assignment[e](d, g) : t.assignment[e];\n                }), d = n, !1;\n              }\n\n              return !0;\n            });\n            return {\n              value: {\n                value: c,\n                context: d,\n                actions: h,\n                changed: c !== v || h.length > 0 || m,\n                matches: o(c)\n              }\n            };\n          }\n        };\n\n        try {\n          for (var m = function (t) {\n            var n = \"function\" == typeof Symbol && t[Symbol.iterator],\n                e = 0;\n            return n ? n.call(t) : {\n              next: function next() {\n                return t && e >= t.length && (t = void 0), {\n                  value: t && t[e++],\n                  done: !t\n                };\n              }\n            };\n          }(d), h = m.next(); !h.done; h = m.next()) {\n            var S = x(h.value);\n            if (\"object\" == typeof S) return S.value;\n          }\n        } catch (t) {\n          s = {\n            error: t\n          };\n        } finally {\n          try {\n            h && !h.done && (f = m.return) && f.call(m);\n          } finally {\n            if (s) throw s.error;\n          }\n        }\n      }\n\n      return u(v, p);\n    }\n  };\n  return r;\n}\n\nvar s = function s(t, n) {\n  return t.actions.forEach(function (e) {\n    var r = e.exec;\n    return r && r(t.context, n);\n  });\n};\n\nfunction f(e) {\n  var r = e.initialState,\n      i = t.NotStarted,\n      o = new Set(),\n      u = {\n    _machine: e,\n    send: function send(n) {\n      i === t.Running && (r = e.transition(r, n), s(r, a(n)), o.forEach(function (t) {\n        return t(r);\n      }));\n    },\n    subscribe: function subscribe(t) {\n      return o.add(t), t(r), {\n        unsubscribe: function unsubscribe() {\n          return o.delete(t);\n        }\n      };\n    },\n    start: function start() {\n      return i = t.Running, s(r, n), u;\n    },\n    stop: function stop() {\n      return i = t.Stopped, o.clear(), u;\n    },\n\n    get state() {\n      return r;\n    },\n\n    get status() {\n      return i;\n    }\n\n  };\n  return u;\n}\n\nexport { t as InterpreterStatus, r as assign, c as createMachine, f as interpret };","map":null,"metadata":{},"sourceType":"module"}