{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _axios = require('axios');\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactIntl = require('react-intl');\n\nvar _bind = require('classnames/bind');\n\nvar _bind2 = _interopRequireDefault(_bind);\n\nvar _reactDropzone = require('react-dropzone');\n\nvar _reactDropzone2 = _interopRequireDefault(_reactDropzone);\n\nvar _icon = require('../icon');\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nvar _loader = require('../loader');\n\nvar _loader2 = _interopRequireDefault(_loader);\n\nvar _notification = require('../notification');\n\nvar _notification2 = _interopRequireDefault(_notification);\n\nvar _messages = require('./messages');\n\nvar _messages2 = _interopRequireDefault(_messages);\n\nvar _style = require('./style.css');\n\nvar _style2 = _interopRequireDefault(_style);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar cx = _bind2.default.bind(_style2.default);\n\nvar acceptedTypes = ['image/gif', 'image/jpg', 'image/jpeg', 'image/png', '.gif', '.jpg', '.jpeg', '.png'].join(',');\n\nvar ImagePicker = function (_PureComponent) {\n  _inherits(ImagePicker, _PureComponent);\n\n  function ImagePicker() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ImagePicker);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ImagePicker.__proto__ || Object.getPrototypeOf(ImagePicker)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      fetching: false,\n      error: null\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ImagePicker, [{\n    key: 'onDrop',\n    value: function onDrop(files) {\n      var _this2 = this;\n\n      var _props = this.props,\n          HTTPClient = _props.HTTPClient,\n          input = _props.input,\n          url = _props.url,\n          responseKey = _props.responseKey,\n          onUploadStart = _props.onUploadStart,\n          onUploadEnd = _props.onUploadEnd;\n      var computedHTTPClient = HTTPClient || _axios2.default;\n\n      if (input.onDrop) {\n        input.onDrop();\n      }\n\n      var data = new FormData();\n      data.append('image', files[0]);\n      this.setState({\n        fetching: true,\n        error: false\n      });\n      onUploadStart();\n      computedHTTPClient.post(url, data, {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      }).then(function (response) {\n        var data = response.data[responseKey];\n        input.onChange(data);\n        onUploadEnd(data);\n        setTimeout(function () {\n          return _this2.setState({\n            fetching: false\n          });\n        }, 2000);\n      }).catch(function (error) {\n        onUploadEnd(undefined, error);\n\n        _this2.setState({\n          fetching: false,\n          error: error.response ? error.response.data.message : 'Error'\n        });\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          intl = _props2.intl,\n          input = _props2.input,\n          meta = _props2.meta,\n          appearance = _props2.appearance,\n          caption = _props2.caption,\n          disabled = _props2.disabled,\n          rest = _objectWithoutProperties(_props2, ['intl', 'input', 'meta', 'appearance', 'caption', 'disabled']);\n\n      var _state = this.state,\n          fetching = _state.fetching,\n          error = _state.error;\n      var imageName = input.value ? input.value.split('/').pop() : null;\n      var isError = meta.touched && meta.error;\n      var isWarning = meta.touched && !meta.error && !error && meta.warning;\n      return _react2.default.createElement('div', null, _react2.default.createElement(_reactDropzone2.default, {\n        name: input.name || rest.name,\n        className: cx('xsui-imagePicker', 'xsui-imagePicker--appearance-' + appearance, fetching && 'xsui-imagePicker--fetching', input.value && 'xsui-imagePicker--filled', isError && 'xsui-imagePicker--error', isWarning && 'xsui-imagePicker--warning', error && 'xsui-imagePicker--error'),\n        acceptClassName: cx('xsui-imagePicker--accept'),\n        rejectClassName: cx('xsui-imagePicker--reject'),\n        disabledClassName: cx('xsui-imagePicker--disabled'),\n        accept: acceptedTypes,\n        multiple: false,\n        disabled: disabled || fetching,\n        disablePreview: true,\n        onDrop: this.onDrop.bind(this)\n      }, _react2.default.createElement('div', {\n        className: cx('xsui-imagePicker__icon')\n      }, _react2.default.createElement(_icon2.default, {\n        name: input.value ? 'delete' : 'upload',\n        size: appearance === 'secondary' ? 24 : input.value ? 24 : 32,\n        hoverable: !disabled,\n        onClick: function onClick(e) {\n          e.stopPropagation();\n          !disabled && input.onChange(null);\n        }\n      })), (appearance === 'primary' || appearance === 'tertiary') && _react2.default.createElement(_react.Fragment, null, fetching && _react2.default.createElement(_loader2.default, {\n        color: 'blue',\n        fullscreen: true\n      }), !fetching && input.value && _react2.default.createElement('div', {\n        className: cx('xsui-imagePicker__preview'),\n        style: {\n          backgroundImage: 'url(' + input.value + ')'\n        }\n      })), appearance === 'secondary' && _react2.default.createElement(_react.Fragment, null, fetching && _react2.default.createElement(_loader2.default, {\n        color: 'blue',\n        fullscreen: true,\n        size: 'xs'\n      }), _react2.default.createElement('div', {\n        className: cx('xsui-imagePicker__caption')\n      }, imageName || caption || intl.formatMessage(_messages2.default.caption)))), _react2.default.createElement('div', null, isError && _react2.default.createElement(_notification2.default, {\n        appearance: 'string',\n        status: 'error'\n      }, meta.error), isWarning && _react2.default.createElement(_notification2.default, {\n        appearance: 'string',\n        status: 'warning'\n      }, meta.warning), error && _react2.default.createElement(_notification2.default, {\n        appearance: 'string',\n        status: 'error'\n      }, error)));\n    }\n  }]);\n\n  return ImagePicker;\n}(_react.PureComponent);\n\nImagePicker.propTypes = {\n  intl: function intl() {\n    return (typeof IntlShape === 'function' ? _propTypes2.default.instanceOf(IntlShape).isRequired : _propTypes2.default.any.isRequired).apply(this, arguments);\n  },\n  input: _propTypes2.default.object,\n  meta: _propTypes2.default.shape({\n    touched: _propTypes2.default.bool.isRequired,\n    error: _propTypes2.default.string,\n    warning: _propTypes2.default.string\n  }),\n  name: _propTypes2.default.string,\n  url: _propTypes2.default.string.isRequired,\n  responseKey: _propTypes2.default.string,\n  appearance: _propTypes2.default.oneOf(['primary', 'secondary', 'tertiary']),\n  caption: _propTypes2.default.string.isRequired,\n  onUploadStart: _propTypes2.default.func,\n  onUploadEnd: _propTypes2.default.func,\n  disabled: _propTypes2.default.bool,\n  HTTPClient: function HTTPClient(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error('Prop `' + propName + '` has type \\'any\\' or \\'mixed\\', but was not provided to `' + componentName + '`. Pass undefined or any other value.');\n    }\n  }\n};\nImagePicker.defaultProps = {\n  input: {},\n  meta: {\n    touched: false,\n    error: null\n  },\n  name: null,\n  responseKey: 'image_url',\n  appearance: 'primary',\n  onUploadStart: function onUploadStart() {\n    return void 0;\n  },\n  onUploadEnd: function onUploadEnd() {\n    return void 0;\n  },\n  disabled: false\n};\nexports.default = (0, _reactIntl.injectIntl)(ImagePicker);","map":null,"metadata":{},"sourceType":"script"}