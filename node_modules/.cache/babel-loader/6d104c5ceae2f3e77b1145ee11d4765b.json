{"ast":null,"code":"import _defineProperty from \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maiik/Xsolla_HTML2/xsolla-form-editor/src/components/Layout.js\";\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n    margin: 0 1rem;\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    align-items: center;\\n    align-content: center;\\n    justify-content: center;\\n    margin: 0.5rem;\\n    padding: 0.5rem;\\n    color: #000;\\n    border: 1px solid #ddd;\\n    background: #fff;\\n    border-radius: 3px;\\n    font-size: 1rem;\\n    cursor: pointer;\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    align-items: center;\\n    align-content: center;\\n    justify-content: center;\\n    padding: 0.5rem;\\n    margin: 0 0.5rem 0.5rem;\\n    border: 1px solid transparent;\\n    line-height: 1.5;\\n    color: #aaa;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n    margin: 0.5rem 0.5rem 1.5rem;\\n    background: #ccc;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    width: 200px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    border: 1px\\n        \", \";\\n    background: #fff;\\n    padding: 0.5rem 0.5rem 0;\\n    border-radius: 3px;\\n    flex: 0 0 150px;\\n    font-family: sans-serif;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    align-items: center;\\n    align-content: center;\\n    user-select: none;\\n    margin: -0.5rem 0.5rem -0.5rem -0.5rem;\\n    padding: 0.5rem;\\n    line-height: 1.5;\\n    border-radius: 3px 0 0 3px;\\n    background: #fff;\\n    border-right: 1px solid #ddd;\\n    color: #000;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    + div {\\n        display: none !important;\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    margin-right: 200px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport uuid from 'uuid/v4';\nimport styled from 'styled-components';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'; // import console = require('console');\n\nimport { Line } from './Line';\nimport { Element } from './Element'; // a little function to help us with reordering the result\n\nvar reorder = function reorder(list, startIndex, endIndex) {\n  var result = Array.from(list);\n\n  var _result$splice = result.splice(startIndex, 1),\n      _result$splice2 = _slicedToArray(_result$splice, 1),\n      removed = _result$splice2[0];\n\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n/**\n * Moves an item from one list to another list.\n */\n\n\nvar copy = function copy(source, destination, droppableSource, droppableDestination) {\n  console.log('==> dest', destination);\n  var sourceClone = Array.from(source);\n  var destClone = Array.from(destination);\n  var item = sourceClone[droppableSource.index];\n  destClone.splice(droppableDestination.index, 0, _objectSpread({}, item, {\n    id: uuid()\n  }));\n  return destClone;\n};\n\nvar move = function move(source, destination, droppableSource, droppableDestination) {\n  var sourceClone = Array.from(source);\n  var destClone = Array.from(destination);\n\n  var _sourceClone$splice = sourceClone.splice(droppableSource.index, 1),\n      _sourceClone$splice2 = _slicedToArray(_sourceClone$splice, 1),\n      removed = _sourceClone$splice2[0];\n\n  destClone.splice(droppableDestination.index, 0, removed);\n  var result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nvar Content = styled.div(_templateObject());\nvar Clone = styled(Line)(_templateObject2());\nvar Handle = styled.div(_templateObject3());\nvar List = styled.div(_templateObject4(), function (props) {\n  return props.isDraggingOver ? 'dashed #000' : 'solid #ddd';\n});\nvar Kiosk = styled(List)(_templateObject5());\nvar Container = styled(List)(_templateObject6());\nvar Notice = styled.div(_templateObject7());\nvar Button = styled.button(_templateObject8());\nvar ButtonText = styled.div(_templateObject9());\nvar ITEMS = [{\n  id: uuid(),\n  content: 'Headline'\n}, {\n  id: uuid(),\n  content: 'Copy'\n}, {\n  id: uuid(),\n  content: 'Image'\n}, {\n  id: uuid(),\n  content: 'Slideshow'\n}, {\n  id: uuid(),\n  content: 'Quote'\n}];\nexport var Layout = /*#__PURE__*/function (_Component) {\n  _inherits(Layout, _Component);\n\n  function Layout() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Layout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Layout)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = _defineProperty({}, uuid(), []);\n\n    _this.onDragEnd = function (result) {\n      var source = result.source,\n          destination = result.destination;\n      console.log('==> result', result); // dropped outside the list\n\n      if (!destination) {\n        return;\n      }\n\n      switch (source.droppableId) {\n        case destination.droppableId:\n          _this.setState(_defineProperty({}, destination.droppableId, reorder(_this.state[source.droppableId], source.index, destination.index)));\n\n          break;\n\n        case 'ITEMS':\n          _this.setState(_defineProperty({}, destination.droppableId, copy(ITEMS, _this.state[destination.droppableId], source, destination)));\n\n          break;\n\n        default:\n          _this.setState(move(_this.state[source.droppableId], _this.state[destination.droppableId], source, destination));\n\n          break;\n      }\n    };\n\n    _this.addList = function (e) {\n      _this.setState(_defineProperty({}, uuid(), []));\n    };\n\n    return _this;\n  }\n\n  _createClass(Layout, [{\n    key: \"render\",\n    // Normally you would want to split things out into separate components.\n    // But in this example everything is just done in one place for simplicity\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: \"ITEMS\",\n        isDropDisabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }\n      }, function (provided, snapshot) {\n        return /*#__PURE__*/React.createElement(Kiosk, {\n          innerRef: provided.innerRef,\n          isDraggingOver: snapshot.isDraggingOver,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }\n        }, ITEMS.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(Draggable, {\n            key: item.id,\n            draggableId: item.id,\n            index: index,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }\n          }, function (provided, snapshot) {\n            return /*#__PURE__*/React.createElement(React.Fragment, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(Element, Object.assign({\n              innerRef: provided.innerRef\n            }, provided.draggableProps, provided.dragHandleProps, {\n              isDragging: snapshot.isDragging,\n              style: provided.draggableProps.style,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 45\n              }\n            }), item.content), snapshot.isDragging && /*#__PURE__*/React.createElement(Clone, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 49\n              }\n            }, item.content));\n          });\n        }));\n      }), /*#__PURE__*/React.createElement(Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.addList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"svg\", {\n        width: \"24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        fill: \"currentColor\",\n        d: \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(ButtonText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }\n      }, \"Add List\")), Object.keys(this.state).map(function (list, i) {\n        console.log('==> list', list);\n        return /*#__PURE__*/React.createElement(Droppable, {\n          key: list,\n          droppableId: list,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }\n        }, function (provided, snapshot) {\n          return /*#__PURE__*/React.createElement(Container, {\n            innerRef: provided.innerRef,\n            isDraggingOver: snapshot.isDraggingOver,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 37\n            }\n          }, _this2.state[list].length ? _this2.state[list].map(function (item, index) {\n            return /*#__PURE__*/React.createElement(Draggable, {\n              key: item.id,\n              draggableId: item.id,\n              index: index,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 55\n              }\n            }, function (provided, snapshot) {\n              return /*#__PURE__*/React.createElement(Line, Object.assign({\n                innerRef: provided.innerRef\n              }, provided.draggableProps, {\n                isDragging: snapshot.isDragging,\n                style: provided.draggableProps.style,\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 63\n                }\n              }), /*#__PURE__*/React.createElement(Handle, Object.assign({}, provided.dragHandleProps, {\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 67\n                }\n              }), /*#__PURE__*/React.createElement(\"svg\", {\n                width: \"24\",\n                height: \"24\",\n                viewBox: \"0 0 24 24\",\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 71\n                }\n              }, /*#__PURE__*/React.createElement(\"path\", {\n                fill: \"currentColor\",\n                d: \"M3,15H21V13H3V15M3,19H21V17H3V19M3,11H21V9H3V11M3,5V7H21V5H3Z\",\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 75\n                }\n              }))), item.content);\n            });\n          }) : !provided.placeholder && /*#__PURE__*/React.createElement(Notice, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 51\n            }\n          }, \"Drop items here\"), provided.placeholder);\n        });\n      })));\n    }\n  }]);\n\n  return Layout;\n}(Component); // Put the things into the DOM!\n// ReactDOM.render(<App />, document.getElementById('root'));","map":{"version":3,"sources":["/Users/maiik/Xsolla_HTML2/xsolla-form-editor/src/components/Layout.js"],"names":["React","Component","ReactDOM","uuid","styled","DragDropContext","Droppable","Draggable","Line","Element","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","copy","source","destination","droppableSource","droppableDestination","console","log","sourceClone","destClone","item","index","id","move","droppableId","Content","div","Clone","Handle","List","props","isDraggingOver","Kiosk","Container","Notice","Button","button","ButtonText","ITEMS","content","Layout","state","onDragEnd","setState","addList","e","provided","snapshot","innerRef","map","draggableProps","dragHandleProps","isDragging","style","Object","keys","i","length","placeholder"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport uuid from 'uuid/v4';\nimport styled from 'styled-components';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n// import console = require('console');\nimport { Line } from './Line';\nimport { Element } from './Element';\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n/**\n * Moves an item from one list to another list.\n */\nconst copy = (source, destination, droppableSource, droppableDestination) => {\n    console.log('==> dest', destination);\n\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const item = sourceClone[droppableSource.index];\n\n    destClone.splice(droppableDestination.index, 0, { ...item, id: uuid() });\n    return destClone;\n};\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nconst Content = styled.div`\n    margin-right: 200px;\n`;\n\n\n\nconst Clone = styled(Line)`\n    + div {\n        display: none !important;\n    }\n`;\n\nconst Handle = styled.div`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    user-select: none;\n    margin: -0.5rem 0.5rem -0.5rem -0.5rem;\n    padding: 0.5rem;\n    line-height: 1.5;\n    border-radius: 3px 0 0 3px;\n    background: #fff;\n    border-right: 1px solid #ddd;\n    color: #000;\n`;\n\nconst List = styled.div`\n    border: 1px\n        ${props => (props.isDraggingOver ? 'dashed #000' : 'solid #ddd')};\n    background: #fff;\n    padding: 0.5rem 0.5rem 0;\n    border-radius: 3px;\n    flex: 0 0 150px;\n    font-family: sans-serif;\n`;\n\nconst Kiosk = styled(List)`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 200px;\n`;\n\nconst Container = styled(List)`\n    margin: 0.5rem 0.5rem 1.5rem;\n    background: #ccc;\n`;\n\nconst Notice = styled.div`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    justify-content: center;\n    padding: 0.5rem;\n    margin: 0 0.5rem 0.5rem;\n    border: 1px solid transparent;\n    line-height: 1.5;\n    color: #aaa;\n`;\n\nconst Button = styled.button`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    justify-content: center;\n    margin: 0.5rem;\n    padding: 0.5rem;\n    color: #000;\n    border: 1px solid #ddd;\n    background: #fff;\n    border-radius: 3px;\n    font-size: 1rem;\n    cursor: pointer;\n`;\n\nconst ButtonText = styled.div`\n    margin: 0 1rem;\n`;\n\nconst ITEMS = [\n    {\n        id: uuid(),\n        content: 'Headline'\n    },\n    {\n        id: uuid(),\n        content: 'Copy'\n    },\n    {\n        id: uuid(),\n        content: 'Image'\n    },\n    {\n        id: uuid(),\n        content: 'Slideshow'\n    },\n    {\n        id: uuid(),\n        content: 'Quote'\n    }\n];\n\nexport class Layout extends Component {\n    state = {\n        [uuid()]: []\n    };\n    onDragEnd = result => {\n        const { source, destination } = result;\n\n        console.log('==> result', result);\n\n        // dropped outside the list\n        if (!destination) {\n            return;\n        }\n\n        switch (source.droppableId) {\n            case destination.droppableId:\n                this.setState({\n                    [destination.droppableId]: reorder(\n                        this.state[source.droppableId],\n                        source.index,\n                        destination.index\n                    )\n                });\n                break;\n            case 'ITEMS':\n                this.setState({\n                    [destination.droppableId]: copy(\n                        ITEMS,\n                        this.state[destination.droppableId],\n                        source,\n                        destination\n                    )\n                });\n                break;\n            default:\n                this.setState(\n                    move(\n                        this.state[source.droppableId],\n                        this.state[destination.droppableId],\n                        source,\n                        destination\n                    )\n                );\n                break;\n        }\n    };\n\n    addList = e => {\n        this.setState({ [uuid()]: [] });\n    };\n\n    // Normally you would want to split things out into separate components.\n    // But in this example everything is just done in one place for simplicity\n    render() {\n        return (\n            <DragDropContext onDragEnd={this.onDragEnd}>\n                <Droppable droppableId=\"ITEMS\" isDropDisabled={true}>\n                    {(provided, snapshot) => (\n                        <Kiosk\n                            innerRef={provided.innerRef}\n                            isDraggingOver={snapshot.isDraggingOver}>\n                            {ITEMS.map((item, index) => (\n                                <Draggable\n                                    key={item.id}\n                                    draggableId={item.id}\n                                    index={index}>\n                                    {(provided, snapshot) => (\n                                        <React.Fragment>\n                                            <Element\n                                                innerRef={provided.innerRef}\n                                                {...provided.draggableProps}\n                                                {...provided.dragHandleProps}\n                                                isDragging={snapshot.isDragging}\n                                                style={\n                                                    provided.draggableProps\n                                                        .style\n                                                }>\n                                                {item.content}\n                                            </Element>\n                                            {snapshot.isDragging && (\n                                                <Clone>{item.content}</Clone>\n                                            )}\n                                        </React.Fragment>\n                                    )}\n                                </Draggable>\n                            ))}\n                        </Kiosk>\n                    )}\n                </Droppable>\n                <Content>\n                    <Button onClick={this.addList}>\n                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                            <path\n                                fill=\"currentColor\"\n                                d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\"\n                            />\n                        </svg>\n                        <ButtonText>Add List</ButtonText>\n                    </Button>\n                    {Object.keys(this.state).map((list, i) => {\n                        console.log('==> list', list);\n                        return (\n                            <Droppable key={list} droppableId={list}>\n                                {(provided, snapshot) => (\n                                    <Container\n                                        innerRef={provided.innerRef}\n                                        isDraggingOver={\n                                            snapshot.isDraggingOver\n                                        }>\n                                        {this.state[list].length\n                                            ? this.state[list].map(\n                                                  (item, index) => (\n                                                      <Draggable\n                                                          key={item.id}\n                                                          draggableId={item.id}\n                                                          index={index}>\n                                                          {(\n                                                              provided,\n                                                              snapshot\n                                                          ) => (\n                                                              <Line\n                                                                  innerRef={\n                                                                      provided.innerRef\n                                                                  }\n                                                                  {...provided.draggableProps}\n                                                                  isDragging={\n                                                                      snapshot.isDragging\n                                                                  }\n                                                                  style={\n                                                                      provided\n                                                                          .draggableProps\n                                                                          .style\n                                                                  }>\n                                                                  <Handle\n                                                                      {...provided.dragHandleProps}>\n                                                                      <svg\n                                                                          width=\"24\"\n                                                                          height=\"24\"\n                                                                          viewBox=\"0 0 24 24\">\n                                                                          <path\n                                                                              fill=\"currentColor\"\n                                                                              d=\"M3,15H21V13H3V15M3,19H21V17H3V19M3,11H21V9H3V11M3,5V7H21V5H3Z\"\n                                                                          />\n                                                                      </svg>\n                                                                  </Handle>\n                                                                  {item.content}\n                                                              </Line>\n                                                          )}\n                                                      </Draggable>\n                                                  )\n                                              )\n                                            : !provided.placeholder && (\n                                                  <Notice>\n                                                      Drop items here\n                                                  </Notice>\n                                              )}\n                                        {provided.placeholder}\n                                    </Container>\n                                )}\n                            </Droppable>\n                        );\n                    })}\n                </Content>\n            </DragDropContext>\n        );\n    }\n}\n\n// Put the things into the DOM!\n// ReactDOM.render(<App />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}