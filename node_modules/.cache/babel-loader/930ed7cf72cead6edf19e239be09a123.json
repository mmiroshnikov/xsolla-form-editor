{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\r\n * We can check if the element is in the page.\r\n * @param element\r\n * @param bottomOffset\r\n * @returns {boolean}\r\n */\n\nvar visibleInPage = exports.visibleInPage = function visibleInPage(element) {\n  var bottomOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 32;\n\n  if (!element) {\n    return false;\n  }\n\n  var bounding = element.getBoundingClientRect();\n  var bottom = bounding.bottom + bottomOffset <= document.documentElement.clientHeight;\n  var top = bounding.height + bottomOffset <= bounding.top;\n  return bounding.top >= 0 && bounding.left >= 0 && (!bottom && !top || bottom);\n};\n\nvar dropdownVisible = exports.dropdownVisible = function dropdownVisible(container) {\n  var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (!container) {\n    return false;\n  }\n\n  var bounding = container.getBoundingClientRect();\n\n  if (element) {\n    return document.documentElement.clientHeight - bounding.bottom >= bounding.height + element.current.clientHeight || !(bounding.top > 0);\n  }\n\n  return document.documentElement.clientHeight - bounding.bottom >= 0 || !(bounding.bottom - bounding.top >= bounding.height);\n};\n\nvar needChangeSide = exports.needChangeSide = function needChangeSide(element) {\n  if (!element) {\n    return false;\n  }\n\n  var bounding = element.getBoundingClientRect();\n  return bounding.right > document.documentElement.clientWidth && bounding.left > bounding.width;\n}; // Exec callback on next render frame\n\n\nvar onNextFrame = exports.onNextFrame = function onNextFrame(callback) {\n  window.requestAnimationFrame(function () {\n    return window.requestAnimationFrame(callback);\n  });\n};","map":null,"metadata":{},"sourceType":"script"}