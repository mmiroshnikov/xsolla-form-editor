{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _bind = require('classnames/bind');\n\nvar _bind2 = _interopRequireDefault(_bind);\n\nvar _fsm = require('@xstate/fsm');\n\nvar _validation = require('../messages/validation');\n\nvar _validation2 = _interopRequireDefault(_validation);\n\nvar _icon = require('../icon');\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nvar _state = require('./state');\n\nvar _state2 = _interopRequireDefault(_state);\n\nvar _uploadingButton = require('./uploading-button');\n\nvar _uploadingButton2 = _interopRequireDefault(_uploadingButton);\n\nvar _constants = require('./constants');\n\nvar _style = require('./style.css');\n\nvar _style2 = _interopRequireDefault(_style);\n\nvar _input = require('../input');\n\nvar _types = require('./types');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar cx = _bind2.default.bind(_style2.default);\n\nvar FileUploader = function (_Component) {\n  _inherits(FileUploader, _Component);\n\n  function FileUploader(props) {\n    _classCallCheck(this, FileUploader);\n\n    var _this = _possibleConstructorReturn(this, (FileUploader.__proto__ || Object.getPrototypeOf(FileUploader)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var defaultContext = props.content ? _this.getContextByStatus(_constants.STATUS_DEFAULT) : {};\n    var fileUploaderMachine = (0, _state2.default)(defaultContext);\n    _this.service = (0, _fsm.interpret)(fileUploaderMachine);\n    _this.state = {\n      current: fileUploaderMachine.initialState\n    };\n    return _this;\n  }\n\n  _createClass(FileUploader, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _props = this.props,\n          input = _props.input,\n          _props$meta = _props.meta,\n          meta = _props$meta === undefined ? {\n        error: null,\n        touched: false\n      } : _props$meta;\n      this.service.subscribe(function (current) {\n        return _this2.setState({\n          current: current\n        });\n      });\n      this.service.start();\n\n      if (input && (input.disabled || input.readOnly)) {\n        this.service.send(_extends({\n          type: 'DISABLE'\n        }, this.getContextByStatus(_constants.STATUS_DISABLED)));\n      }\n\n      if (meta.error && meta.touched) {\n        this.service.send(_extends({\n          type: 'REJECT'\n        }, this.getContextByStatus(_constants.STATUS_ERROR), {\n          error: meta.error\n        }));\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var current = this.state.current;\n      var _props$meta2 = this.props.meta,\n          meta = _props$meta2 === undefined ? {\n        error: null,\n        dirty: false,\n        submitFailed: false\n      } : _props$meta2;\n      var failedEmptyField = meta.error && prevProps.meta.error !== meta.error && !meta.dirty && meta.submitFailed;\n\n      if (current.matches('disabled')) {\n        var currentContext = this.getContextByStatus(_constants.STATUS_DISABLED);\n        var prevContext = this.getContextByStatus(_constants.STATUS_DISABLED, prevProps);\n\n        if (JSON.stringify(currentContext) !== JSON.stringify(prevContext)) {\n          this.service.send(_extends({\n            type: 'UPDATE'\n          }, currentContext));\n        }\n      }\n\n      if (failedEmptyField) {\n        this.service.send(_extends({\n          type: 'REJECT'\n        }, this.getContextByStatus(_constants.STATUS_ERROR), {\n          error: meta.error\n        }));\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.service.stop();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var current = this.state.current;\n      var dataId = this.props.dataId;\n      var areaClassNames = {\n        'xsui-file-uploader__area': true,\n        'xsui-file-uploader__area--default': current.matches('default') || current.matches('error') || current.matches('disabled')\n      };\n      var barClassNames = {\n        'xsui-file-uploader__progress-bar': true,\n        'xsui-file-uploader__progress-bar--default': current.matches('default') || current.matches('error') || current.matches('disabled'),\n        'xsui-file-uploader__progress-bar--uploading': current.matches('uploading'),\n        'xsui-file-uploader__progress-bar--success': current.matches('success')\n      };\n      return _react2.default.createElement('div', {\n        className: cx('xsui-file-uploader'),\n        'data-id': dataId\n      }, _react2.default.createElement('div', {\n        className: cx(areaClassNames)\n      }, _react2.default.createElement('div', {\n        className: cx(barClassNames)\n      }), _react2.default.createElement('div', {\n        className: cx('xsui-file-uploader__info')\n      }, _react2.default.createElement('div', {\n        className: cx('xsui-file-uploader__text', 'xsui-file-uploader__text--main')\n      }, current.context.title), _react2.default.createElement('div', {\n        className: cx('xsui-file-uploader__text', 'xsui-file-uploader__text--sub')\n      }, current.context.description)), _react2.default.createElement('div', {\n        className: cx('xsui-file-uploader__extra-wrapper')\n      }, this.renderExtra())), current.matches('error') && _react2.default.createElement(_validation2.default, null, current.context.error));\n    }\n  }]);\n\n  return FileUploader;\n}(_react.Component);\n\nFileUploader.propTypes = {\n  meta: function meta() {\n    return (typeof _input.bpfrpt_proptype_Meta === 'function' ? _input.bpfrpt_proptype_Meta.isRequired ? _input.bpfrpt_proptype_Meta.isRequired : _input.bpfrpt_proptype_Meta : _propTypes2.default.shape(_input.bpfrpt_proptype_Meta).isRequired).apply(this, arguments);\n  },\n  input: _propTypes2.default.shape(Object.assign({}, _input.bpfrpt_proptype_InputType === _propTypes2.default.any ? {} : _input.bpfrpt_proptype_InputType, _input.bpfrpt_proptype_InputLook === _propTypes2.default.any ? {} : _input.bpfrpt_proptype_InputLook)).isRequired,\n  accept: _propTypes2.default.string,\n  dataId: _propTypes2.default.string,\n  content: function content() {\n    return (typeof _types.bpfrpt_proptype_Content === 'function' ? _types.bpfrpt_proptype_Content.isRequired ? _types.bpfrpt_proptype_Content.isRequired : _types.bpfrpt_proptype_Content : _propTypes2.default.shape(_types.bpfrpt_proptype_Content).isRequired).apply(this, arguments);\n  },\n  onUpload: _propTypes2.default.func\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.getContextByStatus = function (status) {\n    var _contextMap;\n\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this3.props;\n    var content = props.content;\n    var contextMap = (_contextMap = {}, _defineProperty(_contextMap, _constants.STATUS_DEFAULT, _constants.INITIAL_CONTEXT), _defineProperty(_contextMap, _constants.STATUS_UPLOADING, _extends({}, _constants.INITIAL_CONTEXT, {\n      description: 'Uploading...',\n      extra: null\n    })), _defineProperty(_contextMap, _constants.STATUS_SUCCESS, _extends({}, _constants.INITIAL_CONTEXT, {\n      extra: null,\n      renderExtra: function renderExtra() {\n        return _react2.default.createElement('div', {\n          className: cx('xsui-file-uploader__icon-circle')\n        }, _react2.default.createElement(_icon2.default, {\n          name: 'checkmark-mini'\n        }));\n      }\n    })), _defineProperty(_contextMap, _constants.STATUS_ERROR, _constants.INITIAL_CONTEXT), _defineProperty(_contextMap, _constants.STATUS_DISABLED, _extends({}, _constants.INITIAL_CONTEXT, {\n      extra: null\n    })), _contextMap);\n    var baseContext = contextMap[status] || _constants.INITIAL_CONTEXT;\n    var customContext = content[status] || {};\n    return _extends({}, baseContext, customContext);\n  };\n\n  this.onChange = function (event) {\n    var _props2 = _this3.props,\n        input = _props2.input,\n        onUpload = _props2.onUpload,\n        _props2$meta = _props2.meta,\n        meta = _props2$meta === undefined ? {\n      error: null\n    } : _props2$meta;\n\n    var currentEvent = _extends({}, event);\n\n    _this3.service.send(_extends({\n      type: 'UPLOAD'\n    }, _this3.getContextByStatus(_constants.STATUS_UPLOADING)));\n\n    input.onChange(currentEvent.target.value);\n\n    if (onUpload) {\n      onUpload(event).then(function () {\n        _this3.service.send(_extends({\n          type: 'RESOLVE'\n        }, _this3.getContextByStatus(_constants.STATUS_SUCCESS)));\n\n        setTimeout(function () {\n          _this3.service.send(_extends({\n            type: 'RESET'\n          }, _this3.getContextByStatus(_constants.STATUS_DEFAULT)));\n        }, 2000);\n      }).catch(function (error) {\n        var errorMessage = typeof error === 'string' ? error : '';\n\n        _this3.service.send(_extends({\n          type: 'REJECT'\n        }, _this3.getContextByStatus(_constants.STATUS_ERROR), {\n          error: errorMessage || meta.error\n        }));\n      });\n    }\n  };\n\n  this.renderExtra = function () {\n    var _props3 = _this3.props,\n        input = _props3.input,\n        accept = _props3.accept;\n    var current = _this3.state.current;\n\n    if (input.readOnly || input.disabled) {\n      return;\n    }\n\n    if (current.context.renderExtra) {\n      return current.context.renderExtra();\n    }\n\n    return _react2.default.createElement(_uploadingButton2.default, _extends({}, current.context.extra, {\n      input: _extends({}, input, {\n        accept: accept || '*',\n        onChange: _this3.onChange\n      })\n    }));\n  };\n};\n\nexports.default = FileUploader;","map":null,"metadata":{},"sourceType":"script"}