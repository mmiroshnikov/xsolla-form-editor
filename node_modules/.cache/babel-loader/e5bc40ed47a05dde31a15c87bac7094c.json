{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_Props = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactIntl = require('react-intl');\n\nvar _bind = require('classnames/bind');\n\nvar _bind2 = _interopRequireDefault(_bind);\n\nvar _input = require('../input');\n\nvar _input2 = _interopRequireDefault(_input);\n\nvar _dropdown = require('../dropdown');\n\nvar _dropdown2 = _interopRequireDefault(_dropdown);\n\nvar _messages = require('./messages');\n\nvar _messages2 = _interopRequireDefault(_messages);\n\nvar _style = require('./style.css');\n\nvar _style2 = _interopRequireDefault(_style);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar bpfrpt_proptype_Props = Object.assign({}, _input.bpfrpt_proptype_Props === _propTypes2.default.any ? {} : _input.bpfrpt_proptype_Props, {\n  intl: function intl() {\n    return (typeof IntlShape === 'function' ? _propTypes2.default.instanceOf(IntlShape).isRequired : _propTypes2.default.any.isRequired).apply(this, arguments);\n  },\n  options: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    tag: _propTypes2.default.any,\n    itemRef: _propTypes2.default.func,\n    active: _propTypes2.default.bool,\n    label: function label(props, propName, componentName) {\n      if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n        throw new Error('Prop `' + propName + '` has type \\'any\\' or \\'mixed\\', but was not provided to `' + componentName + '`. Pass undefined or any other value.');\n      }\n    },\n    value: function value(props, propName, componentName) {\n      if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n        throw new Error('Prop `' + propName + '` has type \\'any\\' or \\'mixed\\', but was not provided to `' + componentName + '`. Pass undefined or any other value.');\n      }\n    },\n    extraLabel: _propTypes2.default.any,\n    description: _propTypes2.default.string,\n    appearance: _propTypes2.default.oneOf(['row', 'head']),\n    icon: _propTypes2.default.string,\n    customIcon: _propTypes2.default.any,\n    color: _propTypes2.default.string,\n    disabled: _propTypes2.default.bool,\n    onClick: _propTypes2.default.func\n  }).isRequired).isRequired,\n  onBlurHandler: _propTypes2.default.func,\n  dropdownIcon: _propTypes2.default.string,\n  containerClassName: _propTypes2.default.string,\n  onScrollOptions: _propTypes2.default.func,\n  dropdownProps: _propTypes2.default.object,\n  searchable: _propTypes2.default.bool,\n  autosize: _propTypes2.default.bool,\n  // TODO: refactor this field\n  align: _propTypes2.default.oneOf(['left', 'left-half', 'right', 'right-half']),\n  size: _propTypes2.default.oneOf(['sm', 'md', 'lg']),\n  fetching: _propTypes2.default.bool\n});\n\nvar cx = _bind2.default.bind(_style2.default);\n\nvar mapSize = function mapSize(size) {\n  switch (size) {\n    case 'sm':\n      return 'md';\n\n    case 'md':\n      return 'lg';\n  }\n};\n\nvar Select = function Select(_ref) {\n  var intl = _ref.intl,\n      input = _ref.input,\n      options = _ref.options,\n      _ref$searchable = _ref.searchable,\n      searchable = _ref$searchable === undefined ? false : _ref$searchable,\n      _ref$autosize = _ref.autosize,\n      autosize = _ref$autosize === undefined ? false : _ref$autosize,\n      _ref$align = _ref.align,\n      align = _ref$align === undefined ? 'left' : _ref$align,\n      _ref$size = _ref.size,\n      size = _ref$size === undefined ? 'md' : _ref$size,\n      placeholder = _ref.placeholder,\n      dropdownProps = _ref.dropdownProps,\n      containerClassName = _ref.containerClassName,\n      onScrollOptions = _ref.onScrollOptions,\n      _ref$fetching = _ref.fetching,\n      fetching = _ref$fetching === undefined ? false : _ref$fetching,\n      onBlurHandler = _ref.onBlurHandler,\n      dropdownIcon = _ref.dropdownIcon,\n      rest = _objectWithoutProperties(_ref, ['intl', 'input', 'options', 'searchable', 'autosize', 'align', 'size', 'placeholder', 'dropdownProps', 'containerClassName', 'onScrollOptions', 'fetching', 'onBlurHandler', 'dropdownIcon']);\n\n  var selectedOption = options.find(function (a) {\n    return a.value === input.value || null;\n  }) || {};\n  return _react2.default.createElement('div', {\n    className: cx('xsui-select', containerClassName)\n  }, _react2.default.createElement(_dropdown2.default, _extends({\n    options: options,\n    value: input.value || null,\n    size: mapSize(size),\n    searchable: searchable,\n    autosize: autosize,\n    align: align,\n    separated: false,\n    onChange: input.onChange,\n    onScrollOptions: onScrollOptions,\n    fetching: fetching,\n    onClick: input.onClick\n  }, dropdownProps), _react2.default.createElement(_input2.default, _extends({}, rest, {\n    input: _extends({}, input, {\n      onBlur: function onBlur(e) {\n        e.preventDefault();\n\n        if (onBlurHandler) {\n          onBlurHandler(e);\n        }\n      },\n      value: (options.find(function (a) {\n        return a.value === input.value || null;\n      }) || {}).label,\n      onChange: function onChange() {\n        return void 0;\n      }\n    }),\n    size: size,\n    offset: selectedOption.customIcon ? 'both' : 'right',\n    icon: dropdownIcon || 'dropdown-select',\n    extra: selectedOption.customIcon,\n    placeholder: placeholder || intl.formatMessage(_messages2.default.placeholder),\n    readOnly: true\n  }))));\n};\n\nSelect.propTypes = bpfrpt_proptype_Props;\nexports.default = (0, _reactIntl.injectIntl)(Select);\nexports.bpfrpt_proptype_Props = bpfrpt_proptype_Props;","map":null,"metadata":{},"sourceType":"script"}