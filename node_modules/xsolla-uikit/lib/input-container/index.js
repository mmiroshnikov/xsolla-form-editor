'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bpfrpt_proptype_Props = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

var _validation = require('../messages/validation');

var _validation2 = _interopRequireDefault(_validation);

var _icon = require('../icon');

var _icon2 = _interopRequireDefault(_icon);

var _style = require('./style.css');

var _style2 = _interopRequireDefault(_style);

var _style3 = require('../input/style.css');

var _style4 = _interopRequireDefault(_style3);

var _input = require('../input');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var bpfrpt_proptype_Props = Object.assign({}, _input.bpfrpt_proptype_InputLook === _propTypes2.default.any ? {} : _input.bpfrpt_proptype_InputLook, {
  children: _propTypes2.default.any,
  className: _propTypes2.default.string,
  meta: function meta() {
    return (typeof _input.bpfrpt_proptype_Meta === 'function' ? _input.bpfrpt_proptype_Meta : _propTypes2.default.shape(_input.bpfrpt_proptype_Meta)).apply(this, arguments);
  },
  onClick: _propTypes2.default.func
});


var cx = _bind2.default.bind(_style4.default);

var InputContainer = function InputContainer(_ref) {
  var children = _ref.children,
      className = _ref.className,
      _ref$focused = _ref.focused,
      focused = _ref$focused === undefined ? false : _ref$focused,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === undefined ? false : _ref$disabled,
      _ref$meta = _ref.meta,
      meta = _ref$meta === undefined ? { touched: false, error: null } : _ref$meta,
      offset = _ref.offset,
      _ref$readOnly = _ref.readOnly,
      readOnly = _ref$readOnly === undefined ? false : _ref$readOnly,
      icon = _ref.icon,
      onClick = _ref.onClick;
  return _react2.default.createElement(
    _react.Fragment,
    null,
    _react2.default.createElement(
      'div',
      { className: _style2.default['xsui-input-container'] },
      _react2.default.createElement(
        'div',
        {
          className: cx('xsui-input', 'xsui-input--size-md', className && className, offset && 'xsui-input--offset xsui-input--offset-' + offset, focused && 'xsui-input--focused', readOnly && 'xsui-input--read-only', disabled && 'xsui-input--disabled', meta.touched && meta.error && 'xsui-input--error'),
          onClick: onClick },
        children
      ),
      icon && _react2.default.createElement(
        'div',
        { className: cx('xsui-input__icon') },
        _react2.default.createElement(_icon2.default, { name: icon })
      )
    ),
    meta.touched && meta.error && _react2.default.createElement(
      _validation2.default,
      null,
      meta.error
    )
  );
};

InputContainer.propTypes = bpfrpt_proptype_Props;
exports.default = InputContainer;
exports.bpfrpt_proptype_Props = bpfrpt_proptype_Props;