'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

var _zenscroll = require('zenscroll');

var _zenscroll2 = _interopRequireDefault(_zenscroll);

var _loader = require('../loader');

var _loader2 = _interopRequireDefault(_loader);

var _horizontalScroll = require('./horizontal-scroll');

var _horizontalScroll2 = _interopRequireDefault(_horizontalScroll);

var _rows = require('./rows');

var _rows2 = _interopRequireDefault(_rows);

var _headCell = require('./head-cell');

var _headCell2 = _interopRequireDefault(_headCell);

var _message = require('./message');

var _message2 = _interopRequireDefault(_message);

var _style = require('./style.css');

var _style2 = _interopRequireDefault(_style);

var _types = require('./types');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var cx = _bind2.default.bind(_style2.default);

var Table = function (_Component) {
  _inherits(Table, _Component);

  function Table() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Table);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Table.__proto__ || Object.getPrototypeOf(Table)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      headHeight: 0,
      wrapperWidth: 0
    }, _this.wrapperRef = (0, _react.createRef)(), _this.scrollWrapperRef = (0, _react.createRef)(), _this.headRef = (0, _react.createRef)(), _this.lastScrollX = 0, _this.lastScrollY = 0, _this.scrolling = false, _this.handleScroll = function () {
      var scrollWrapper = _this.scrollWrapperRef.current;

      if (!scrollWrapper) {
        return;
      }

      if (scrollWrapper.scrollTop !== _this.lastScrollY) {
        _this.onVerticalScroll();
      }

      _this.lastScrollX = scrollWrapper.scrollLeft;
      _this.lastScrollY = scrollWrapper.scrollTop;
    }, _this.onVerticalScroll = function () {
      var wrapperEl = _this.wrapperRef.current;

      if (!wrapperEl) {
        return;
      }

      // only one scrolling animation
      if (!_this.scrolling) {
        _this.scrolling = true;

        var animationSpeed = 300;

        _zenscroll2.default.to(wrapperEl, animationSpeed);
        setTimeout(function () {
          return _this.scrolling = false;
        }, animationSpeed);
      }
    }, _this.renderFetching = function () {
      return _react2.default.createElement(
        _message2.default,
        { colSpan: _this.props.columns.length, scrollWrapperRef: _this.scrollWrapperRef },
        _this.props.renderFetchingMessage ?
        // $FlowFixMe - this.props.renderFetchingMessage is undefined
        _this.props.renderFetchingMessage({
          columns: _this.props.columns,
          className: cx('xsui-table-message')
        }) : _react2.default.createElement(_loader2.default, { size: 'xlg', centered: true })
      );
    }, _this.renderEmptyMessage = function () {
      return _react2.default.createElement(
        _message2.default,
        { colSpan: _this.props.columns.length, scrollWrapperRef: _this.scrollWrapperRef },
        _this.props.renderEmptyMessage &&
        // $FlowFixMe - this.props.renderEmptyMessage is undefined
        _this.props.renderEmptyMessage({
          columns: _this.props.columns,
          className: cx('xsui-table-message')
        })
      );
    }, _this.renderRows = function () {
      if (_this.props.fetching) {
        return _this.renderFetching();
      }

      if (!_this.props.rows.length) {
        return _this.renderEmptyMessage();
      }

      return _react2.default.createElement(_rows2.default, {
        rows: _this.props.rows,
        columns: _this.props.columns,
        renderRow: _this.props.renderRow,
        compact: _this.props.compact
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Table, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      // disable auto smooth scroll for all links
      window.noZensmooth = true;

      var headEl = this.headRef.current;
      var scrollWrapperEl = this.scrollWrapperRef.current;

      if (headEl) {
        this.setState({
          headHeight: headEl.clientHeight
        });
      }

      if (scrollWrapperEl && this.props.stickyHead) {
        this.lastScrollX = scrollWrapperEl.scrollLeft;
        this.lastScrollY = scrollWrapperEl.scrollTop;

        scrollWrapperEl.addEventListener('scroll', this.handleScroll);
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var headEl = this.headRef.current;

      if (headEl && this.state.headHeight !== headEl.offsetHeight) {
        this.setState({
          headHeight: headEl.offsetHeight
        });
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      var scrollWrapperEl = this.scrollWrapperRef.current;

      if (scrollWrapperEl) {
        scrollWrapperEl.removeEventListener('scroll', this.handleScroll);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          columns = _props.columns,
          className = _props.className,
          tableClassName = _props.tableClassName,
          scrollWrapperClassName = _props.scrollWrapperClassName,
          compact = _props.compact,
          horizontalScroll = _props.horizontalScroll,
          stickyHead = _props.stickyHead;


      return _react2.default.createElement(
        'div',
        { ref: this.wrapperRef, className: cx('xsui-table__wrapper', className) },
        horizontalScroll && _react2.default.createElement(_horizontalScroll2.default, {
          headHeight: this.state.headHeight,
          headRef: this.headRef,
          scrollWrapperRef: this.scrollWrapperRef
        }),
        _react2.default.createElement(
          'div',
          {
            ref: this.scrollWrapperRef,
            className: cx('xsui-table__scroll-wrapper', scrollWrapperClassName) },
          _react2.default.createElement(
            'table',
            { className: cx('xsui-table', tableClassName) },
            _react2.default.createElement(
              'thead',
              null,
              _react2.default.createElement(
                'tr',
                { ref: this.headRef, className: cx('xsui-table__row', 'xsui-table__head-row') },
                columns.map(function (column, idx) {
                  return _react2.default.createElement(_headCell2.default, {
                    key: 'column-' + idx,
                    column: column,
                    compact: compact,
                    stickyRow: stickyHead
                  });
                })
              )
            ),
            this.renderRows()
          )
        )
      );
    }
  }]);

  return Table;
}(_react.Component);

Table.propTypes = {
  columns: _propTypes2.default.arrayOf(function () {
    return (typeof _types.bpfrpt_proptype_Column === 'function' ? _types.bpfrpt_proptype_Column.isRequired ? _types.bpfrpt_proptype_Column.isRequired : _types.bpfrpt_proptype_Column : _propTypes2.default.shape(_types.bpfrpt_proptype_Column).isRequired).apply(this, arguments);
  }),
  rows: _propTypes2.default.arrayOf(_propTypes2.default.object.isRequired),
  className: _propTypes2.default.string,
  tableClassName: _propTypes2.default.string,
  scrollWrapperClassName: _propTypes2.default.string,
  fetching: _propTypes2.default.bool,
  compact: _propTypes2.default.bool,
  horizontalScroll: _propTypes2.default.bool,
  stickyHead: _propTypes2.default.bool,
  renderRow: function renderRow() {
    return (typeof _types.bpfrpt_proptype_RenderRow === 'function' ? _types.bpfrpt_proptype_RenderRow : _propTypes2.default.shape(_types.bpfrpt_proptype_RenderRow)).apply(this, arguments);
  },
  renderEmptyMessage: function renderEmptyMessage() {
    return (typeof _types.bpfrpt_proptype_RenderEmptyMessage === 'function' ? _types.bpfrpt_proptype_RenderEmptyMessage : _propTypes2.default.shape(_types.bpfrpt_proptype_RenderEmptyMessage)).apply(this, arguments);
  },
  renderFetchingMessage: function renderFetchingMessage() {
    return (typeof _types.bpfrpt_proptype_RenderFetchingMessage === 'function' ? _types.bpfrpt_proptype_RenderFetchingMessage : _propTypes2.default.shape(_types.bpfrpt_proptype_RenderFetchingMessage)).apply(this, arguments);
  }
};
Table.defaultProps = {
  columns: [],
  rows: [],
  className: '',
  tableClassName: '',
  scrollWrapperClassName: '',
  fetching: false,
  compact: false,
  horizontalScroll: false,
  stickyHead: false
};
exports.default = Table;