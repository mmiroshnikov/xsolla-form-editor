'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

var _constants = require('../constants');

var _style = require('./style.css');

var _style2 = _interopRequireDefault(_style);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var cx = _bind2.default.bind(_style2.default);

var Message = function (_PureComponent) {
  _inherits(Message, _PureComponent);

  function Message() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Message);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Message.__proto__ || Object.getPrototypeOf(Message)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      width: 0
    }, _this.setWidth = function () {
      var wrapperEl = _this.props.scrollWrapperRef.current;

      if (!wrapperEl || wrapperEl.clientWidth === _this.state.width) {
        return;
      }

      _this.setState({
        width: wrapperEl.clientWidth
      });
    }, _this.setStyle = function () {
      var wrapperEl = _this.props.scrollWrapperRef.current;

      if (wrapperEl && wrapperEl.offsetHeight - _constants.MAX_HEAD_CELL_HEIGHT > _constants.MIN_BODY_HEIGHT) {
        return {
          width: _this.state.width + 'px',
          height: wrapperEl.offsetHeight - _constants.MAX_HEAD_CELL_HEIGHT - _constants.BODY_PADDINGS + 'px'
        };
      }

      return {
        width: _this.state.width + 'px'
      };
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Message, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      window.addEventListener('resize', this.setWidth);
      this.setWidth();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.setWidth();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      window.removeEventListener('resize', this.setWidth);
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'tbody',
        null,
        _react2.default.createElement(
          'tr',
          null,
          _react2.default.createElement(
            'td',
            { className: cx('xsui-table-message'), colSpan: this.props.colSpan },
            _react2.default.createElement(
              'div',
              { className: cx('xsui-table-message__wrapper'), style: this.setStyle() },
              this.props.children
            )
          )
        )
      );
    }
  }]);

  return Message;
}(_react.PureComponent);

Message.propTypes = {
  colSpan: _propTypes2.default.number.isRequired,
  scrollWrapperRef: _propTypes2.default.shape({
    current: function current() {
      return (typeof HTMLDivElement === 'function' ? _propTypes2.default.instanceOf(HTMLDivElement) : _propTypes2.default.any).apply(this, arguments);
    }
  }).isRequired,
  children: function children() {
    return (typeof React$Node === 'function' ? _propTypes2.default.instanceOf(React$Node).isRequired : _propTypes2.default.any.isRequired).apply(this, arguments);
  }
};
exports.default = Message;