'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

var _icon = require('../../icon');

var _icon2 = _interopRequireDefault(_icon);

var _utils = require('../../utils');

var _headCell = require('../head-cell');

var _style = require('./style.css');

var _style2 = _interopRequireDefault(_style);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var cx = _bind2.default.bind(_style2.default);

var HorizontalScroll = function (_PureComponent) {
  _inherits(HorizontalScroll, _PureComponent);

  function HorizontalScroll() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, HorizontalScroll);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = HorizontalScroll.__proto__ || Object.getPrototypeOf(HorizontalScroll)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      isHaveScroll: false,
      scrollLeftEnd: false,
      scrollRightEnd: false,
      wrapperLeft: 0
    }, _this.attachedScrollHandler = false, _this.wrapperScrollHandler = function (e) {
      _this.setButtonVisibility(e.currentTarget);
    }, _this.setButtonVisibility = function (wrapperEl) {
      var scrollLeftMax = wrapperEl.scrollWidth - wrapperEl.clientWidth;
      var inRightEnd = wrapperEl.scrollLeft === scrollLeftMax;

      return _this.setState({
        scrollLeftEnd: wrapperEl.scrollLeft === 0,
        scrollRightEnd: inRightEnd
      });
    }, _this.setScrollVisibility = function () {
      var wrapperEl = _this.props.scrollWrapperRef.current;

      if (!wrapperEl) {
        return;
      }

      var isHaveScroll = wrapperEl.scrollWidth !== wrapperEl.clientWidth;

      _this.setState({
        isHaveScroll: isHaveScroll
      });
    }, _this.setWrapperLeftPosition = function () {
      var stickyColsWidth = _this.getStickyColsWidth();

      _this.setState({
        wrapperLeft: stickyColsWidth
      });
    }, _this.getHeadElements = function () {
      var headRef = _this.props.headRef;


      var headEl = headRef.current;

      if (!headEl) {
        return [];
      }

      return [].concat(_toConsumableArray(headEl.children));
    }, _this.getStickyColsWidth = function () {
      var headChildren = _this.getHeadElements();

      var stickyCols = headChildren.filter(function (node) {
        return node.className.includes(_headCell.STICKY_CLASS);
      });

      return stickyCols.reduce(function (accum, current) {
        return accum += current.clientWidth;
      }, 0);
    }, _this.getHeadCol = function (type) {
      var scrollWrapperRef = _this.props.scrollWrapperRef;


      var wrapperEl = scrollWrapperRef.current;

      if (!wrapperEl) {
        return null;
      }

      var headChildes = _this.getHeadElements();
      var stickyColsWidth = _this.getStickyColsWidth();

      if (type === 'first') {
        var wrapperScrollWidth = wrapperEl.scrollLeft + stickyColsWidth;

        return headChildes.filter(function (node) {
          return node.offsetLeft < wrapperScrollWidth;
        }).pop() || null;
      }

      if (type === 'last') {
        var wrapperOffset = wrapperEl.clientWidth + wrapperEl.scrollLeft;

        return headChildes.find(function (node) {
          return node.offsetLeft + node.clientWidth > wrapperOffset;
        }) || null;
      }

      return null;
    }, _this.scrollTo = function (type) {
      var scrollWrapperRef = _this.props.scrollWrapperRef;


      var wrapperEl = scrollWrapperRef.current;
      var firstHiddenNode = _this.getHeadCol(type);

      if (!wrapperEl || !firstHiddenNode) {
        return;
      }

      var stickyColsWidth = _this.getStickyColsWidth();

      if (type === 'first') {
        wrapperEl.scrollLeft = firstHiddenNode.offsetLeft - stickyColsWidth;

        var nextCol = _this.getHeadCol(type);

        if (!nextCol) {
          _this.setState({
            scrollLeftEnd: true
          });
        }
      }

      if (type === 'last') {
        wrapperEl.scrollLeft = firstHiddenNode.offsetLeft + firstHiddenNode.clientWidth - wrapperEl.clientWidth;

        var _nextCol = _this.getHeadCol(type);

        if (!_nextCol) {
          _this.setState({
            scrollRightEnd: true
          });
        }
      }
    }, _this.handleResize = function () {
      var scrollWrapperEl = _this.props.scrollWrapperRef.current;
      if (scrollWrapperEl) {
        _this.setButtonVisibility(scrollWrapperEl);
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(HorizontalScroll, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      window.addEventListener('resize', this.handleResize);
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var wrapperEl = this.props.scrollWrapperRef.current;

      if (!wrapperEl) {
        return;
      }

      (0, _utils.onNextFrame)(this.setScrollVisibility);
      this.setButtonVisibility(wrapperEl);

      if (!this.attachedScrollHandler) {
        this.attachedScrollHandler = true;
        // $FlowFixMe - invalid first argument
        wrapperEl.addEventListener('scroll', this.wrapperScrollHandler);
      }

      this.setWrapperLeftPosition();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      var wrapperEl = this.props.scrollWrapperRef.current;

      if (wrapperEl) {
        this.attachedScrollHandler = false;
        // $FlowFixMe - invalid first argument
        wrapperEl.removeEventListener('scroll', this.wrapperScrollHandler);
        window.removeEventListener('resize', this.handleResize);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _state = this.state,
          isHaveScroll = _state.isHaveScroll,
          scrollLeftEnd = _state.scrollLeftEnd,
          scrollRightEnd = _state.scrollRightEnd;


      if (!isHaveScroll) {
        return null;
      }

      return _react2.default.createElement(
        'div',
        {
          className: cx('xsui-table-horizontal-scroll'),
          style: { top: this.props.headHeight, left: this.state.wrapperLeft } },
        !scrollLeftEnd && _react2.default.createElement(
          'div',
          {
            className: cx('xsui-table-horizontal-scroll__button', 'xsui-table-horizontal-scroll__button--left'),
            onClick: function onClick() {
              return _this2.scrollTo('first');
            } },
          _react2.default.createElement(_icon2.default, { name: 'chevron-reverse', color: '#0073f7' })
        ),
        !scrollRightEnd && _react2.default.createElement(
          'div',
          {
            className: cx('xsui-table-horizontal-scroll__button', 'xsui-table-horizontal-scroll__button--right'),
            onClick: function onClick() {
              return _this2.scrollTo('last');
            } },
          _react2.default.createElement(_icon2.default, { name: 'chevron', color: '#0073f7' })
        )
      );
    }
  }]);

  return HorizontalScroll;
}(_react.PureComponent);

HorizontalScroll.propTypes = {
  headHeight: _propTypes2.default.number,
  headRef: _propTypes2.default.shape({
    current: function current() {
      return (typeof HTMLTableRowElement === 'function' ? _propTypes2.default.instanceOf(HTMLTableRowElement) : _propTypes2.default.any).apply(this, arguments);
    }
  }),
  scrollWrapperRef: _propTypes2.default.shape({
    current: function current() {
      return (typeof HTMLDivElement === 'function' ? _propTypes2.default.instanceOf(HTMLDivElement) : _propTypes2.default.any).apply(this, arguments);
    }
  })
};
HorizontalScroll.defaultProps = {
  headHeight: 0,
  headRef: (0, _react.createRef)(),
  scrollWrapperRef: (0, _react.createRef)()
};
exports.default = HorizontalScroll;