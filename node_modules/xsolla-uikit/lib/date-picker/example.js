'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _button = require('../button');

var _button2 = _interopRequireDefault(_button);

var _icon = require('../icon');

var _icon2 = _interopRequireDefault(_icon);

var _formGroup = require('../form-group');

var _formGroup2 = _interopRequireDefault(_formGroup);

var _datePickerInput = require('../date-picker-input');

var _datePickerInput2 = _interopRequireDefault(_datePickerInput);

var _datePickerInputRange = require('../date-picker-input-range');

var _datePickerInputRange2 = _interopRequireDefault(_datePickerInputRange);

var _datePicker = require('../date-picker');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DatePickerExample = function (_PureComponent) {
  _inherits(DatePickerExample, _PureComponent);

  function DatePickerExample() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, DatePickerExample);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DatePickerExample.__proto__ || Object.getPrototypeOf(DatePickerExample)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      single: null,
      range: {
        from: null,
        to: null
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(DatePickerExample, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        _react.Fragment,
        null,
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'Single input', indentation: 'sm' },
          _react2.default.createElement(_datePickerInput2.default, {
            name: 'single',
            input: {
              value: this.state.single,
              onChange: function onChange(day) {
                return _this2.setState({ single: day });
              }
            },
            size: 'sm'
          })
        ),
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'Single input (with time)' },
          _react2.default.createElement(_datePickerInput2.default, {
            name: 'single',
            input: {
              value: this.state.single,
              onChange: function onChange(day) {
                return _this2.setState({ single: day });
              }
            },
            size: 'sm',
            pickTime: true
          })
        ),
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'Single input (with month)' },
          _react2.default.createElement(_datePickerInput2.default, {
            name: 'single',
            input: {
              value: this.state.single,
              onChange: function onChange(day) {
                return _this2.setState({ single: day });
              }
            },
            size: 'sm',
            pickMonth: true
          })
        ),
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'Single input (with time and disabled minutes)' },
          _react2.default.createElement(_datePickerInput2.default, {
            name: 'single',
            input: {
              value: this.state.single,
              onChange: function onChange(day) {
                return _this2.setState({ single: day });
              }
            },
            size: 'sm',
            pickTime: true,
            timePickerProps: { disabledMinutes: true }
          })
        ),
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'Single input (custom input)' },
          _react2.default.createElement(_datePickerInput2.default, {
            name: 'single',
            input: {
              value: this.state.single,
              onChange: function onChange(day) {
                return _this2.setState({ single: day });
              }
            },
            customInput: function customInput(_ref2) {
              var size = _ref2.size,
                  placeholder = _ref2.placeholder,
                  disabled = _ref2.disabled,
                  focused = _ref2.focused,
                  onClick = _ref2.onClick,
                  raw = _ref2.raw;
              return _react2.default.createElement(
                _button2.default,
                {
                  appearance: 'flatten',
                  size: size,
                  disabled: disabled,
                  focused: focused,
                  onClick: onClick },
                _react2.default.createElement(_icon2.default, { name: 'calendar' }),
                ' ',
                raw && new Date(raw).toDateString() || placeholder
              );
            }
          })
        ),
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'Range input (with presets)', indentation: 'sm' },
          _react2.default.createElement(_datePickerInputRange2.default, {
            name: 'range',
            input: {
              value: this.state.range,
              onChange: function onChange(range) {
                return _this2.setState({ range: range });
              }
            },
            size: 'sm',
            visiblePresets: true,
            visibleClearButton: true
          })
        ),
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'Range input (1 month)' },
          _react2.default.createElement(_datePickerInputRange2.default, {
            name: 'range',
            input: {
              value: this.state.range,
              onChange: function onChange(range) {
                return _this2.setState({ range: range });
              }
            },
            numberOfMonths: 1,
            size: 'sm'
          })
        ),
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'Disabled' },
          _react2.default.createElement(_datePickerInput2.default, {
            name: 'single',
            input: {
              value: this.state.single,
              onChange: function onChange(day) {
                return _this2.setState({ single: day });
              }
            },
            size: 'sm',
            disabled: true
          })
        ),
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'Different position and align' },
          _react2.default.createElement(_datePickerInput2.default, {
            name: 'single',
            input: {
              value: this.state.single,
              onChange: function onChange(day) {
                return _this2.setState({ single: day });
              }
            },
            size: 'sm',
            position: 'top'
          }),
          '\xA0\xA0\xA0',
          _react2.default.createElement(_datePickerInput2.default, {
            name: 'single',
            input: {
              value: this.state.single,
              onChange: function onChange(day) {
                return _this2.setState({ single: day });
              }
            },
            size: 'sm',
            position: 'bottom'
          }),
          '\xA0\xA0\xA0',
          _react2.default.createElement(_datePickerInput2.default, {
            name: 'single',
            input: {
              value: this.state.single,
              onChange: function onChange(day) {
                return _this2.setState({ single: day });
              }
            },
            size: 'sm',
            position: 'right',
            align: 'top'
          }),
          '\xA0\xA0\xA0',
          _react2.default.createElement(_datePickerInput2.default, {
            name: 'single',
            input: {
              value: this.state.single,
              onChange: function onChange(day) {
                return _this2.setState({ single: day });
              }
            },
            size: 'sm',
            position: 'right',
            align: 'bottom'
          })
        )
      );
    }
  }]);

  return DatePickerExample;
}(_react.PureComponent);

exports.default = DatePickerExample;