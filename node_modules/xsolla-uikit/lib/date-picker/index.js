'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bpfrpt_proptype_DatePickerProps = exports.bpfrpt_proptype_DatePickerType = exports.bpfrpt_proptype_PeriodValueType = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactIntl = require('react-intl');

var _reactDayPicker = require('react-day-picker');

var _reactDayPicker2 = _interopRequireDefault(_reactDayPicker);

var _moment = require('react-day-picker/moment');

var _moment2 = _interopRequireDefault(_moment);

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

var _classNames = require('./classNames');

var _classNames2 = _interopRequireDefault(_classNames);

var _navbar = require('./navbar');

var _navbar2 = _interopRequireDefault(_navbar);

var _button = require('../button');

var _button2 = _interopRequireDefault(_button);

var _utils = require('../utils');

var _style = require('./style.css');

var _style2 = _interopRequireDefault(_style);

var _yearMonthPicker = require('./year-month-picker');

var _yearMonthPicker2 = _interopRequireDefault(_yearMonthPicker);

var _types = require('./types');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var bpfrpt_proptype_PeriodValueType = {
  from: function from() {
    return (typeof Date === 'function' ? _propTypes2.default.instanceOf(Date) : _propTypes2.default.any).apply(this, arguments);
  },
  to: function to() {
    return (typeof Date === 'function' ? _propTypes2.default.instanceOf(Date) : _propTypes2.default.any).apply(this, arguments);
  }
};
var bpfrpt_proptype_DatePickerType = {
  initialMonth: function initialMonth() {
    return (typeof Date === 'function' ? _propTypes2.default.instanceOf(Date) : _propTypes2.default.any).apply(this, arguments);
  },
  numberOfMonths: _propTypes2.default.number,
  selectedDays: _propTypes2.default.any,
  disabledDays: _propTypes2.default.any,
  modifiers: _propTypes2.default.any,
  timePicker: function timePicker() {
    return (typeof React$Node === 'function' ? _propTypes2.default.instanceOf(React$Node) : _propTypes2.default.any).apply(this, arguments);
  },
  monthPicker: function monthPicker() {
    return (typeof _yearMonthPicker2.default === 'function' ? _propTypes2.default.instanceOf(_yearMonthPicker2.default) : _propTypes2.default.any).apply(this, arguments);
  },
  captionElement: function captionElement() {
    return (typeof React$Element === 'function' ? _propTypes2.default.instanceOf(React$Element) : _propTypes2.default.any).apply(this, arguments);
  },
  footer: function footer() {
    return (typeof React$Node === 'function' ? _propTypes2.default.instanceOf(React$Node) : _propTypes2.default.any).apply(this, arguments);
  },
  actions: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    label: _propTypes2.default.string,
    forceAlignRight: _propTypes2.default.bool,
    onClick: _propTypes2.default.func
  }).isRequired),
  onDayClick: _propTypes2.default.func,
  onDayMouseEnter: _propTypes2.default.func,
  disabledMinutes: _propTypes2.default.bool
};
var bpfrpt_proptype_DatePickerProps = {
  initialMonth: function initialMonth() {
    return (typeof Date === 'function' ? _propTypes2.default.instanceOf(Date) : _propTypes2.default.any).apply(this, arguments);
  },
  numberOfMonths: _propTypes2.default.number,
  selectedDays: _propTypes2.default.any,
  disabledDays: _propTypes2.default.any,
  modifiers: _propTypes2.default.any,
  timePicker: function timePicker() {
    return (typeof React$Node === 'function' ? _propTypes2.default.instanceOf(React$Node) : _propTypes2.default.any).apply(this, arguments);
  },
  monthPicker: function monthPicker() {
    return (typeof _yearMonthPicker2.default === 'function' ? _propTypes2.default.instanceOf(_yearMonthPicker2.default) : _propTypes2.default.any).apply(this, arguments);
  },
  captionElement: function captionElement() {
    return (typeof React$Element === 'function' ? _propTypes2.default.instanceOf(React$Element) : _propTypes2.default.any).apply(this, arguments);
  },
  footer: function footer() {
    return (typeof React$Node === 'function' ? _propTypes2.default.instanceOf(React$Node) : _propTypes2.default.any).apply(this, arguments);
  },
  actions: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    label: _propTypes2.default.string,
    forceAlignRight: _propTypes2.default.bool,
    onClick: _propTypes2.default.func
  }).isRequired),
  onDayClick: _propTypes2.default.func,
  onDayMouseEnter: _propTypes2.default.func,
  disabledMinutes: _propTypes2.default.bool,
  intl: function intl() {
    return (typeof IntlShape === 'function' ? _propTypes2.default.instanceOf(IntlShape).isRequired : _propTypes2.default.any.isRequired).apply(this, arguments);
  },
  position: function position() {
    return (typeof _types.bpfrpt_proptype_PositionType === 'function' ? _types.bpfrpt_proptype_PositionType : _propTypes2.default.shape(_types.bpfrpt_proptype_PositionType)).apply(this, arguments);
  },
  align: function align() {
    return (typeof _types.bpfrpt_proptype_AlignType === 'function' ? _types.bpfrpt_proptype_AlignType : _propTypes2.default.shape(_types.bpfrpt_proptype_AlignType)).apply(this, arguments);
  }
};


var cx = _bind2.default.bind(_style2.default);

var alignVerticalDropdown = ['top', 'bottom'];
var alignHorizontalDropdown = ['left', 'right'];

var getAlign = function getAlign(props) {
  var position = props.position,
      align = props.align;


  if (position === 'right') {
    return align && alignVerticalDropdown.includes(align) ? align : 'top';
  }

  return align && alignHorizontalDropdown.includes(align) ? align : 'right';
};

var DatePicker = function (_PureComponent) {
  _inherits(DatePicker, _PureComponent);

  function DatePicker() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, DatePicker);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DatePicker.__proto__ || Object.getPrototypeOf(DatePicker)).call.apply(_ref, [this].concat(args))), _this), _this.positionPredetermined = !!_this.props.position, _this.alignPredetermined = !!_this.props.align, _this.state = {
      position: _this.props.position || 'top',
      align: getAlign(_this.props)
    }, _this.determineDropdownPosition = function () {
      if (!(0, _utils.visibleInPage)(_this.instance)) {
        _this.togglePosition();
      }
    }, _this.togglePosition = function () {
      var _this$state = _this.state,
          position = _this$state.position,
          align = _this$state.align;


      if (position === 'right') {
        return _this.setState({ align: align === 'bottom' ? 'top' : 'bottom' });
      }

      return _this.setState({
        position: position === 'top' ? 'bottom' : 'top',
        align: (0, _utils.needChangeSide)(_this.instance) ? 'left' : 'right'
      });
    }, _this.determineAlignPosition = function () {
      var isNeedChangeSide = (0, _utils.needChangeSide)(_this.instance);

      _this.setState({ align: isNeedChangeSide ? 'left' : 'right' });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(DatePicker, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var position = this.state.position;


      if (!this.positionPredetermined || position === 'right' && !this.alignPredetermined) {
        this.determineDropdownPosition();
      }

      if (position !== 'right' && !this.alignPredetermined) {
        this.determineAlignPosition();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          intl = _props.intl,
          _props$initialMonth = _props.initialMonth,
          initialMonth = _props$initialMonth === undefined ? new Date() : _props$initialMonth,
          _props$numberOfMonths = _props.numberOfMonths,
          numberOfMonths = _props$numberOfMonths === undefined ? 1 : _props$numberOfMonths,
          timePicker = _props.timePicker,
          monthPicker = _props.monthPicker,
          footer = _props.footer,
          _props$actions = _props.actions,
          actions = _props$actions === undefined ? [] : _props$actions,
          rest = _objectWithoutProperties(_props, ['intl', 'initialMonth', 'numberOfMonths', 'timePicker', 'monthPicker', 'footer', 'actions']);

      var privateProps = {
        navbarElement: monthPicker ? monthPicker : _navbar2.default,
        localeUtils: _moment2.default,
        locale: intl.locale,
        classNames: _classNames2.default,
        month: !monthPicker ? initialMonth : monthPicker.props.value
      };

      return _react2.default.createElement(
        'div',
        {
          className: cx('xsui-datepicker__dropdown', 'xsui-datepicker__dropdown--position-' + this.state.position, 'xsui-datepicker__dropdown--align-' + this.state.align),
          ref: function ref(instance) {
            return _this2.instance = instance;
          } },
        _react2.default.createElement(_reactDayPicker2.default, _extends({
          fixedWeeks: true,
          initialMonth: initialMonth,
          numberOfMonths: numberOfMonths,
          onMonthChange: this.determineDropdownPosition,
          captionElement: monthPicker ? _react2.default.createElement('div', null) : this.props.captionElement
        }, rest, privateProps)),
        timePicker,
        footer && _react2.default.createElement(
          'div',
          { className: cx('xsui-datepicker__footer') },
          footer
        ),
        !!actions.length && _react2.default.createElement(
          'div',
          { className: cx('xsui-datepicker__actions') },
          actions.filter(function (a) {
            return a;
          }).map(function (action, index) {
            return _react2.default.createElement(
              _button2.default,
              {
                key: 'action--' + index,
                appearance: 'flatten',
                onClick: action.onClick,
                style: action.forceAlignRight ? { marginLeft: 'auto' } : {} },
              action.label
            );
          })
        )
      );
    }
  }]);

  return DatePicker;
}(_react.PureComponent);

DatePicker.propTypes = {
  initialMonth: function initialMonth() {
    return (typeof Date === 'function' ? _propTypes2.default.instanceOf(Date) : _propTypes2.default.any).apply(this, arguments);
  },
  numberOfMonths: _propTypes2.default.number,
  selectedDays: _propTypes2.default.any,
  disabledDays: _propTypes2.default.any,
  modifiers: _propTypes2.default.any,
  timePicker: function timePicker() {
    return (typeof React$Node === 'function' ? _propTypes2.default.instanceOf(React$Node) : _propTypes2.default.any).apply(this, arguments);
  },
  monthPicker: function monthPicker() {
    return (typeof _yearMonthPicker2.default === 'function' ? _propTypes2.default.instanceOf(_yearMonthPicker2.default) : _propTypes2.default.any).apply(this, arguments);
  },
  captionElement: function captionElement() {
    return (typeof React$Element === 'function' ? _propTypes2.default.instanceOf(React$Element) : _propTypes2.default.any).apply(this, arguments);
  },
  footer: function footer() {
    return (typeof React$Node === 'function' ? _propTypes2.default.instanceOf(React$Node) : _propTypes2.default.any).apply(this, arguments);
  },
  actions: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    label: _propTypes2.default.string,
    forceAlignRight: _propTypes2.default.bool,
    onClick: _propTypes2.default.func
  }).isRequired),
  onDayClick: _propTypes2.default.func,
  onDayMouseEnter: _propTypes2.default.func,
  disabledMinutes: _propTypes2.default.bool,
  intl: function intl() {
    return (typeof IntlShape === 'function' ? _propTypes2.default.instanceOf(IntlShape).isRequired : _propTypes2.default.any.isRequired).apply(this, arguments);
  },
  position: function position() {
    return (typeof _types.bpfrpt_proptype_PositionType === 'function' ? _types.bpfrpt_proptype_PositionType : _propTypes2.default.shape(_types.bpfrpt_proptype_PositionType)).apply(this, arguments);
  },
  align: function align() {
    return (typeof _types.bpfrpt_proptype_AlignType === 'function' ? _types.bpfrpt_proptype_AlignType : _propTypes2.default.shape(_types.bpfrpt_proptype_AlignType)).apply(this, arguments);
  }
};
exports.default = (0, _reactIntl.injectIntl)(DatePicker);
exports.bpfrpt_proptype_PeriodValueType = bpfrpt_proptype_PeriodValueType;
exports.bpfrpt_proptype_DatePickerType = bpfrpt_proptype_DatePickerType;
exports.bpfrpt_proptype_DatePickerProps = bpfrpt_proptype_DatePickerProps;