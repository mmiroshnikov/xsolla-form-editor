'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bpfrpt_proptype_PresetsData = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

var _style = require('./style.css');

var _style2 = _interopRequireDefault(_style);

var _datePicker = require('../../date-picker');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var bpfrpt_proptype_PresetsData = _propTypes2.default.objectOf(_propTypes2.default.shape({
  from: function from() {
    return (typeof Date === 'function' ? _propTypes2.default.instanceOf(Date) : _propTypes2.default.any).apply(this, arguments);
  },
  to: function to() {
    return (typeof Date === 'function' ? _propTypes2.default.instanceOf(Date) : _propTypes2.default.any).apply(this, arguments);
  },
  label: _propTypes2.default.string
}).isRequired);

var cx = _bind2.default.bind(_style2.default);

var Presets = function (_PureComponent) {
  _inherits(Presets, _PureComponent);

  function Presets() {
    _classCallCheck(this, Presets);

    return _possibleConstructorReturn(this, (Presets.__proto__ || Object.getPrototypeOf(Presets)).apply(this, arguments));
  }

  _createClass(Presets, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          value = _props.value,
          onChange = _props.onChange,
          data = _props.data;


      var computedPresets = Object.keys(data).map(function (key) {
        return {
          key: key,
          name: key,
          value: data[key],
          label: data[key].label,
          isActive: value.from === data[key].from && value.to === data[key].to
        };
      });

      return _react2.default.createElement(
        'div',
        { className: cx('xsui-datepicker-presets') },
        computedPresets.map(function (preset) {
          return _react2.default.createElement(
            'div',
            { key: 'footer-preset--' + preset.key, className: cx('xsui-datepicker-presets__item') },
            _react2.default.createElement(
              'button',
              {
                className: cx('xsui-datepicker-presets__button', preset.isActive && 'xsui-datepicker-presets__button--active'),
                onClick: onChange.bind(_this2, preset.value) },
              preset.label
            )
          );
        })
      );
    }
  }]);

  return Presets;
}(_react.PureComponent);

Presets.propTypes = {
  value: function value() {
    return (typeof _datePicker.bpfrpt_proptype_PeriodValueType === 'function' ? _datePicker.bpfrpt_proptype_PeriodValueType.isRequired ? _datePicker.bpfrpt_proptype_PeriodValueType.isRequired : _datePicker.bpfrpt_proptype_PeriodValueType : _propTypes2.default.shape(_datePicker.bpfrpt_proptype_PeriodValueType).isRequired).apply(this, arguments);
  },
  onChange: _propTypes2.default.func.isRequired,
  data: _propTypes2.default.objectOf(_propTypes2.default.shape({
    from: function from() {
      return (typeof Date === 'function' ? _propTypes2.default.instanceOf(Date) : _propTypes2.default.any).apply(this, arguments);
    },
    to: function to() {
      return (typeof Date === 'function' ? _propTypes2.default.instanceOf(Date) : _propTypes2.default.any).apply(this, arguments);
    },
    label: _propTypes2.default.string
  }).isRequired).isRequired
};
exports.default = Presets;
exports.bpfrpt_proptype_PresetsData = bpfrpt_proptype_PresetsData;