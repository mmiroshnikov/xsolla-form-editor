'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _index = require('./index');

var _index2 = _interopRequireDefault(_index);

var _formGroup = require('../form-group');

var _formGroup2 = _interopRequireDefault(_formGroup);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var options = [{
  id: 1,
  label: 'Troopers',
  options: [{ id: 213, label: 'Super tanks' }, {
    id: 41,
    label: 'Base tanks',
    options: [{ id: 3451, label: 'Disabled item', disabled: true }, { id: 9912, label: 'See tanks' }]
  }]
}, { id: 3, label: 'Planes' }, { id: 4, label: 'Tanks' }, { id: 5, label: 'Sharks' }, { id: 6, label: 'Other' }];

var ExampleTWP = function (_Component) {
  _inherits(ExampleTWP, _Component);

  function ExampleTWP() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, ExampleTWP);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ExampleTWP.__proto__ || Object.getPrototypeOf(ExampleTWP)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      single: [{ id: 9912, label: 'See tanks' }],
      multiple: [{ id: 3, label: 'Planes' }],
      multipleWithFolder: [{ id: 1, label: 'Troopers' }, { id: 3, label: 'Planes' }]
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ExampleTWP, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        _react.Fragment,
        null,
        _react2.default.createElement(
          'div',
          { className: 'example__row' },
          _react2.default.createElement(
            'div',
            { className: 'example__col', style: { width: 468 } },
            _react2.default.createElement(
              _formGroup2.default,
              { label: 'Single' },
              _react2.default.createElement(_index2.default, {
                name: 'single',
                input: {
                  value: this.state.single,
                  onChange: function onChange(single) {
                    return _this2.setState({ single: single });
                  }
                },
                options: options
              })
            )
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'example__row' },
          _react2.default.createElement(
            'div',
            { className: 'example__col', style: { width: 468 } },
            _react2.default.createElement(
              _formGroup2.default,
              { label: 'Multiple' },
              _react2.default.createElement(_index2.default, {
                name: 'basic',
                allowMultiSelect: true,
                input: {
                  value: this.state.multiple,
                  onChange: function onChange(multiple) {
                    return _this2.setState({ multiple: multiple });
                  }
                },
                options: options
              })
            )
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'example__row' },
          _react2.default.createElement(
            'div',
            { className: 'example__col', style: { width: 468 } },
            _react2.default.createElement(
              _formGroup2.default,
              { label: 'Multiple with tags' },
              _react2.default.createElement(_index2.default, {
                kind: 'tags',
                name: 'basic',
                allowMultiSelect: true,
                input: {
                  value: this.state.multiple,
                  onChange: function onChange(multiple) {
                    return _this2.setState({ multiple: multiple });
                  }
                },
                options: options
              })
            )
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'example__row' },
          _react2.default.createElement(
            'div',
            { className: 'example__col', style: { width: 468 } },
            _react2.default.createElement(
              _formGroup2.default,
              { label: 'Multiple & allow select nested folder' },
              _react2.default.createElement(_index2.default, {
                name: 'basic',
                allowMultiSelect: true,
                allowSelectNestedFolder: true,
                input: {
                  value: this.state.multipleWithFolder,
                  onChange: function onChange(multipleWithFolder) {
                    return _this2.setState({ multipleWithFolder: multipleWithFolder });
                  }
                },
                options: options
              })
            )
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'example__row' },
          _react2.default.createElement(
            'div',
            { className: 'example__col', style: { width: 468 } },
            _react2.default.createElement(
              _formGroup2.default,
              { label: 'Display only selected items count with kind="count"' },
              _react2.default.createElement(_index2.default, {
                name: 'basic',
                kind: 'count',
                allowMultiSelect: true,
                input: {
                  value: this.state.multiple,
                  onChange: function onChange(multiple) {
                    return _this2.setState({ multiple: multiple });
                  }
                },
                options: options
              })
            )
          )
        )
      );
    }
  }]);

  return ExampleTWP;
}(_react.Component);

exports.default = ExampleTWP;