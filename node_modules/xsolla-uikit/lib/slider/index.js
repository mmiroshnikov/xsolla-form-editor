'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _rcSlider = require('rc-slider');

var _rcSlider2 = _interopRequireDefault(_rcSlider);

var _validation = require('../messages/validation');

var _validation2 = _interopRequireDefault(_validation);

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

var _style = require('./style.css');

var _style2 = _interopRequireDefault(_style);

var _input = require('../input');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cx = _bind2.default.bind(_style2.default);

var SliderContainer = function SliderContainer(_ref) {
  var input = _ref.input,
      _ref$meta = _ref.meta,
      meta = _ref$meta === undefined ? { touched: false, error: null } : _ref$meta,
      _ref$min = _ref.min,
      min = _ref$min === undefined ? 0 : _ref$min,
      _ref$max = _ref.max,
      max = _ref$max === undefined ? 100 : _ref$max,
      _ref$step = _ref.step,
      step = _ref$step === undefined ? 1 : _ref$step,
      _ref$range = _ref.range,
      range = _ref$range === undefined ? false : _ref$range,
      _ref$allowCross = _ref.allowCross,
      allowCross = _ref$allowCross === undefined ? true : _ref$allowCross,
      _ref$count = _ref.count,
      count = _ref$count === undefined ? 1 : _ref$count,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === undefined ? false : _ref$disabled;
  return _react2.default.createElement(
    'div',
    { className: cx('xsui-slider') },
    range ? _react2.default.createElement(_rcSlider2.default.Range, _extends({
      min: min,
      max: max,
      step: step,
      disabled: disabled,
      allowCross: allowCross,
      count: count
    }, input)) : _react2.default.createElement(_rcSlider2.default, _extends({ min: min, max: max, step: step, disabled: disabled }, input)),
    meta.touched && meta.error && _react2.default.createElement(
      _validation2.default,
      null,
      meta.error
    )
  );
};

SliderContainer.propTypes = {
  input: _propTypes2.default.shape({
    name: _propTypes2.default.string.isRequired,
    value: function value(props, propName, componentName) {
      if (!Object.prototype.hasOwnProperty.call(props, propName)) {
        throw new Error('Prop `' + propName + '` has type \'any\' or \'mixed\', but was not provided to `' + componentName + '`. Pass undefined or any other value.');
      }
    },
    onBlur: _propTypes2.default.func,
    onChange: _propTypes2.default.func.isRequired,
    onDragStart: _propTypes2.default.func,
    onDrop: _propTypes2.default.func,
    onFocus: _propTypes2.default.func
  }).isRequired,
  meta: function meta() {
    return (typeof _input.bpfrpt_proptype_Meta === 'function' ? _input.bpfrpt_proptype_Meta : _propTypes2.default.shape(_input.bpfrpt_proptype_Meta)).apply(this, arguments);
  },
  min: _propTypes2.default.number,
  max: _propTypes2.default.number,
  step: _propTypes2.default.number,
  range: _propTypes2.default.bool,
  allowCross: _propTypes2.default.bool,
  count: _propTypes2.default.number,
  disabled: _propTypes2.default.bool
};
exports.default = SliderContainer;