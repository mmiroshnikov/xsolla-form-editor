'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

var _inputContainer = require('../input-container');

var _inputContainer2 = _interopRequireDefault(_inputContainer);

var _tag = require('../tag');

var _tag2 = _interopRequireDefault(_tag);

var _style = require('./style.css');

var _style2 = _interopRequireDefault(_style);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var cx = _bind2.default.bind(_style2.default);

var InputTags = function (_PureComponent) {
  _inherits(InputTags, _PureComponent);

  function InputTags() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, InputTags);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = InputTags.__proto__ || Object.getPrototypeOf(InputTags)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      focused: false
    }, _this.toggleFocus = function () {
      return _this.setState({ focused: !_this.state.focused });
    }, _this.addTag = function (e) {
      if (e.target.value) {
        _this.props.fields.push(e.target.value);
        e.target.value = '';
      }

      e.preventDefault();
    }, _this.handleKeyDown = function (e) {
      if (e.keyCode === 13) {
        return _this.addTag(e);
      }

      if (e.keyCode === 8 && !e.target.value) {
        return _this.props.fields.remove(_this.props.fields.getAll().length - 1);
      }
    }, _this.handleTagClick = function (index) {
      return function (e) {
        e.stopPropagation();
        _this.props.fields.remove(index);
      };
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(InputTags, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          fields = _props.fields,
          placeholder = _props.placeholder,
          _props$hideInput = _props.hideInput,
          hideInput = _props$hideInput === undefined ? false : _props$hideInput,
          rest = _objectWithoutProperties(_props, ['fields', 'placeholder', 'hideInput']);

      var tags = fields.getAll();
      return _react2.default.createElement(
        _inputContainer2.default,
        _extends({ className: cx('xsui-input-tag'), focused: this.state.focused }, rest),
        Array.isArray(tags) && tags.length > 0 && tags.map(function (tag, index) {
          return _react2.default.createElement(
            'div',
            { key: 'tag-' + index, className: cx('xsui-input-tag__item') },
            _react2.default.createElement(
              _tag2.default,
              {
                appearance: 'secondary',
                selected: true,
                value: tag,
                onClick: _this2.handleTagClick(index) },
              tag
            )
          );
        }),
        !hideInput && _react2.default.createElement(
          'div',
          {
            className: cx('xsui-input-tag__input', !placeholder && 'xsui-input-tag__input__no-placeholder') },
          _react2.default.createElement('input', {
            type: 'text',
            placeholder: placeholder,
            onKeyDown: this.handleKeyDown,
            onFocus: this.toggleFocus,
            onBlur: function onBlur(e) {
              _this2.toggleFocus();
              _this2.addTag(e);
            }
          })
        ),
        hideInput && tags.length === 0 && placeholder && _react2.default.createElement(
          'div',
          { className: cx('xsui-input-tag__placeholder') },
          placeholder
        )
      );
    }
  }]);

  return InputTags;
}(_react.PureComponent);

InputTags.propTypes = Object.assign({}, _inputContainer.bpfrpt_proptype_Props === _propTypes2.default.any ? {} : _inputContainer.bpfrpt_proptype_Props, {
  fields: function fields(props, propName, componentName) {
    if (!Object.prototype.hasOwnProperty.call(props, propName)) {
      throw new Error('Prop `' + propName + '` has type \'any\' or \'mixed\', but was not provided to `' + componentName + '`. Pass undefined or any other value.');
    }
  },
  placeholder: _propTypes2.default.string,
  hideInput: _propTypes2.default.bool
});
exports.default = InputTags;