'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _formGroup = require('../form-group');

var _formGroup2 = _interopRequireDefault(_formGroup);

var _index = require('./index');

var _index2 = _interopRequireDefault(_index);

var _mapData = require('./examples/mapData');

var _mapData2 = _interopRequireDefault(_mapData);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  return _react2.default.createElement(
    _react.Fragment,
    null,
    _react2.default.createElement(
      _formGroup2.default,
      { label: 'Combined' },
      _react2.default.createElement(_index2.default, {
        options: {
          xAxis: {
            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul']
          },
          yAxis: [{
            title: {
              text: 'Gross revenue, USD'
            },
            labels: {
              format: '${value}',
              formatter: function formatter() {
                var value = this.value;
                return value % 100 === 0 ? '$' + value / 1000 + 'k' : '$' + value;
              }
            }
          }, {
            title: {
              text: 'Payments'
            },
            opposite: true
          }],
          series: [{
            name: 'Gross revenue',
            tooltip: {
              valuePrefix: '$'
            },
            type: 'column',
            data: [1471, 7914, 6973, 3048, 5869, 4859, 5437]
          }, {
            name: 'Payments',
            yAxis: 1,
            data: [1233, 1444, 1421, 500, 1355, 1245, 1355]
          }]
        }
      })
    ),
    _react2.default.createElement(
      _formGroup2.default,
      { label: 'Line' },
      _react2.default.createElement(_index2.default, {
        options: {
          xAxis: {
            categories: ['10/01/19', '10/02/19', '10/03/19', '10/04/19', '10/05/19', '10/06/19', '10/07/19', '10/08/19', '10/09/19', '10/10/19', '10/11/19', '10/12/19']
          },
          yAxis: [{
            title: {
              text: 'Gross revenue, USD'
            },
            labels: {
              format: '${value}',
              formatter: function formatter() {
                var value = this.value;
                return value % 100 === 0 ? '$' + value / 1000 + 'k' : '$' + value;
              }
            }
          }],
          series: [{
            name: 'Gross revenue',
            colorIndex: 1,
            data: [1183, 1101, 1067, 329, 1558, 2844, 2316, 3474, 117, 744, 1307, 206]
          }]
        }
      })
    ),
    _react2.default.createElement(
      _formGroup2.default,
      { label: 'Lines' },
      _react2.default.createElement(_index2.default, {
        options: {
          xAxis: {
            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul']
          },
          yAxis: [{
            title: {
              text: 'Gross revenue, USD'
            },
            labels: {
              format: '${value}',
              formatter: function formatter() {
                var value = this.value;
                return value % 100 === 0 ? '$' + value / 1000 + 'k' : '$' + value;
              }
            }
          }, {
            title: {
              text: 'Payments'
            },
            opposite: true
          }],
          series: [{
            name: 'Gross revenue, USD',
            data: [1471, 7914, 6973, 3048, 5869, 4859, 5437]
          }, {
            name: 'Payments',
            yAxis: 1,
            data: [1233, 1444, 1421, 500, 1355, 1245, 1355]
          }]
        }
      })
    ),
    _react2.default.createElement(
      _formGroup2.default,
      { label: 'Bars' },
      _react2.default.createElement(_index2.default, {
        options: {
          chart: {
            type: 'column'
          },
          tooltip: {
            header: 'Today',
            total: 21
          },
          legend: {
            enabled: false
          },
          xAxis: {
            categories: ['Apples', 'Oranges', 'Pears', 'Grapes', 'Bananas']
          },
          yAxis: {
            title: {
              text: 'Total fruit consumption'
            },
            stackLabels: {
              format: '{total} units'
            }
          },
          series: [{
            name: 'John',
            data: [5, 3, 4, 7, 2]
          }]
        }
      })
    ),
    _react2.default.createElement(
      _formGroup2.default,
      { label: 'Stacked bars' },
      _react2.default.createElement(_index2.default, {
        options: {
          chart: {
            type: 'column'
          },
          tooltip: {
            header: 'Today'
          },
          xAxis: {
            categories: ['Apples', 'Oranges', 'Pears', 'Grapes', 'Bananas']
          },
          yAxis: {
            title: {
              text: 'Total fruit consumption'
            }
          },
          series: [{
            name: 'John',
            data: [5, 3, 4, 7, 2]
          }, {
            name: 'Jane',
            data: [2, 2, 3, 2, 1]
          }, {
            name: 'Joe',
            data: [3, 4, 4, 2, 5]
          }]
        }
      })
    ),
    _react2.default.createElement(
      _formGroup2.default,
      { label: 'Map' },
      _react2.default.createElement(_index2.default, {
        options: {
          tooltip: {
            header: 'October 13, 2018',
            valueSuffix: '/kmÂ²'
          },
          colorAxis: {
            max: 300
          },
          series: [{
            joinBy: ['iso-a2', 'code'],
            data: _mapData2.default
          }]
        },
        constructorType: 'mapChart'
      })
    ),
    _react2.default.createElement(
      _formGroup2.default,
      { label: 'Empty' },
      _react2.default.createElement(_index2.default, { state: 'empty' })
    ),
    _react2.default.createElement(
      _formGroup2.default,
      { label: 'Loading' },
      _react2.default.createElement(_index2.default, { state: 'loading' })
    ),
    _react2.default.createElement(
      _formGroup2.default,
      { label: 'Fail' },
      _react2.default.createElement(_index2.default, { state: 'fail', onRefresh: function onRefresh() {} })
    )
  );
};