'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

var _tag = require('../tag');

var _tag2 = _interopRequireDefault(_tag);

var _style = require('./style.css');

var _style2 = _interopRequireDefault(_style);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var cx = _bind2.default.bind(_style2.default);

var TagSelector = function (_PureComponent) {
  _inherits(TagSelector, _PureComponent);

  function TagSelector() {
    _classCallCheck(this, TagSelector);

    return _possibleConstructorReturn(this, (TagSelector.__proto__ || Object.getPrototypeOf(TagSelector)).apply(this, arguments));
  }

  _createClass(TagSelector, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          fields = _props.fields,
          disabled = _props.disabled,
          isSortingDisabled = _props.isSortingDisabled,
          items = _props.items;

      var selectedItems = fields.getAll() || [];
      return _react2.default.createElement(
        'div',
        { className: cx('xsui-tag-selector') },
        items.filter(function (a) {
          return a.required;
        }).sort(function (a, b) {
          return a.label.localeCompare(b.label);
        }).map(function (item) {
          return _react2.default.createElement(
            'div',
            { key: 'locale--' + item.label, className: cx('xsui-tag-selector__item') },
            _react2.default.createElement(
              _tag2.default,
              { selected: true, disabled: disabled, value: item.value },
              item.label
            )
          );
        }),
        items.filter(function (a) {
          return !a.required;
        }).map(function (item) {
          return _extends({}, item, { selected: selectedItems.includes(item.value) });
        }).sort(function (a, b) {
          return isSortingDisabled ? a.label.localeCompare(b.label) : Number(b.selected) - Number(a.selected) || a.label.localeCompare(b.label);
        }).map(function (item) {
          return _react2.default.createElement(
            'div',
            { key: 'locale--' + item.label, className: cx('xsui-tag-selector__item') },
            _react2.default.createElement(
              _tag2.default,
              {
                selected: item.selected,
                disabled: disabled,
                value: item.value,
                onClick: item.selected ? fields.remove.bind(_this2, selectedItems.indexOf(item.value)) : fields.push.bind(_this2, item.value) },
              item.label
            )
          );
        })
      );
    }
  }]);

  return TagSelector;
}(_react.PureComponent);

TagSelector.propTypes = {
  fields: _propTypes2.default.shape({
    getAll: _propTypes2.default.func.isRequired,
    push: _propTypes2.default.func.isRequired,
    remove: _propTypes2.default.func.isRequired
  }).isRequired,
  disabled: _propTypes2.default.bool,
  isSortingDisabled: _propTypes2.default.bool,
  items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    label: _propTypes2.default.string.isRequired,
    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]).isRequired,
    required: _propTypes2.default.bool
  }).isRequired)
};
TagSelector.defaultProps = {
  disabled: false,
  items: [],
  isSortingDisabled: false
};
exports.default = TagSelector;