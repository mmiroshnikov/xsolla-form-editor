'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

var _icon = require('../../icon');

var _icon2 = _interopRequireDefault(_icon);

var _style = require('./style.css');

var _style2 = _interopRequireDefault(_style);

var _input = require('../../input');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var cx = _bind2.default.bind(_style2.default);

var UploadingButton = function UploadingButton(props) {
  var children = props.children,
      input = props.input,
      icon = props.icon,
      renderIcon = props.renderIcon;

  var omitValue = input.value,
      inputProps = _objectWithoutProperties(input, ['value']); // eslint-disable-line

  var customIcon = icon ? _react2.default.createElement(_icon2.default, { name: icon }) : null;
  return _react2.default.createElement(
    'label',
    { className: cx('xsui-uploading-button') },
    renderIcon ? renderIcon() : customIcon,
    _react2.default.createElement('input', _extends({
      type: 'file',
      className: cx('xsui-uploading-button__hidden-input'),
      multiple: false
    }, inputProps)),
    children && children
  );
};

UploadingButton.propTypes = {
  children: function children() {
    return (typeof React$Node === 'function' ? _propTypes2.default.instanceOf(React$Node) : _propTypes2.default.any).apply(this, arguments);
  },
  input: function input() {
    return (typeof _input.bpfrpt_proptype_InputType === 'function' ? _input.bpfrpt_proptype_InputType.isRequired ? _input.bpfrpt_proptype_InputType.isRequired : _input.bpfrpt_proptype_InputType : _propTypes2.default.shape(_input.bpfrpt_proptype_InputType).isRequired).apply(this, arguments);
  },
  icon: _propTypes2.default.string,
  renderIcon: _propTypes2.default.func
};
exports.default = UploadingButton;