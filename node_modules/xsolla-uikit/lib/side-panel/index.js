'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

var _panelHeader = require('./panel-header');

var _panelHeader2 = _interopRequireDefault(_panelHeader);

var _style = require('./style.css');

var _style2 = _interopRequireDefault(_style);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var cx = _bind2.default.bind(_style2.default);
var MAX_SCROLL_OFFSET = 50;
var FIXED_HEADER_CLASSNAME = 'xsui-side-panel__header--fixed';

var SidePanel = function (_Component) {
  _inherits(SidePanel, _Component);

  function SidePanel() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, SidePanel);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SidePanel.__proto__ || Object.getPrototypeOf(SidePanel)).call.apply(_ref, [this].concat(args))), _this), _this.sidePanel = _react2.default.createRef(), _this.header = _react2.default.createRef(), _this.handleScroll = function () {
      var sidePanel = _this.sidePanel.current;
      var header = _this.header.current;

      if (!sidePanel || !header) {
        return;
      }

      if (sidePanel.scrollTop > MAX_SCROLL_OFFSET) {
        header.classList.add(FIXED_HEADER_CLASSNAME);
      } else {
        header.classList.remove(FIXED_HEADER_CLASSNAME);
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(SidePanel, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.sidePanel.current) {
        this.sidePanel.current.addEventListener('scroll', this.handleScroll);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this.sidePanel.current) {
        this.sidePanel.current.removeEventListener('scroll', this.handleScroll);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          isOpen = _props.isOpen,
          title = _props.title,
          children = _props.children,
          onClose = _props.onClose,
          goBack = _props.goBack,
          stepId = _props.stepId;


      return _react2.default.createElement(
        _react.Fragment,
        null,
        _react2.default.createElement('div', { className: cx('xsui-backdrop', isOpen && 'xsui-backdrop--show'), onClick: onClose }),
        _react2.default.createElement(
          'aside',
          {
            className: cx('xsui-side-panel', isOpen && 'xsui-side-panel--open'),
            ref: this.sidePanel },
          _react2.default.createElement(
            'div',
            { className: cx('xsui-side-panel__container') },
            _react2.default.createElement(_panelHeader2.default, {
              title: title,
              onClose: onClose,
              goBack: goBack,
              stepId: stepId,
              headerRef: this.header
            }),
            _react2.default.createElement(
              'div',
              { className: cx('xsui-side-panel__content') },
              children
            )
          )
        )
      );
    }
  }]);

  return SidePanel;
}(_react.Component);

SidePanel.propTypes = {
  isOpen: _propTypes2.default.bool.isRequired,
  title: function title() {
    return (typeof React$Node === 'function' ? _propTypes2.default.instanceOf(React$Node) : _propTypes2.default.any).apply(this, arguments);
  },
  children: function children() {
    return (typeof React$Node === 'function' ? _propTypes2.default.instanceOf(React$Node) : _propTypes2.default.any).apply(this, arguments);
  },
  onClose: _propTypes2.default.func.isRequired,
  goBack: _propTypes2.default.func.isRequired,
  stepId: _propTypes2.default.string
};
exports.default = SidePanel;