'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _button = require('../button');

var _button2 = _interopRequireDefault(_button);

var _index = require('./index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SidePanelExample = function (_PureComponent) {
  _inherits(SidePanelExample, _PureComponent);

  function SidePanelExample() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, SidePanelExample);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SidePanelExample.__proto__ || Object.getPrototypeOf(SidePanelExample)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      isOpen: false,
      stepId: null
    }, _this.onButtonClick = function () {
      _this.setState({
        isOpen: true
      });
    }, _this.onSidePanelClose = function () {
      _this.setState({
        isOpen: false
      });
    }, _this.onGoingBack = function () {
      _this.setState(function (prevState) {
        if (prevState.stepId === null) {
          return prevState;
        }

        return {
          stepId: null
        };
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(SidePanelExample, [{
    key: 'render',
    value: function render() {
      var _state = this.state,
          isOpen = _state.isOpen,
          stepId = _state.stepId;


      return _react2.default.createElement(
        _react.Fragment,
        null,
        _react2.default.createElement(
          _button2.default,
          { onClick: this.onButtonClick },
          'Open'
        ),
        _react2.default.createElement(_index2.default, {
          isOpen: isOpen,
          onClose: this.onSidePanelClose,
          stepId: stepId,
          goBack: this.onGoingBack
        })
      );
    }
  }]);

  return SidePanelExample;
}(_react.PureComponent);

SidePanelExample.propTypes = {};
exports.default = SidePanelExample;