'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _formGroup = require('../form-group');

var _formGroup2 = _interopRequireDefault(_formGroup);

var _index = require('./index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var options = [{ label: 'All items', value: 'all', appearance: 'head' }, { label: 'American Samoa', extraLabel: 'ID-02', value: 1 }, { label: 'Item 2', extraLabel: 'ID-02', value: 2 }, { label: 'Item 3', extraLabel: ['Russian Ruble', 'â‚½'], value: 3 }, { label: 'Item 4', extraLabel: 'ID-04', value: 4 }, { label: 'Item 5', extraLabel: 'ID-05', value: 5 }, { label: 'Item 6', extraLabel: 'ID-06', value: 6 }, { label: 'Item 7', extraLabel: 'ID-07', value: 7 }, { label: 'Item 8', extraLabel: 'ID-08', value: 8 }];

var SelectExample = function (_Component) {
  _inherits(SelectExample, _Component);

  function SelectExample() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, SelectExample);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SelectExample.__proto__ || Object.getPrototypeOf(SelectExample)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      value: null,
      year: 2018
    }, _this.setValue = function (value) {
      return _this.setState({ value: value });
    }, _this.setYear = function (year) {
      return _this.setState({ year: year });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(SelectExample, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'Autosize select', border: true },
          _react2.default.createElement(_index2.default, {
            name: 'xs',
            input: {
              name: 'test',
              value: this.state.value,
              onChange: this.setValue
            },
            options: options,
            autosize: true,
            searchable: true,
            size: 'sm'
          })
        ),
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'With search', border: true },
          _react2.default.createElement(
            'div',
            { style: { maxWidth: 468 } },
            _react2.default.createElement(_index2.default, {
              name: 'with-search',
              input: {
                name: 'test',
                value: this.state.value,
                onChange: this.setValue
              },
              options: options,
              searchable: true
            })
          )
        ),
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'Disabled', border: true },
          _react2.default.createElement(
            'div',
            { style: { maxWidth: 468 } },
            _react2.default.createElement(_index2.default, {
              name: 'disabled',
              input: {
                name: 'test',
                value: this.state.value,
                onChange: this.setValue
              },
              options: options,
              disabled: true
            })
          )
        ),
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'Select with own dropdown icon ', border: true },
          _react2.default.createElement(_index2.default, {
            name: 'xs',
            input: {
              name: 'test',
              value: this.state.value,
              onChange: this.setValue
            },
            autosize: true,
            options: options,
            dropdownIcon: 'add-circle'
          })
        )
      );
    }
  }]);

  return SelectExample;
}(_react.Component);

exports.default = SelectExample;