'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

var _messages = require('../messages');

var _tooltip = require('../tooltip');

var _tooltip2 = _interopRequireDefault(_tooltip);

var _style = require('./style.css');

var _style2 = _interopRequireDefault(_style);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var cx = _bind2.default.bind(_style2.default);

var Checkbox = function Checkbox(_ref) {
  var input = _ref.input,
      meta = _ref.meta,
      appearance = _ref.appearance,
      label = _ref.label,
      tooltip = _ref.tooltip,
      rest = _objectWithoutProperties(_ref, ['input', 'meta', 'appearance', 'label', 'tooltip']);

  return _react2.default.createElement(
    'div',
    {
      className: cx('xsui-checkbox', 'xsui-checkbox--' + appearance, meta.touched && !!meta.error && 'xsui-checkbox--error') },
    _react2.default.createElement(
      'div',
      { className: cx('xsui-checkbox__wrapper') },
      _react2.default.createElement(
        'label',
        { 'data-id': input.name || rest.name, 'data-value': input.value },
        _react2.default.createElement('input', _extends({}, input, rest, {
          className: cx('xsui-checkbox__input', meta.touched && meta.error && 'xsui-checkbox__input--error'),
          name: input.name || rest.name,
          checked: input && !!input.value,
          type: 'checkbox'
        })),
        _react2.default.createElement(
          'div',
          { className: cx('xsui-checkbox__label') },
          label
        )
      ),
      tooltip && _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(_tooltip2.default, { label: tooltip, offset: 'left' })
      )
    ),
    meta.touched && meta.error && _react2.default.createElement(
      _messages.ValidationMessage,
      null,
      meta.error
    )
  );
};

Checkbox.propTypes = {
  input: _propTypes2.default.object,
  meta: _propTypes2.default.shape({
    touched: _propTypes2.default.bool,
    error: _propTypes2.default.any
  }),
  name: _propTypes2.default.string,
  appearance: _propTypes2.default.oneOf(['primary', 'flatten']),
  label: _propTypes2.default.node,
  tooltip: _propTypes2.default.node,
  disabled: _propTypes2.default.bool
};

Checkbox.defaultProps = {
  input: {},
  meta: {
    touched: false,
    error: null
  },
  name: null,
  appearance: 'primary',
  label: null,
  tooltip: null,
  disabled: false
};

exports.default = Checkbox;