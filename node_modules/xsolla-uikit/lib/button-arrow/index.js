'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

var _icon = require('../icon');

var _icon2 = _interopRequireDefault(_icon);

var _button = require('../button');

var _button2 = _interopRequireDefault(_button);

var _style = require('./style.css');

var _style2 = _interopRequireDefault(_style);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var cx = _bind2.default.bind(_style2.default);

var ButtonArrow = function ButtonArrow(_ref) {
  var focused = _ref.focused,
      buttonOnClick = _ref.buttonOnClick,
      onClick = _ref.onClick,
      rest = _objectWithoutProperties(_ref, ['focused', 'buttonOnClick', 'onClick']);

  return _react2.default.createElement(
    'div',
    { className: cx('xsui-button-wrapper') },
    _react2.default.createElement(_button2.default, _extends({}, rest, {
      offset: rest.fetching ? 'arrow-fetching-both' : 'right',
      onClick: buttonOnClick
    })),
    _react2.default.createElement(
      'div',
      {
        className: cx('xsui-button-wrapper__trigger', 'xsui-button-wrapper__trigger--appearance-' + rest.appearance, rest.fetching && 'xsui-button-wrapper__trigger--fetching', rest.disabled && 'xsui-button-wrapper__trigger--disabled', focused && 'xsui-button-wrapper__trigger--focused'),
        onClick: onClick },
      _react2.default.createElement(_icon2.default, { name: 'expand' })
    )
  );
};

ButtonArrow.propTypes = _button2.default.propTypes;
ButtonArrow.defaultProps = _button2.default.defaultProps;

exports.default = ButtonArrow;