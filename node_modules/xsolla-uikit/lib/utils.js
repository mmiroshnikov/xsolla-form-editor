"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * We can check if the element is in the page.
 * @param element
 * @param bottomOffset
 * @returns {boolean}
 */
var visibleInPage = exports.visibleInPage = function visibleInPage(element) {
  var bottomOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 32;

  if (!element) {
    return false;
  }

  var bounding = element.getBoundingClientRect();
  var bottom = bounding.bottom + bottomOffset <= document.documentElement.clientHeight;
  var top = bounding.height + bottomOffset <= bounding.top;

  return bounding.top >= 0 && bounding.left >= 0 && (!bottom && !top || bottom);
};

var dropdownVisible = exports.dropdownVisible = function dropdownVisible(container) {
  var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (!container) {
    return false;
  }

  var bounding = container.getBoundingClientRect();

  if (element) {
    return document.documentElement.clientHeight - bounding.bottom >= bounding.height + element.current.clientHeight || !(bounding.top > 0);
  }

  return document.documentElement.clientHeight - bounding.bottom >= 0 || !(bounding.bottom - bounding.top >= bounding.height);
};

var needChangeSide = exports.needChangeSide = function needChangeSide(element) {
  if (!element) {
    return false;
  }

  var bounding = element.getBoundingClientRect();

  return bounding.right > document.documentElement.clientWidth && bounding.left > bounding.width;
};

// Exec callback on next render frame
var onNextFrame = exports.onNextFrame = function onNextFrame(callback) {
  window.requestAnimationFrame(function () {
    return window.requestAnimationFrame(callback);
  });
};