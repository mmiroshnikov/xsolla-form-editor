'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bpfrpt_proptype_AssignToColleague = exports.bpfrpt_proptype_AssignToAM = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _index = require('../../../index');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var bpfrpt_proptype_AssignToAM = {
  disabled: _propTypes2.default.bool.isRequired,
  label: _propTypes2.default.string.isRequired,
  description: _propTypes2.default.string.isRequired,
  sentDescription: _propTypes2.default.string.isRequired
};
var bpfrpt_proptype_AssignToColleague = {
  label: _propTypes2.default.string.isRequired,
  description: _propTypes2.default.string.isRequired,
  show: _propTypes2.default.bool.isRequired
};


var UpsellDropdown = function UpsellDropdown(_ref) {
  var onLater = _ref.onLater,
      onRequestHelp = _ref.onRequestHelp,
      onAssignToColleague = _ref.onAssignToColleague,
      showLater = _ref.showLater,
      assignToAM = _ref.assignToAM,
      assignToColleague = _ref.assignToColleague,
      hideCardLabel = _ref.hideCardLabel,
      children = _ref.children,
      _ref$trigger = _ref.trigger,
      trigger = _ref$trigger === undefined ? 'hover' : _ref$trigger,
      _ref$align = _ref.align,
      align = _ref$align === undefined ? 'right-half-back' : _ref$align,
      _ref$position = _ref.position,
      position = _ref$position === undefined ? 'top' : _ref$position,
      _ref$size = _ref.size,
      size = _ref$size === undefined ? 'sm' : _ref$size;

  var options = [{
    label: assignToAM.label,
    align: 'left',
    description: assignToAM.disabled ? assignToAM.sentDescription : assignToAM.description,
    customIcon: _react2.default.createElement(_index.Icon, { name: 'message' }),
    onClick: function onClick() {
      onRequestHelp();
    },
    disabled: assignToAM.disabled,
    separated: true
  }];

  if (assignToColleague.show) {
    options.unshift({
      label: assignToColleague.label,
      align: 'left',
      description: assignToColleague.description,
      customIcon: _react2.default.createElement(_index.Icon, { name: 'profile' }),
      onClick: function onClick() {
        onAssignToColleague();
      }
    });
  }

  if (showLater) {
    options.push({
      label: hideCardLabel,
      onClick: onLater
    });
  }

  return _react2.default.createElement(
    _index.Dropdown,
    { trigger: trigger, align: align, position: position, size: size, options: options },
    children
  );
};

UpsellDropdown.propTypes = {
  onLater: _propTypes2.default.func,
  onRequestHelp: _propTypes2.default.func.isRequired,
  onAssignToColleague: _propTypes2.default.func.isRequired,
  showLater: _propTypes2.default.bool,
  assignToAM: _propTypes2.default.shape({
    disabled: _propTypes2.default.bool.isRequired,
    label: _propTypes2.default.string.isRequired,
    description: _propTypes2.default.string.isRequired,
    sentDescription: _propTypes2.default.string.isRequired
  }),
  assignToColleague: _propTypes2.default.shape({
    label: _propTypes2.default.string.isRequired,
    description: _propTypes2.default.string.isRequired,
    show: _propTypes2.default.bool.isRequired
  }),
  hideCardLabel: _propTypes2.default.string,
  children: function children() {
    return (typeof React$Node === 'function' ? _propTypes2.default.instanceOf(React$Node).isRequired : _propTypes2.default.any.isRequired).apply(this, arguments);
  },
  trigger: _propTypes2.default.oneOf(['click', 'hover']),
  align: _propTypes2.default.oneOf(['left', 'left-half', 'left-half-back', 'right', 'right-half', 'right-half-back']),
  position: _propTypes2.default.oneOf(['top', 'bottom']),
  size: _propTypes2.default.oneOf(['sm', 'md', 'lg'])
};
UpsellDropdown.defaultProps = {
  assignToAM: {},
  assignToColleague: {}
};

exports.default = UpsellDropdown;
exports.bpfrpt_proptype_AssignToAM = bpfrpt_proptype_AssignToAM;
exports.bpfrpt_proptype_AssignToColleague = bpfrpt_proptype_AssignToColleague;