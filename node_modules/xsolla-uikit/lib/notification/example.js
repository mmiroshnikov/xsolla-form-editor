'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _formGroup = require('../form-group');

var _formGroup2 = _interopRequireDefault(_formGroup);

var _index = require('./index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var NotificationExample = function (_PureComponent) {
  _inherits(NotificationExample, _PureComponent);

  function NotificationExample() {
    _classCallCheck(this, NotificationExample);

    return _possibleConstructorReturn(this, (NotificationExample.__proto__ || Object.getPrototypeOf(NotificationExample)).apply(this, arguments));
  }

  _createClass(NotificationExample, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _react.Fragment,
        null,
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'Default appearance' },
          _react2.default.createElement(
            _index2.default,
            { title: 'Success', status: 'success', icon: true },
            'Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugit et tempore quidem maiores? Doloribus, fugit!'
          ),
          _react2.default.createElement(
            _index2.default,
            { title: 'Warning', status: 'warning', icon: true },
            'Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugit et tempore quidem maiores? Doloribus, fugit!'
          ),
          _react2.default.createElement(
            _index2.default,
            { title: 'Error', status: 'error', icon: true },
            'Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugit et tempore quidem maiores? Doloribus, fugit!'
          ),
          _react2.default.createElement(
            _index2.default,
            { title: 'Info', status: 'info', icon: true },
            'Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugit et tempore quidem maiores? Doloribus, fugit!'
          )
        ),
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'Float Default appearance', tooltip: 'Usage as a popup notification' },
          _react2.default.createElement(
            _index2.default,
            { title: 'Payment method is activated', status: 'info', icon: true, float: true },
            'Lorem ipsum dolor sit amet.'
          )
        ),
        _react2.default.createElement(
          _formGroup2.default,
          {
            label: 'Simple appearance',
            tooltip: 'This one always has icon. Should be used without `title` and `float` options.' },
          _react2.default.createElement(
            _index2.default,
            { appearance: 'simple', status: 'warning' },
            'A newer version of the API is available. ',
            _react2.default.createElement(
              'a',
              { href: '#' },
              'Learn more'
            )
          )
        ),
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'Minimal appearance' },
          _react2.default.createElement(
            _index2.default,
            { appearance: 'minimal', status: 'success' },
            'A newer version of the API is available. ',
            _react2.default.createElement(
              'a',
              { href: '#' },
              'Learn more'
            )
          )
        ),
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'String appearance', tooltip: 'Usage as a validation message' },
          _react2.default.createElement(
            _index2.default,
            { appearance: 'string', status: 'error' },
            'Please enter correct E-Mail address'
          )
        )
      );
    }
  }]);

  return NotificationExample;
}(_react.PureComponent);

exports.default = NotificationExample;