'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

var _radio = require('../radio');

var _radio2 = _interopRequireDefault(_radio);

var _messages = require('../messages');

var _style = require('./style.css');

var _style2 = _interopRequireDefault(_style);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var cx = _bind2.default.bind(_style2.default);

var RadioGroup = function RadioGroup(_ref) {
  var input = _ref.input,
      options = _ref.options,
      direction = _ref.direction,
      disabled = _ref.disabled,
      meta = _ref.meta,
      rest = _objectWithoutProperties(_ref, ['input', 'options', 'direction', 'disabled', 'meta']);

  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement(
      'div',
      {
        className: cx('xsui-radio_group__wrapper', 'xsui-radio_group__wrapper--direction-' + direction) },
      options.map(function (option, index) {
        return _react2.default.createElement(
          'label',
          {
            key: 'radio-option-' + index,
            className: cx('xsui-radio_group__items--background', option.radioValue === input.value && 'xsui-radio_group__items--background-selected', disabled && 'xsui-radio_group__items--background-disabled') },
          _react2.default.createElement(_radio2.default, _extends({
            disabled: disabled
          }, rest, option, {
            input: {
              name: input.name,
              value: input.value,
              onChange: input.onChange
            }
          })),
          direction === 'column' && option.description && _react2.default.createElement(
            'div',
            { className: cx('xsui-radio_group__items--description') },
            option.description
          )
        );
      })
    ),
    meta.touched && meta.error && _react2.default.createElement(
      _messages.ValidationMessage,
      null,
      meta.error
    )
  );
};

RadioGroup.propTypes = {
  input: _propTypes2.default.object,
  meta: _propTypes2.default.shape({
    touched: _propTypes2.default.bool,
    error: _propTypes2.default.any
  }),
  direction: _propTypes2.default.oneOf(['column', 'row']),
  disabled: _propTypes2.default.bool,
  options: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    label: _propTypes2.default.node.isRequired,
    description: _propTypes2.default.string,
    radioValue: _propTypes2.default.any.isRequired
  })).isRequired
};

RadioGroup.defaultProps = {
  meta: {
    touched: false,
    error: null
  },
  direction: 'column',
  disabled: false,
  options: []
};

exports.default = RadioGroup;