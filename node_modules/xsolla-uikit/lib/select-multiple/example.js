'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _formGroup = require('../form-group');

var _formGroup2 = _interopRequireDefault(_formGroup);

var _index = require('./index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SelectExample = function (_Component) {
  _inherits(SelectExample, _Component);

  function SelectExample() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, SelectExample);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SelectExample.__proto__ || Object.getPrototypeOf(SelectExample)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      platforms: []
    }, _this.platforms = [{ label: 'Windows', value: 'windows' }, { label: 'Linux', value: 'linux' }, { label: 'Mac', value: 'mac' }, { label: 'Mac', value: 'mac2' }, { label: 'Mac', value: 'mac3' }, { label: 'Mac', value: 'mac4' }, { label: 'Mac', value: 'mac5' }, { label: 'Mac', value: 'mac6' }, { label: 'Mac', value: 'mac7' }], _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(SelectExample, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'Basic multiple select', style: { width: 468 } },
          _react2.default.createElement(_index2.default, {
            name: 'values',
            options: this.platforms,
            fields: {
              getAll: function getAll() {
                return _this2.state.platforms;
              },
              push: function push(a) {
                return _this2.setState({ platforms: [].concat(_toConsumableArray(_this2.state.platforms), [a]) });
              },
              remove: function remove(index) {
                var platforms = [].concat(_toConsumableArray(_this2.state.platforms));
                platforms.splice(index, 1);
                _this2.setState({ platforms: platforms });
              }
            }
          })
        )
      );
    }
  }]);

  return SelectExample;
}(_react.Component);

exports.default = SelectExample;