'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

var _validation = require('../messages/validation');

var _validation2 = _interopRequireDefault(_validation);

var _style = require('../input/style.css');

var _style2 = _interopRequireDefault(_style);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var cx = _bind2.default.bind(_style2.default);

var Textarea = function Textarea(_ref) {
  var input = _ref.input,
      meta = _ref.meta,
      size = _ref.size,
      focused = _ref.focused,
      rest = _objectWithoutProperties(_ref, ['input', 'meta', 'size', 'focused']);

  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement('textarea', _extends({}, input, rest, {
      className: cx('xsui-input', 'xsui-input--size-' + size, focused && 'xsui-input--focused', meta.touched && meta.error && 'xsui-input--error'),
      name: input.name || rest.name,
      children: input.value,
      'data-id': input.name
    })),
    meta.touched && meta.error && _react2.default.createElement(
      _validation2.default,
      null,
      meta.error
    )
  );
};

Textarea.propTypes = {
  input: _propTypes2.default.object,
  meta: _propTypes2.default.shape({
    touched: _propTypes2.default.bool,
    error: _propTypes2.default.any
  }),
  name: _propTypes2.default.string,
  size: _propTypes2.default.oneOf(['xs', 'sm', 'md']),
  focused: _propTypes2.default.bool,
  defaultValue: _propTypes2.default.any,
  placeholder: _propTypes2.default.string,
  disabled: _propTypes2.default.bool,
  rows: _propTypes2.default.number
};

Textarea.defaultProps = {
  input: {},
  meta: {
    touched: false,
    error: null
  },
  name: null,
  size: 'md',
  focused: false,
  placeholder: null,
  disabled: false,
  rows: 5
};

exports.default = Textarea;