'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _formGroup = require('../form-group');

var _formGroup2 = _interopRequireDefault(_formGroup);

var _ = require('.');

var _2 = _interopRequireDefault(_);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SwitchExample = function (_Component) {
  _inherits(SwitchExample, _Component);

  function SwitchExample() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, SwitchExample);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SwitchExample.__proto__ || Object.getPrototypeOf(SwitchExample)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      fetching: false,
      value: false
    }, _this.toggleFetching = function () {
      return _this.setState({ fetching: !_this.state.fetching });
    }, _this.toggleValue = function () {
      return _this.setState({ value: !_this.state.value });
    }, _this.toggleValueDelay = function () {
      _this.toggleFetching();
      setTimeout(function () {
        _this.toggleValue();
        _this.toggleFetching();
      }, 700);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(SwitchExample, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'Basic', indentation: 'lg' },
          _react2.default.createElement(_2.default, {
            name: 'switch_1',
            input: {
              value: this.state.value,
              onChange: this.toggleValue
            }
          })
        ),
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'Disabled', indentation: 'lg' },
          _react2.default.createElement(_2.default, {
            name: 'switch_2',
            input: {
              value: this.state.value,
              onChange: this.toggleValue
            },
            label: 'Disabled label',
            disabled: true
          })
        ),
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'Fetching', indentation: 'lg' },
          _react2.default.createElement(_2.default, {
            name: 'switch_3',
            input: {
              value: this.state.value,
              onChange: this.toggleValueDelay
            },
            label: '\u041B\u043E\u043A\u0430\u043B\u0438\u0437\u043E\u0432\u0430\u043D\u044B\u0439 \u0441\u0432\u0438\u0442\u0447\u0435\u0440',
            tooltip: 'Tooltip message',
            tooltipInteractive: true,
            fetching: this.state.fetching
          })
        ),
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'With error', indentation: 'lg' },
          _react2.default.createElement(_2.default, {
            label: 'With error',
            input: {
              value: this.state.value,
              onChange: this.toggleValue
            },
            meta: {
              touched: true,
              error: 'Error message'
            }
          })
        ),
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'With sublabel', indentation: 'lg' },
          _react2.default.createElement(_2.default, {
            input: {
              value: this.state.value,
              onChange: this.toggleValue
            },
            label: 'With sublabel',
            sublabel: _react2.default.createElement(
              'div',
              null,
              'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec elementum tortor a metus rutrum, consequat ultricies elit pellentesque. Donec ut magna pharetra, ornare orci non, tincidunt ex. Nunc nisl turpis, hendrerit ut ex eget, euismod pharetra metus.',
              ' ',
              _react2.default.createElement(
                'a',
                { href: 'https://example.com', target: '_blank' },
                'Phasellus et est sagittis'
              ),
              ', porttitor magna et, dapibus augue. Nullam neque mauris, interdum at lacus sit amet, faucibus rutrum neque. Donec fringilla dapibus lacinia.'
            ),
            tooltip: 'Tooltip',
            fetching: this.state.fetching
          })
        )
      );
    }
  }]);

  return SwitchExample;
}(_react.Component);

exports.default = SwitchExample;