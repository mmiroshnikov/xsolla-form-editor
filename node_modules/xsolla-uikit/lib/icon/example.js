'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _index = require('./index');

var _index2 = _interopRequireDefault(_index);

var _formGroup = require('../form-group');

var _formGroup2 = _interopRequireDefault(_formGroup);

var _input = require('../input');

var _input2 = _interopRequireDefault(_input);

var _xsollaIcons = require('../_fonts/xsolla-icons.json');

var _xsollaIcons2 = _interopRequireDefault(_xsollaIcons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RenderIcon = function RenderIcon(_ref) {
  var name = _ref.name;
  return _react2.default.createElement(
    'div',
    { style: { width: 200, margin: 16 } },
    _react2.default.createElement(
      'div',
      null,
      _react2.default.createElement(
        'span',
        {
          style: {
            border: '1px solid rgba(0, 0, 0, 0.1)',
            display: 'inline-flex',
            padding: 3,
            width: 32,
            height: 32,
            borderRadius: 4
          } },
        _react2.default.createElement(_index2.default, { name: name, size: 24 })
      )
    ),
    _react2.default.createElement(
      'div',
      { style: { fontSize: 12 } },
      name
    )
  );
};

RenderIcon.propTypes = {
  name: _propTypes2.default.string
};

var ExampleIcons = function (_PureComponent) {
  _inherits(ExampleIcons, _PureComponent);

  function ExampleIcons() {
    var _ref2;

    var _temp, _this, _ret;

    _classCallCheck(this, ExampleIcons);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = ExampleIcons.__proto__ || Object.getPrototypeOf(ExampleIcons)).call.apply(_ref2, [this].concat(args))), _this), _this.state = {
      search: ''
    }, _this.handleSearch = function (e) {
      return _this.setState({ search: e.target.value });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ExampleIcons, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var filteredIcons = _xsollaIcons2.default.filter(function (name) {
        return !_this2.state.search || name.indexOf(_this2.state.search) > -1;
      });

      return _react2.default.createElement(
        _react.Fragment,
        null,
        _react2.default.createElement(
          _formGroup2.default,
          { label: 'Search', border: !!filteredIcons.length },
          _react2.default.createElement(_input2.default, {
            input: {
              name: 'icon',
              value: this.state.search,
              onChange: this.handleSearch
            },
            size: 'sm',
            inline: true,
            placeholder: 'Enter icon name',
            offset: 'left',
            icon: 'search'
          })
        ),
        _react2.default.createElement(
          'div',
          { style: { display: 'flex', flexWrap: 'wrap', margin: -16 } },
          filteredIcons.map(function (name) {
            return _react2.default.createElement(RenderIcon, { key: 'icon--' + name, name: name });
          })
        )
      );
    }
  }]);

  return ExampleIcons;
}(_react.PureComponent);

exports.default = ExampleIcons;